.intel_syntax noprefix
.align 16
.section .rdata

.macro _RTTIBaseClassDescriptor name num_base_classes type
    .global ??_R1A@?0A@A@\name@@8
_RTTIBaseClassDescriptor__\name:
??_R1A@?0A@A@\name@@8:
    .long ??_R0?A\type\name@@@8
    .long \num_base_classes
    .long 0x00000000
    .long 0xFFFFFFFF
    .long 0x00000000
    .long 0x00000000
.endm

.macro RTTIBaseClassDescriptor name num_base_classes
    _RTTIBaseClassDescriptor \name \num_base_classes V
.endm

.macro RTTIBaseClassDescriptorStruct name num_base_classes
    _RTTIBaseClassDescriptor \name \num_base_classes U
.endm

.macro RTTIBaseClassArray name
    .global ??_R2\name@@8
??_R2\name@@8:
    .long ??_R1A@?0A@A@\name@@8
.endm

.macro RTTIClassHierarchyDescriptor name num_base_classes
    .global ??_R3\name@@8
??_R3\name@@8:
    .long 0                  // signature
    .long 0                  // attributes
    .long \num_base_classes  // numBaseClasses
    .long ??_R2\name@@8      // pBaseClassArray
.endm

.macro _RTTICompleteObjectLocator name type
    .global ??_R4\name@@6B@
??_R4\name@@6B@:
    .long 0                  // signature
    .long 0                  // offset
    .long 0                  // cdOffset
    .long ??_R0?A\type\name@@@8  // pTypeDescriptor
    .long ??_R3\name@@8      // pClassDescriptor
.endm

.macro RTTICompleteObjectLocator name
    _RTTICompleteObjectLocator \name V
.endm

.macro RTTICompleteObjectLocatorStruct name
    _RTTICompleteObjectLocator \name U
.endm

.long 0x00000000                                                                                                   // [0xfd2d4] 0x008a9000 + 0xfd2d4 = 0x009a62d4

RTTIBaseClassArray Base                                                                                            // [0xfd2d8] 0x008a9000 + 0xfd2d8 = 0x009a62d8
.long 0x00000000

RTTIClassHierarchyDescriptor Base 1                                                                                // [0xfd2e0] 0x008a9000 + 0xfd2e0 = 0x009a62e0
RTTICompleteObjectLocator Base                                                                                     // [0xfd2f0] 0x008a9000 + 0xfd2f0 = 0x009a62f0
.long 0x00000000                                                                                                   // [0xfd300] 0x008a9000 + 0xfd300 = 0x009a6300

RTTIBaseClassDescriptor Base 0                                                                                     // [0xfd300] 0x008a9000 + 0xfd300 = 0x009a6300
RTTIBaseClassDescriptor GBaseInfo 1                                                                                // [0xfd320] 0x008a9000 + 0xfd320 = 0x009a6320
RTTIBaseClassDescriptor GObjectInfo 2                                                                              // [0xfd338] 0x008a9000 + 0xfd338 = 0x009a6338
RTTIBaseClassDescriptor GMultiMapFixedInfo 3                                                                       // [0xfd350] 0x008a9000 + 0xfd350 = 0x009a6350
RTTIBaseClassDescriptor GAbodeInfo 4                                                                               // [0xfd368] 0x008a9000 + 0xfd368 = 0x009a6368

RTTIBaseClassArray GAbodeInfo                                                                                      // [0xfd380] 0x008a9000 + 0xfd380 = 0x009a6380
.long ??_R1A@?0A@A@GMultiMapFixedInfo@@8
.long ??_R1A@?0A@A@GObjectInfo@@8
.long ??_R1A@?0A@A@GBaseInfo@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000

RTTIClassHierarchyDescriptor GAbodeInfo 5                                                                          // [0xfd398] 0x008a9000 + 0xfd398 = 0x009a6398
RTTICompleteObjectLocator GAbodeInfo                                                                               // [0xfd3a8] 0x008a9000 + 0xfd3a8 = 0x009a63a8
.long 0x00000000

RTTIBaseClassDescriptor GameThing 1                                                                                // [0xfd3c0] 0x008a9000 + 0xfd3c0 = 0x009a63c0
RTTIBaseClassDescriptor GameThingWithPos 2                                                                         // [0xfd3d8] 0x008a9000 + 0xfd3d8 = 0x009a63d8
RTTIBaseClassDescriptor Object 3                                                                                   // [0xfd3f0] 0x008a9000 + 0xfd3f0 = 0x009a63f0
RTTIBaseClassDescriptor Fixed 4                                                                                    // [0xfd408] 0x008a9000 + 0xfd408 = 0x009a6408
RTTIBaseClassDescriptor MultiMapFixed 5                                                                            // [0xfd420] 0x008a9000 + 0xfd420 = 0x009a6420
RTTIBaseClassDescriptor Abode 6                                                                                    // [0xfd438] 0x008a9000 + 0xfd438 = 0x009a6438

RTTIBaseClassArray Abode                                                                                           // [0xfd450] 0x008a9000 + 0xfd450 = 0x009a6450
.long ??_R1A@?0A@A@MultiMapFixed@@8
.long ??_R1A@?0A@A@Fixed@@8
.long ??_R1A@?0A@A@Object@@8
.long ??_R1A@?0A@A@GameThingWithPos@@8
.long ??_R1A@?0A@A@GameThing@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000

RTTIClassHierarchyDescriptor Abode 7                                                                               // [0xfd470] 0x008a9000 + 0xfd470 = 0x009a6470
RTTICompleteObjectLocator Abode                                                                                    // [0xfd480] 0x008a9000 + 0xfd480 = 0x009a6480
.long 0x00000000

RTTIBaseClassDescriptor PlannedMultiMapFixed 3                                                                     // [0xfd498] 0x008a9000 + 0xfd498 = 0x009a6498
RTTIBaseClassDescriptor PlannedAbode 4                                                                             // [0xfd4b0] 0x008a9000 + 0xfd4b0 = 0x009a64b0

RTTIBaseClassArray PlannedAbode                                                                                    // [0xfd450] 0x008a9000 + 0xfd450 = 0x009a6450
.long ??_R1A@?0A@A@PlannedMultiMapFixed@@8
.long ??_R1A@?0A@A@GameThingWithPos@@8
.long ??_R1A@?0A@A@GameThing@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000

RTTIClassHierarchyDescriptor PlannedAbode 5                                                                        // [0xfd4e0] 0x008a9000 + 0xfd4e0 = 0x009a64e0
RTTICompleteObjectLocator PlannedAbode                                                                             // [0xfd4f0] 0x008a9000 + 0xfd4f0 = 0x009a64f0
.long 0x00000000

RTTIBaseClassDescriptor Windmill 7                                                                                 // [0xfd508] 0x008a9000 + 0xfd508 = 0x009a6508

RTTIBaseClassArray Windmill                                                                                        // [0xfd520] 0x008a9000 + 0xfd520 = 0x009a6520
.long ??_R1A@?0A@A@Abode@@8
.long ??_R1A@?0A@A@MultiMapFixed@@8
.long ??_R1A@?0A@A@Fixed@@8
.long ??_R1A@?0A@A@Object@@8
.long ??_R1A@?0A@A@GameThingWithPos@@8
.long ??_R1A@?0A@A@GameThing@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000
.long 0x00000000

RTTIClassHierarchyDescriptor Windmill 8                                                                            // [0xfd548] 0x008a9000 + 0xfd548 = 0x009a6548
RTTICompleteObjectLocator Windmill                                                                                 // [0xfd558] 0x008a9000 + 0xfd558 = 0x009a6558
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupControl 0                                                                       // [0xfd570] 0x008a9000 + 0xfd570 = 0x009a6570

RTTIBaseClassArray SetupControl                                                                                    // [0xfd588] 0x008a9000 + 0xfd588 = 0x009a6588
.long 0x00000000

RTTIClassHierarchyDescriptor SetupControl 1                                                                        // [0xfd590] 0x008a9000 + 0xfd590 = 0x009a6590
RTTICompleteObjectLocatorStruct SetupControl                                                                       // [0xfd5a0] 0x008a9000 + 0xfd5a0 = 0x009a65a0
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupButton 1                                                                        // [0xfd5b8] 0x008a9000 + 0xfd5b8 = 0x009a65b8

RTTIBaseClassArray SetupButton                                                                                     // [0xfd5d0] 0x008a9000 + 0xfd5d0 = 0x009a65d0
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000
.long 0x00000000

RTTIClassHierarchyDescriptor SetupButton 2                                                                         // [0xfd5e0] 0x008a9000 + 0xfd5e0 = 0x009a65e0
RTTICompleteObjectLocatorStruct SetupButton                                                                        // [0xfd5f0] 0x008a9000 + 0xfd5f0 = 0x009a65f0
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupSlider 1                                                                        // [0xfd608] 0x008a9000 + 0xfd608 = 0x009a6608

RTTIBaseClassArray SetupSlider                                                                                     // [0xfd620] 0x008a9000 + 0xfd620 = 0x009a6620
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000
.long 0x00000000

RTTIClassHierarchyDescriptor SetupSlider 2                                                                         // [0xfd630] 0x008a9000 + 0xfd630 = 0x009a6630
RTTICompleteObjectLocatorStruct SetupSlider                                                                        // [0xfd640] 0x008a9000 + 0xfd640 = 0x009a6640
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupList 1                                                                          // [0xfd658] 0x008a9000 + 0xfd658 = 0x009a6658
RTTIBaseClassArray SetupList                                                                                       // [0xfd660] 0x008a9000 + 0xfd660 = 0x009a6660
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000
.long 0x00000000

RTTIClassHierarchyDescriptor SetupList 2                                                                           // [0xfd680] 0x008a9000 + 0xfd680 = 0x009a6680
RTTICompleteObjectLocatorStruct SetupList                                                                          // [0xfd690] 0x008a9000 + 0xfd690 = 0x009a6690
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupMultiList 2                                                                     // [0xfd6a8] 0x008a9000 + 0xfd6a8 = 0x009a66a8
RTTIBaseClassArray SetupMultiList                                                                                  // [0xfd6c0] 0x008a9000 + 0xfd6c0 = 0x009a66c0
.long ??_R1A@?0A@A@SetupList@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupMultiList 3                                                                      // [0xfd6d0] 0x008a9000 + 0xfd6d0 = 0x009a66d0
RTTICompleteObjectLocatorStruct SetupMultiList                                                                     // [0xfd6e0] 0x008a9000 + 0xfd6e0 = 0x009a66e0
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupEdit 1                                                                          // [0xfd6f8] 0x008a9000 + 0xfd6f8 = 0x009a66f8
RTTIBaseClassArray SetupEdit                                                                                       // [0xfd710] 0x008a9000 + 0xfd710 = 0x009a6710
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000
.long 0x00000000

RTTIClassHierarchyDescriptor SetupEdit 2                                                                           // [0xfd720] 0x008a9000 + 0xfd720 = 0x009a6720
RTTICompleteObjectLocatorStruct SetupEdit                                                                          // [0xfd730] 0x008a9000 + 0xfd730 = 0x009a6730
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupBigButton 2                                                                     // [0xfd748] 0x008a9000 + 0xfd748 = 0x009a6748
RTTIBaseClassArray SetupBigButton                                                                                  // [0xfd760] 0x008a9000 + 0xfd760 = 0x009a6760
.long ??_R1A@?0A@A@SetupButton@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupBigButton 3                                                                      // [0xfd770] 0x008a9000 + 0xfd770 = 0x009a6770
RTTICompleteObjectLocatorStruct SetupBigButton                                                                     // [0xfd780] 0x008a9000 + 0xfd780 = 0x009a6780
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupHLineGraph 2                                                                    // [0xfd798] 0x008a9000 + 0xfd798 = 0x009a6798
RTTIBaseClassArray SetupHLineGraph                                                                                 // [0xfd7b0] 0x008a9000 + 0xfd7b0 = 0x009a67b0
.long ??_R1A@?0A@A@SetupButton@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupHLineGraph 3                                                                     // [0xfd7c0] 0x008a9000 + 0xfd7c0 = 0x009a67c0
RTTICompleteObjectLocatorStruct SetupHLineGraph                                                                    // [0xfd7d0] 0x008a9000 + 0xfd7d0 = 0x009a67d0
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupVBarGraph 2                                                                     // [0xfd7e8] 0x008a9000 + 0xfd7e8 = 0x009a67e8
RTTIBaseClassArray SetupVBarGraph                                                                                  // [0xfd800] 0x008a9000 + 0xfd800 = 0x009a6800
.long ??_R1A@?0A@A@SetupButton@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupVBarGraph 3                                                                      // [0xfd810] 0x008a9000 + 0xfd810 = 0x009a6810
RTTICompleteObjectLocatorStruct SetupVBarGraph                                                                     // [0xfd820] 0x008a9000 + 0xfd820 = 0x009a6820
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupTabButton 2                                                                     // [0xfd838] 0x008a9000 + 0xfd838 = 0x009a6838
RTTIBaseClassArray SetupTabButton                                                                                  // [0xfd850] 0x008a9000 + 0xfd850 = 0x009a6850
.long ??_R1A@?0A@A@SetupButton@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupTabButton 3                                                                      // [0xfd860] 0x008a9000 + 0xfd860 = 0x009a6860
RTTICompleteObjectLocatorStruct SetupTabButton                                                                     // [0xfd870] 0x008a9000 + 0xfd870 = 0x009a6870
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupPicture 2                                                                       // [0xfd888] 0x008a9000 + 0xfd888 = 0x009a6888
RTTIBaseClassArray SetupPicture                                                                                    // [0xfd8a0] 0x008a9000 + 0xfd8a0 = 0x009a68a0
.long ??_R1A@?0A@A@SetupButton@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupPicture 3                                                                        // [0xfd8b0] 0x008a9000 + 0xfd8b0 = 0x009a68b0
RTTICompleteObjectLocatorStruct SetupPicture                                                                       // [0xfd8c0] 0x008a9000 + 0xfd8c0 = 0x009a68c0
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupColourPicker 2                                                                  // [0xfd8d8] 0x008a9000 + 0xfd8d8 = 0x009a68d8
RTTIBaseClassArray SetupColourPicker                                                                               // [0xfd8f0] 0x008a9000 + 0xfd8f0 = 0x009a68f0
.long ??_R1A@?0A@A@SetupButton@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupColourPicker 3                                                                   // [0xfd900] 0x008a9000 + 0xfd900 = 0x009a6900
RTTICompleteObjectLocatorStruct SetupColourPicker                                                                  // [0xfd910] 0x008a9000 + 0xfd910 = 0x009a6910
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupCheckBox 2                                                                      // [0xfd928] 0x008a9000 + 0xfd928 = 0x009a6928
RTTIBaseClassArray SetupCheckBox                                                                                   // [0xfd940] 0x008a9000 + 0xfd940 = 0x009a6940
.long ??_R1A@?0A@A@SetupButton@@8
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000

RTTIClassHierarchyDescriptor SetupCheckBox 3                                                                       // [0xfd950] 0x008a9000 + 0xfd950 = 0x009a6950
RTTICompleteObjectLocatorStruct SetupCheckBox                                                                      // [0xfd960] 0x008a9000 + 0xfd960 = 0x009a6960
.long 0x00000000

RTTIBaseClassDescriptorStruct SetupStaticText 1                                                                    // [0xfd978] 0x008a9000 + 0xfd978 = 0x009a6978
RTTIBaseClassArray SetupStaticText                                                                                 // [0xfd990] 0x008a9000 + 0xfd990 = 0x009a6990
.long ??_R1A@?0A@A@SetupControl@@8
.long 0x00000000
.long 0x00000000

RTTIClassHierarchyDescriptor SetupStaticText 2                                                                     // [0xfd9a0] 0x008a9000 + 0xfd9a0 = 0x009a69a0
RTTICompleteObjectLocatorStruct SetupStaticText                                                                    // [0xfd9b0] 0x008a9000 + 0xfd9b0 = 0x009a69b0
.long 0x00000000

RTTIBaseClassDescriptor GAlignmentInfo 2                                                                           // [0xfd9c8] 0x008a9000 + 0xfd9c8 = 0x009a69c8
RTTIBaseClassArray GAlignmentInfo                                                                                  // [0xfd9e0] 0x008a9000 + 0xfd9e0 = 0x009a69e0
.long ??_R1A@?0A@A@GBaseInfo@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000

RTTIClassHierarchyDescriptor GAlignmentInfo 3                                                                      // [0xfd9f0] 0x008a9000 + 0xfd9f0 = 0x009a69f0
RTTICompleteObjectLocator GAlignmentInfo                                                                           // [0xfda00] 0x008a9000 + 0xfda00 = 0x009a6a00
.long 0x00000000

RTTIBaseClassDescriptor EditorIconBase 0                                                                           // [0xfda18] 0x008a9000 + 0xfda18 = 0x009a6a18
RTTIBaseClassDescriptor EditorIconShow 1                                                                           // [0xfda30] 0x008a9000 + 0xfda30 = 0x009a6a30
RTTIBaseClassDescriptor ?$EditorIconNumber@MM 2                                                                    // [0xfda48] 0x008a9000 + 0xfda48 = 0x009a6a48

RTTIBaseClassDescriptor ?$EditorIconSlider@M 3                                                                     // [0xfda60] 0x008a9000 + 0xfda60 = 0x009a6a60
RTTIBaseClassArray ?$EditorIconSlider@M                                                                            // [0xfda78] 0x008a9000 + 0xfda78 = 0x009a6a78
.long ??_R1A@?0A@A@?$EditorIconNumber@MM@@8
.long ??_R1A@?0A@A@EditorIconShow@@8
.long ??_R1A@?0A@A@EditorIconBase@@8
.long 0x00000000
.long 0x00000000

RTTIClassHierarchyDescriptor ?$EditorIconSlider@M 4                                                                // [0xfda90] 0x008a9000 + 0xfda90 = 0x009a6a90
RTTICompleteObjectLocator ?$EditorIconSlider@M                                                                     // [0xfdaa0] 0x008a9000 + 0xfdaa0 = 0x009a6aa0
.long 0x00000000

RTTIBaseClassArray ?$EditorIconNumber@MM                                                                           // [0xfdab8] 0x008a9000 + 0xfdab8 = 0x009a6ab8
.long ??_R1A@?0A@A@EditorIconShow@@8
.long ??_R1A@?0A@A@EditorIconBase@@8
.long 0x00000000

RTTIClassHierarchyDescriptor ?$EditorIconNumber@MM 3                                                               // [0xfdac8] 0x008a9000 + 0xfdac8 = 0x009a6ac8
RTTICompleteObjectLocator ?$EditorIconNumber@MM                                                                    // [0xfdad8] 0x008a9000 + 0xfdad8 = 0x009a6ad8
.long 0x00000000

RTTIBaseClassDescriptor GMobileInfo 3                                                                              // [0xfdaf0] 0x008a9000 + 0xfdaf0 = 0x009a6af0
RTTIBaseClassDescriptor GMobileWallHugInfo 4                                                                       // [0xfdb08] 0x008a9000 + 0xfdb08 = 0x009a6b08
RTTIBaseClassDescriptor GLivingInfo 5                                                                              // [0xfdb20] 0x008a9000 + 0xfdb20 = 0x009a6b20

RTTIBaseClassDescriptor GAnimalInfo 6                                                                              // [0xfdb38] 0x008a9000 + 0xfdb38 = 0x009a6b38
RTTIBaseClassArray GAnimalInfo                                                                                     // [0xfdb50] 0x008a9000 + 0xfdb50 = 0x009a6b50
.long ??_R1A@?0A@A@GLivingInfo@@8
.long ??_R1A@?0A@A@GMobileWallHugInfo@@8
.long ??_R1A@?0A@A@GMobileInfo@@8
.long ??_R1A@?0A@A@GObjectInfo@@8
.long ??_R1A@?0A@A@GBaseInfo@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000

RTTIClassHierarchyDescriptor GAnimalInfo 7                                                                         // [0xfdb70] 0x008a9000 + 0xfdb70 = 0x009a6b70
RTTICompleteObjectLocator GAnimalInfo                                                                              // [0xfdb80] 0x008a9000 + 0xfdb80 = 0x009a6b80
.long 0x00000000

RTTIBaseClassDescriptor GAnimalStateTableInfo 2                                                                    // [0xfdb98] 0x008a9000 + 0xfdb98 = 0x009a6b98
RTTIBaseClassArray GAnimalStateTableInfo                                                                           // [0xfdbb0] 0x008a9000 + 0xfdbb0 = 0x009a6bb0
.long ??_R1A@?0A@A@GBaseInfo@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000

RTTIClassHierarchyDescriptor GAnimalStateTableInfo 3                                                               // [0xfdbc0] 0x008a9000 + 0xfdbc0 = 0x009a6bc0
RTTICompleteObjectLocator GAnimalStateTableInfo                                                                    // [0xfdbd0] 0x008a9000 + 0xfdbd0 = 0x009a6bd0
.long 0x00000000

RTTIBaseClassDescriptor Mobile 4                                                                                   // [0xfdbe8] 0x008a9000 + 0xfdbe8 = 0x009a6be8
RTTIBaseClassDescriptor MobileWallHug 5                                                                            // [0xfdc18] 0x008a9000 + 0xfdc18 = 0x009a6c18
RTTIBaseClassDescriptor Living 6                                                                                   // [0xfdc18] 0x008a9000 + 0xfdc18 = 0x009a6c18
RTTIBaseClassDescriptor Animal 7                                                                                   // [0xfdc30] 0x008a9000 + 0xfdc30 = 0x009a6c30
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00                                                               // [0xfdc48] 0x008a9000 + 0xfdc48 = 0x009a6c48
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfdc50] 0x008a9000 + 0xfdc50 = 0x009a6c50
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdc60] 0x008a9000 + 0xfdc60 = 0x009a6c60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x48, 0x6c, 0x9a, 0x00               // [0xfdc70] 0x008a9000 + 0xfdc70 = 0x009a6c70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x9c, 0x00               // [0xfdc80] 0x008a9000 + 0xfdc80 = 0x009a6c80
.byte 0x70, 0x6c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfdc90] 0x008a9000 + 0xfdc90 = 0x009a6c90
RTTIBaseClassDescriptor PieceVillager 8                                                                            // [0xfdc98] 0x008a9000 + 0xfdc98 = 0x009a6c98
.byte 0x98, 0x6c, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00               // [0xfdcb0] 0x008a9000 + 0xfdcb0 = 0x009a6cb0
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0xfdcc0] 0x008a9000 + 0xfdcc0 = 0x009a6cc0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdcd0] 0x008a9000 + 0xfdcd0 = 0x009a6cd0
.byte 0x09, 0x00, 0x00, 0x00, 0xb0, 0x6c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdce0] 0x008a9000 + 0xfdce0 = 0x009a6ce0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x8f, 0x9c, 0x00, 0xd8, 0x6c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdcf0] 0x008a9000 + 0xfdcf0 = 0x009a6cf0
RTTIBaseClassDescriptor Cow 8                                                                                      // [0xfdd00] 0x008a9000 + 0xfdd00 = 0x009a6d00
.byte 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00                                                               // [0xfdd18] 0x008a9000 + 0xfdd18 = 0x009a6d18
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfdd20] 0x008a9000 + 0xfdd20 = 0x009a6d20
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdd30] 0x008a9000 + 0xfdd30 = 0x009a6d30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x18, 0x6d, 0x9a, 0x00               // [0xfdd40] 0x008a9000 + 0xfdd40 = 0x009a6d40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x8f, 0x9c, 0x00               // [0xfdd50] 0x008a9000 + 0xfdd50 = 0x009a6d50
.byte 0x40, 0x6d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfdd60] 0x008a9000 + 0xfdd60 = 0x009a6d60
RTTIBaseClassDescriptor Sheep 9                                                                                    // [0xfdd68] 0x008a9000 + 0xfdd68 = 0x009a6d68
.byte 0x68, 0x6d, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfdd80] 0x008a9000 + 0xfdd80 = 0x009a6d80
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfdd90] 0x008a9000 + 0xfdd90 = 0x009a6d90
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdda0] 0x008a9000 + 0xfdda0 = 0x009a6da0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x80, 0x6d, 0x9a, 0x00               // [0xfddb0] 0x008a9000 + 0xfddb0 = 0x009a6db0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x8f, 0x9c, 0x00               // [0xfddc0] 0x008a9000 + 0xfddc0 = 0x009a6dc0
.byte 0xb0, 0x6d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfddd0] 0x008a9000 + 0xfddd0 = 0x009a6dd0
RTTIBaseClassDescriptor PieceSheep 10                                                                              // [0xfddd8] 0x008a9000 + 0xfddd8 = 0x009a6dd8
.byte 0xd8, 0x6d, 0x9a, 0x00, 0x68, 0x6d, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00               // [0xfddf0] 0x008a9000 + 0xfddf0 = 0x009a6df0
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfde00] 0x008a9000 + 0xfde00 = 0x009a6e00
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfde10] 0x008a9000 + 0xfde10 = 0x009a6e10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf0, 0x6d, 0x9a, 0x00               // [0xfde20] 0x008a9000 + 0xfde20 = 0x009a6e20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x8f, 0x9c, 0x00               // [0xfde30] 0x008a9000 + 0xfde30 = 0x009a6e30
.byte 0x20, 0x6e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfde40] 0x008a9000 + 0xfde40 = 0x009a6e40
RTTIBaseClassDescriptor Goat 9                                                                                     // [0xfde48] 0x008a9000 + 0xfde48 = 0x009a6e48
.byte 0x48, 0x6e, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfde60] 0x008a9000 + 0xfde60 = 0x009a6e60
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfde70] 0x008a9000 + 0xfde70 = 0x009a6e70
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfde80] 0x008a9000 + 0xfde80 = 0x009a6e80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x60, 0x6e, 0x9a, 0x00               // [0xfde90] 0x008a9000 + 0xfde90 = 0x009a6e90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x90, 0x9c, 0x00               // [0xfdea0] 0x008a9000 + 0xfdea0 = 0x009a6ea0
.byte 0x90, 0x6e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfdeb0] 0x008a9000 + 0xfdeb0 = 0x009a6eb0
RTTIBaseClassDescriptor Horse 9                                                                                    // [0xfdeb8] 0x008a9000 + 0xfdeb8 = 0x009a6eb8
.byte 0xb8, 0x6e, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfded0] 0x008a9000 + 0xfded0 = 0x009a6ed0
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfdee0] 0x008a9000 + 0xfdee0 = 0x009a6ee0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdef0] 0x008a9000 + 0xfdef0 = 0x009a6ef0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xd0, 0x6e, 0x9a, 0x00               // [0xfdf00] 0x008a9000 + 0xfdf00 = 0x009a6f00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x90, 0x9c, 0x00               // [0xfdf10] 0x008a9000 + 0xfdf10 = 0x009a6f10
.byte 0x00, 0x6f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfdf20] 0x008a9000 + 0xfdf20 = 0x009a6f20
RTTIBaseClassDescriptor PieceHorse 10                                                                              // [0xfdf28] 0x008a9000 + 0xfdf28 = 0x009a6f28
.byte 0x28, 0x6f, 0x9a, 0x00, 0xb8, 0x6e, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00               // [0xfdf40] 0x008a9000 + 0xfdf40 = 0x009a6f40
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfdf50] 0x008a9000 + 0xfdf50 = 0x009a6f50
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdf60] 0x008a9000 + 0xfdf60 = 0x009a6f60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x40, 0x6f, 0x9a, 0x00               // [0xfdf70] 0x008a9000 + 0xfdf70 = 0x009a6f70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x90, 0x9c, 0x00               // [0xfdf80] 0x008a9000 + 0xfdf80 = 0x009a6f80
.byte 0x70, 0x6f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfdf90] 0x008a9000 + 0xfdf90 = 0x009a6f90
RTTIBaseClassDescriptor Zebra 9                                                                                    // [0xfdf98] 0x008a9000 + 0xfdf98 = 0x009a6f98
.byte 0x98, 0x6f, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfdfb0] 0x008a9000 + 0xfdfb0 = 0x009a6fb0
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfdfc0] 0x008a9000 + 0xfdfc0 = 0x009a6fc0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfdfd0] 0x008a9000 + 0xfdfd0 = 0x009a6fd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xb0, 0x6f, 0x9a, 0x00               // [0xfdfe0] 0x008a9000 + 0xfdfe0 = 0x009a6fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x90, 0x9c, 0x00               // [0xfdff0] 0x008a9000 + 0xfdff0 = 0x009a6ff0
.byte 0xe0, 0x6f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe000] 0x008a9000 + 0xfe000 = 0x009a7000
RTTIBaseClassDescriptor Pig 9                                                                                      // [0xfe008] 0x008a9000 + 0xfe008 = 0x009a7008
.byte 0x08, 0x70, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfe020] 0x008a9000 + 0xfe020 = 0x009a7020
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfe030] 0x008a9000 + 0xfe030 = 0x009a7030
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe040] 0x008a9000 + 0xfe040 = 0x009a7040
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x20, 0x70, 0x9a, 0x00               // [0xfe050] 0x008a9000 + 0xfe050 = 0x009a7050
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x90, 0x9c, 0x00               // [0xfe060] 0x008a9000 + 0xfe060 = 0x009a7060
.byte 0x50, 0x70, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe070] 0x008a9000 + 0xfe070 = 0x009a7070
RTTIBaseClassDescriptor PiecePig 10                                                                                // [0xfe078] 0x008a9000 + 0xfe078 = 0x009a7078
.byte 0x78, 0x70, 0x9a, 0x00, 0x08, 0x70, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00               // [0xfe090] 0x008a9000 + 0xfe090 = 0x009a7090
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfe0a0] 0x008a9000 + 0xfe0a0 = 0x009a70a0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe0b0] 0x008a9000 + 0xfe0b0 = 0x009a70b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x90, 0x70, 0x9a, 0x00               // [0xfe0c0] 0x008a9000 + 0xfe0c0 = 0x009a70c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x90, 0x9c, 0x00               // [0xfe0d0] 0x008a9000 + 0xfe0d0 = 0x009a70d0
.byte 0xc0, 0x70, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe0e0] 0x008a9000 + 0xfe0e0 = 0x009a70e0
RTTIBaseClassDescriptor Tortoise 9                                                                                 // [0xfe0e8] 0x008a9000 + 0xfe0e8 = 0x009a70e8
.byte 0xe8, 0x70, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfe100] 0x008a9000 + 0xfe100 = 0x009a7100
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfe110] 0x008a9000 + 0xfe110 = 0x009a7110
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe120] 0x008a9000 + 0xfe120 = 0x009a7120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x71, 0x9a, 0x00               // [0xfe130] 0x008a9000 + 0xfe130 = 0x009a7130
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x91, 0x9c, 0x00               // [0xfe140] 0x008a9000 + 0xfe140 = 0x009a7140
.byte 0x30, 0x71, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe150] 0x008a9000 + 0xfe150 = 0x009a7150
RTTIBaseClassDescriptor PieceTortoise 10                                                                           // [0xfe158] 0x008a9000 + 0xfe158 = 0x009a7158
.byte 0x58, 0x71, 0x9a, 0x00, 0xe8, 0x70, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00               // [0xfe170] 0x008a9000 + 0xfe170 = 0x009a7170
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfe180] 0x008a9000 + 0xfe180 = 0x009a7180
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe190] 0x008a9000 + 0xfe190 = 0x009a7190
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x70, 0x71, 0x9a, 0x00               // [0xfe1a0] 0x008a9000 + 0xfe1a0 = 0x009a71a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x91, 0x9c, 0x00               // [0xfe1b0] 0x008a9000 + 0xfe1b0 = 0x009a71b0
.byte 0xa0, 0x71, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe1c0] 0x008a9000 + 0xfe1c0 = 0x009a71c0
RTTIBaseClassDescriptor Dove 8                                                                                     // [0xfe1c8] 0x008a9000 + 0xfe1c8 = 0x009a71c8
.byte 0xc8, 0x71, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00               // [0xfe1e0] 0x008a9000 + 0xfe1e0 = 0x009a71e0
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0xfe1f0] 0x008a9000 + 0xfe1f0 = 0x009a71f0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe200] 0x008a9000 + 0xfe200 = 0x009a7200
.byte 0x09, 0x00, 0x00, 0x00, 0xe0, 0x71, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe210] 0x008a9000 + 0xfe210 = 0x009a7210
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0x91, 0x9c, 0x00, 0x08, 0x72, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe220] 0x008a9000 + 0xfe220 = 0x009a7220
RTTIBaseClassDescriptor SpellDove 9                                                                                // [0xfe230] 0x008a9000 + 0xfe230 = 0x009a7230
.byte 0x30, 0x72, 0x9a, 0x00, 0xc8, 0x71, 0x9a, 0x00                                                               // [0xfe248] 0x008a9000 + 0xfe248 = 0x009a7248
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0xfe250] 0x008a9000 + 0xfe250 = 0x009a7250
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe260] 0x008a9000 + 0xfe260 = 0x009a7260
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe270] 0x008a9000 + 0xfe270 = 0x009a7270
.byte 0x0a, 0x00, 0x00, 0x00, 0x48, 0x72, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe280] 0x008a9000 + 0xfe280 = 0x009a7280
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x91, 0x9c, 0x00, 0x78, 0x72, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe290] 0x008a9000 + 0xfe290 = 0x009a7290
RTTIBaseClassDescriptor Crow 9                                                                                     // [0xfe2a0] 0x008a9000 + 0xfe2a0 = 0x009a72a0
.byte 0xa0, 0x72, 0x9a, 0x00, 0xc8, 0x71, 0x9a, 0x00                                                               // [0xfe2b8] 0x008a9000 + 0xfe2b8 = 0x009a72b8
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0xfe2c0] 0x008a9000 + 0xfe2c0 = 0x009a72c0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe2d0] 0x008a9000 + 0xfe2d0 = 0x009a72d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe2e0] 0x008a9000 + 0xfe2e0 = 0x009a72e0
.byte 0x0a, 0x00, 0x00, 0x00, 0xb8, 0x72, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe2f0] 0x008a9000 + 0xfe2f0 = 0x009a72f0
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0x91, 0x9c, 0x00, 0xe8, 0x72, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe300] 0x008a9000 + 0xfe300 = 0x009a7300
RTTIBaseClassDescriptor Swallow 9                                                                                  // [0xfe310] 0x008a9000 + 0xfe310 = 0x009a7310
.byte 0x10, 0x73, 0x9a, 0x00, 0xc8, 0x71, 0x9a, 0x00                                                               // [0xfe328] 0x008a9000 + 0xfe328 = 0x009a7328
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0xfe330] 0x008a9000 + 0xfe330 = 0x009a7330
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe340] 0x008a9000 + 0xfe340 = 0x009a7340
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe350] 0x008a9000 + 0xfe350 = 0x009a7350
.byte 0x0a, 0x00, 0x00, 0x00, 0x28, 0x73, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe360] 0x008a9000 + 0xfe360 = 0x009a7360
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x92, 0x9c, 0x00, 0x58, 0x73, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe370] 0x008a9000 + 0xfe370 = 0x009a7370
RTTIBaseClassDescriptor Pigeon 9                                                                                   // [0xfe380] 0x008a9000 + 0xfe380 = 0x009a7380
.byte 0x80, 0x73, 0x9a, 0x00, 0xc8, 0x71, 0x9a, 0x00                                                               // [0xfe398] 0x008a9000 + 0xfe398 = 0x009a7398
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0xfe3a0] 0x008a9000 + 0xfe3a0 = 0x009a73a0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe3b0] 0x008a9000 + 0xfe3b0 = 0x009a73b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe3c0] 0x008a9000 + 0xfe3c0 = 0x009a73c0
.byte 0x0a, 0x00, 0x00, 0x00, 0x98, 0x73, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe3d0] 0x008a9000 + 0xfe3d0 = 0x009a73d0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0x92, 0x9c, 0x00, 0xc8, 0x73, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe3e0] 0x008a9000 + 0xfe3e0 = 0x009a73e0
RTTIBaseClassDescriptor Seagull 9                                                                                  // [0xfe3f0] 0x008a9000 + 0xfe3f0 = 0x009a73f0
.byte 0xf0, 0x73, 0x9a, 0x00, 0xc8, 0x71, 0x9a, 0x00                                                               // [0xfe408] 0x008a9000 + 0xfe408 = 0x009a7408
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0xfe410] 0x008a9000 + 0xfe410 = 0x009a7410
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe420] 0x008a9000 + 0xfe420 = 0x009a7420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe430] 0x008a9000 + 0xfe430 = 0x009a7430
.byte 0x0a, 0x00, 0x00, 0x00, 0x08, 0x74, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe440] 0x008a9000 + 0xfe440 = 0x009a7440
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x92, 0x9c, 0x00, 0x38, 0x74, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe450] 0x008a9000 + 0xfe450 = 0x009a7450
RTTIBaseClassDescriptor Bat 9                                                                                      // [0xfe460] 0x008a9000 + 0xfe460 = 0x009a7460
.byte 0x60, 0x74, 0x9a, 0x00, 0xc8, 0x71, 0x9a, 0x00                                                               // [0xfe478] 0x008a9000 + 0xfe478 = 0x009a7478
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0xfe480] 0x008a9000 + 0xfe480 = 0x009a7480
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe490] 0x008a9000 + 0xfe490 = 0x009a7490
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe4a0] 0x008a9000 + 0xfe4a0 = 0x009a74a0
.byte 0x0a, 0x00, 0x00, 0x00, 0x78, 0x74, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe4b0] 0x008a9000 + 0xfe4b0 = 0x009a74b0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0x92, 0x9c, 0x00, 0xa8, 0x74, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe4c0] 0x008a9000 + 0xfe4c0 = 0x009a74c0
RTTIBaseClassDescriptor SpellBat 10                                                                                // [0xfe4d0] 0x008a9000 + 0xfe4d0 = 0x009a74d0
.byte 0xd0, 0x74, 0x9a, 0x00, 0x30, 0x72, 0x9a, 0x00                                                               // [0xfe4e8] 0x008a9000 + 0xfe4e8 = 0x009a74e8
.byte 0xc8, 0x71, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00               // [0xfe4f0] 0x008a9000 + 0xfe4f0 = 0x009a74f0
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0xfe500] 0x008a9000 + 0xfe500 = 0x009a7500
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe510] 0x008a9000 + 0xfe510 = 0x009a7510
.byte 0x0b, 0x00, 0x00, 0x00, 0xe8, 0x74, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe520] 0x008a9000 + 0xfe520 = 0x009a7520
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x92, 0x9c, 0x00, 0x18, 0x75, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe530] 0x008a9000 + 0xfe530 = 0x009a7530
RTTIBaseClassDescriptor Vulture 9                                                                                  // [0xfe540] 0x008a9000 + 0xfe540 = 0x009a7540
.byte 0x40, 0x75, 0x9a, 0x00, 0xc8, 0x71, 0x9a, 0x00                                                               // [0xfe558] 0x008a9000 + 0xfe558 = 0x009a7558
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0xfe560] 0x008a9000 + 0xfe560 = 0x009a7560
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe570] 0x008a9000 + 0xfe570 = 0x009a7570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe580] 0x008a9000 + 0xfe580 = 0x009a7580
.byte 0x0a, 0x00, 0x00, 0x00, 0x58, 0x75, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe590] 0x008a9000 + 0xfe590 = 0x009a7590
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x92, 0x9c, 0x00, 0x88, 0x75, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe5a0] 0x008a9000 + 0xfe5a0 = 0x009a75a0
RTTIBaseClassDescriptor Lion 8                                                                                     // [0xfe5b0] 0x008a9000 + 0xfe5b0 = 0x009a75b0
RTTIBaseClassDescriptor Leopard 9                                                                                  // [0xfe5c8] 0x008a9000 + 0xfe5c8 = 0x009a75c8
.byte 0xc8, 0x75, 0x9a, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfe5e0] 0x008a9000 + 0xfe5e0 = 0x009a75e0
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfe5f0] 0x008a9000 + 0xfe5f0 = 0x009a75f0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe600] 0x008a9000 + 0xfe600 = 0x009a7600
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xe0, 0x75, 0x9a, 0x00               // [0xfe610] 0x008a9000 + 0xfe610 = 0x009a7610
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x93, 0x9c, 0x00               // [0xfe620] 0x008a9000 + 0xfe620 = 0x009a7620
.byte 0x10, 0x76, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00               // [0xfe630] 0x008a9000 + 0xfe630 = 0x009a7630
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfe640] 0x008a9000 + 0xfe640 = 0x009a7640
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe650] 0x008a9000 + 0xfe650 = 0x009a7650
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x76, 0x9a, 0x00               // [0xfe660] 0x008a9000 + 0xfe660 = 0x009a7660
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0x9c, 0x00               // [0xfe670] 0x008a9000 + 0xfe670 = 0x009a7670
.byte 0x60, 0x76, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe680] 0x008a9000 + 0xfe680 = 0x009a7680
RTTIBaseClassDescriptor PieceLion 9                                                                                // [0xfe688] 0x008a9000 + 0xfe688 = 0x009a7688
.byte 0x88, 0x76, 0x9a, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfe6a0] 0x008a9000 + 0xfe6a0 = 0x009a76a0
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfe6b0] 0x008a9000 + 0xfe6b0 = 0x009a76b0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe6c0] 0x008a9000 + 0xfe6c0 = 0x009a76c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xa0, 0x76, 0x9a, 0x00               // [0xfe6d0] 0x008a9000 + 0xfe6d0 = 0x009a76d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x93, 0x9c, 0x00               // [0xfe6e0] 0x008a9000 + 0xfe6e0 = 0x009a76e0
.byte 0xd0, 0x76, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe6f0] 0x008a9000 + 0xfe6f0 = 0x009a76f0
RTTIBaseClassDescriptor SpellWolf 9                                                                                // [0xfe6f8] 0x008a9000 + 0xfe6f8 = 0x009a76f8
.byte 0xf8, 0x76, 0x9a, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfe710] 0x008a9000 + 0xfe710 = 0x009a7710
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfe720] 0x008a9000 + 0xfe720 = 0x009a7720
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe730] 0x008a9000 + 0xfe730 = 0x009a7730
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x10, 0x77, 0x9a, 0x00               // [0xfe740] 0x008a9000 + 0xfe740 = 0x009a7740
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x93, 0x9c, 0x00               // [0xfe750] 0x008a9000 + 0xfe750 = 0x009a7750
.byte 0x40, 0x77, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe760] 0x008a9000 + 0xfe760 = 0x009a7760
RTTIBaseClassDescriptor Tiger 9                                                                                    // [0xfe768] 0x008a9000 + 0xfe768 = 0x009a7768
.byte 0x68, 0x77, 0x9a, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfe780] 0x008a9000 + 0xfe780 = 0x009a7780
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfe790] 0x008a9000 + 0xfe790 = 0x009a7790
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe7a0] 0x008a9000 + 0xfe7a0 = 0x009a77a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x80, 0x77, 0x9a, 0x00               // [0xfe7b0] 0x008a9000 + 0xfe7b0 = 0x009a77b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x94, 0x9c, 0x00               // [0xfe7c0] 0x008a9000 + 0xfe7c0 = 0x009a77c0
.byte 0xb0, 0x77, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe7d0] 0x008a9000 + 0xfe7d0 = 0x009a77d0
RTTIBaseClassDescriptor Wolf 9                                                                                     // [0xfe7d8] 0x008a9000 + 0xfe7d8 = 0x009a77d8
.byte 0xd8, 0x77, 0x9a, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0xfe7f0] 0x008a9000 + 0xfe7f0 = 0x009a77f0
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfe800] 0x008a9000 + 0xfe800 = 0x009a7800
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe810] 0x008a9000 + 0xfe810 = 0x009a7810
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xf0, 0x77, 0x9a, 0x00               // [0xfe820] 0x008a9000 + 0xfe820 = 0x009a7820
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x94, 0x9c, 0x00               // [0xfe830] 0x008a9000 + 0xfe830 = 0x009a7830
.byte 0x20, 0x78, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe840] 0x008a9000 + 0xfe840 = 0x009a7840
RTTIBaseClassDescriptor PieceWolf 10                                                                               // [0xfe848] 0x008a9000 + 0xfe848 = 0x009a7848
.byte 0x48, 0x78, 0x9a, 0x00, 0xd8, 0x77, 0x9a, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00               // [0xfe860] 0x008a9000 + 0xfe860 = 0x009a7860
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfe870] 0x008a9000 + 0xfe870 = 0x009a7870
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe880] 0x008a9000 + 0xfe880 = 0x009a7880
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x60, 0x78, 0x9a, 0x00               // [0xfe890] 0x008a9000 + 0xfe890 = 0x009a7890
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x94, 0x9c, 0x00               // [0xfe8a0] 0x008a9000 + 0xfe8a0 = 0x009a78a0
.byte 0x90, 0x78, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe8b0] 0x008a9000 + 0xfe8b0 = 0x009a78b0
RTTIBaseClassDescriptor GFeatureInfo 4                                                                             // [0xfe8b8] 0x008a9000 + 0xfe8b8 = 0x009a78b8
RTTIBaseClassDescriptor GAnimatedStaticInfo 5                                                                      // [0xfe8d0] 0x008a9000 + 0xfe8d0 = 0x009a78d0
.byte 0xd0, 0x78, 0x9a, 0x00, 0xb8, 0x78, 0x9a, 0x00                                                               // [0xfe8e8] 0x008a9000 + 0xfe8e8 = 0x009a78e8
.byte 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe8f0] 0x008a9000 + 0xfe8f0 = 0x009a78f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe900] 0x008a9000 + 0xfe900 = 0x009a7900
.byte 0x06, 0x00, 0x00, 0x00, 0xe8, 0x78, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe910] 0x008a9000 + 0xfe910 = 0x009a7910
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0x95, 0x9c, 0x00, 0x08, 0x79, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe920] 0x008a9000 + 0xfe920 = 0x009a7920
RTTIBaseClassDescriptor Feature 6                                                                                  // [0xfe930] 0x008a9000 + 0xfe930 = 0x009a7930
RTTIBaseClassDescriptor AnimatedStatic 7                                                                           // [0xfe948] 0x008a9000 + 0xfe948 = 0x009a7948
.byte 0x48, 0x79, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0xfe960] 0x008a9000 + 0xfe960 = 0x009a7960
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfe970] 0x008a9000 + 0xfe970 = 0x009a7970
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe980] 0x008a9000 + 0xfe980 = 0x009a7980
.byte 0x08, 0x00, 0x00, 0x00, 0x60, 0x79, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe990] 0x008a9000 + 0xfe990 = 0x009a7990
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x95, 0x9c, 0x00, 0x88, 0x79, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe9a0] 0x008a9000 + 0xfe9a0 = 0x009a79a0
.byte 0x30, 0x79, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfe9b0] 0x008a9000 + 0xfe9b0 = 0x009a79b0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfe9c0] 0x008a9000 + 0xfe9c0 = 0x009a79c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, 0x79, 0x9a, 0x00               // [0xfe9d0] 0x008a9000 + 0xfe9d0 = 0x009a79d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x95, 0x9c, 0x00               // [0xfe9e0] 0x008a9000 + 0xfe9e0 = 0x009a79e0
.byte 0xd0, 0x79, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfe9f0] 0x008a9000 + 0xfe9f0 = 0x009a79f0
RTTIBaseClassDescriptor GArena 3                                                                                   // [0xfe9f8] 0x008a9000 + 0xfe9f8 = 0x009a79f8
.byte 0xf8, 0x79, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfea10] 0x008a9000 + 0xfea10 = 0x009a7a10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfea20] 0x008a9000 + 0xfea20 = 0x009a7a20
.byte 0x04, 0x00, 0x00, 0x00, 0x10, 0x7a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfea30] 0x008a9000 + 0xfea30 = 0x009a7a30
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x95, 0x9c, 0x00, 0x28, 0x7a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfea40] 0x008a9000 + 0xfea40 = 0x009a7a40
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfea50] 0x008a9000 + 0xfea50 = 0x009a7a50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0x7a, 0x9a, 0x00               // [0xfea60] 0x008a9000 + 0xfea60 = 0x009a7a60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x7f, 0x9c, 0x00               // [0xfea70] 0x008a9000 + 0xfea70 = 0x009a7a70
.byte 0x60, 0x7a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfea80] 0x008a9000 + 0xfea80 = 0x009a7a80
RTTIBaseClassDescriptor ArenaSpellIcon 5                                                                           // [0xfea88] 0x008a9000 + 0xfea88 = 0x009a7a88
.byte 0x88, 0x7a, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfeaa0] 0x008a9000 + 0xfeaa0 = 0x009a7aa0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeab0] 0x008a9000 + 0xfeab0 = 0x009a7ab0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa0, 0x7a, 0x9a, 0x00               // [0xfeac0] 0x008a9000 + 0xfeac0 = 0x009a7ac0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x96, 0x9c, 0x00               // [0xfead0] 0x008a9000 + 0xfead0 = 0x009a7ad0
.byte 0xc0, 0x7a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfeae0] 0x008a9000 + 0xfeae0 = 0x009a7ae0
RTTIBaseClassDescriptor GMobileObjectInfo 4                                                                        // [0xfeae8] 0x008a9000 + 0xfeae8 = 0x009a7ae8
RTTIBaseClassDescriptor GArrowInfo 5                                                                               // [0xfeb00] 0x008a9000 + 0xfeb00 = 0x009a7b00
.byte 0x00, 0x7b, 0x9a, 0x00, 0xe8, 0x7a, 0x9a, 0x00                                                               // [0xfeb18] 0x008a9000 + 0xfeb18 = 0x009a7b18
.byte 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfeb20] 0x008a9000 + 0xfeb20 = 0x009a7b20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeb30] 0x008a9000 + 0xfeb30 = 0x009a7b30
.byte 0x06, 0x00, 0x00, 0x00, 0x18, 0x7b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeb40] 0x008a9000 + 0xfeb40 = 0x009a7b40
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x96, 0x9c, 0x00, 0x38, 0x7b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeb50] 0x008a9000 + 0xfeb50 = 0x009a7b50
RTTIBaseClassDescriptor MobileObject 5                                                                             // [0xfeb60] 0x008a9000 + 0xfeb60 = 0x009a7b60
RTTIBaseClassDescriptor Arrow 6                                                                                    // [0xfeb78] 0x008a9000 + 0xfeb78 = 0x009a7b78
.byte 0x78, 0x7b, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xfeb90] 0x008a9000 + 0xfeb90 = 0x009a7b90
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeba0] 0x008a9000 + 0xfeba0 = 0x009a7ba0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, 0x7b, 0x9a, 0x00               // [0xfebb0] 0x008a9000 + 0xfebb0 = 0x009a7bb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x96, 0x9c, 0x00               // [0xfebc0] 0x008a9000 + 0xfebc0 = 0x009a7bc0
.byte 0xb0, 0x7b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfebd0] 0x008a9000 + 0xfebd0 = 0x009a7bd0
RTTIBaseClassDescriptor TownArtifact 2                                                                             // [0xfebd8] 0x008a9000 + 0xfebd8 = 0x009a7bd8
.byte 0xd8, 0x7b, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfebf0] 0x008a9000 + 0xfebf0 = 0x009a7bf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x7b, 0x9a, 0x00               // [0xfec00] 0x008a9000 + 0xfec00 = 0x009a7c00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x96, 0x9c, 0x00               // [0xfec10] 0x008a9000 + 0xfec10 = 0x009a7c10
.byte 0x00, 0x7c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfec20] 0x008a9000 + 0xfec20 = 0x009a7c20
RTTIBaseClassDescriptor GAudio 2                                                                                   // [0xfec28] 0x008a9000 + 0xfec28 = 0x009a7c28
.byte 0x28, 0x7c, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfec40] 0x008a9000 + 0xfec40 = 0x009a7c40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x7c, 0x9a, 0x00               // [0xfec50] 0x008a9000 + 0xfec50 = 0x009a7c50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xaf, 0x9c, 0x00               // [0xfec60] 0x008a9000 + 0xfec60 = 0x009a7c60
.byte 0x50, 0x7c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfec70] 0x008a9000 + 0xfec70 = 0x009a7c70
RTTIBaseClassDescriptor ThingMusicInfo 2                                                                           // [0xfec78] 0x008a9000 + 0xfec78 = 0x009a7c78
.byte 0x78, 0x7c, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfec90] 0x008a9000 + 0xfec90 = 0x009a7c90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x90, 0x7c, 0x9a, 0x00               // [0xfeca0] 0x008a9000 + 0xfeca0 = 0x009a7ca0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xb3, 0x9c, 0x00               // [0xfecb0] 0x008a9000 + 0xfecb0 = 0x009a7cb0
.byte 0xa0, 0x7c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfecc0] 0x008a9000 + 0xfecc0 = 0x009a7cc0
RTTIBaseClassDescriptor GLeashSelectorInfo 3                                                                       // [0xfecc8] 0x008a9000 + 0xfecc8 = 0x009a7cc8
.byte 0xc8, 0x7c, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfece0] 0x008a9000 + 0xfece0 = 0x009a7ce0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfecf0] 0x008a9000 + 0xfecf0 = 0x009a7cf0
.byte 0x04, 0x00, 0x00, 0x00, 0xe0, 0x7c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfed00] 0x008a9000 + 0xfed00 = 0x009a7d00
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xb9, 0x9c, 0x00, 0xf8, 0x7c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfed10] 0x008a9000 + 0xfed10 = 0x009a7d10
.byte 0xa0, 0x7f, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfed20] 0x008a9000 + 0xfed20 = 0x009a7d20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x7d, 0x9a, 0x00               // [0xfed30] 0x008a9000 + 0xfed30 = 0x009a7d30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xba, 0x9c, 0x00               // [0xfed40] 0x008a9000 + 0xfed40 = 0x009a7d40
.byte 0x30, 0x7d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfed50] 0x008a9000 + 0xfed50 = 0x009a7d50
RTTIBaseClassDescriptor LHFile 0                                                                                   // [0xfed58] 0x008a9000 + 0xfed58 = 0x009a7d58
RTTIBaseClassDescriptor LHReleasedFile 1                                                                           // [0xfed70] 0x008a9000 + 0xfed70 = 0x009a7d70
.byte 0x70, 0x7d, 0x9a, 0x00, 0x58, 0x7d, 0x9a, 0x00                                                               // [0xfed88] 0x008a9000 + 0xfed88 = 0x009a7d88
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfed90] 0x008a9000 + 0xfed90 = 0x009a7d90
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0x7d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeda0] 0x008a9000 + 0xfeda0 = 0x009a7da0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0xb9, 0x9c, 0x00, 0x98, 0x7d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfedb0] 0x008a9000 + 0xfedb0 = 0x009a7db0
RTTIBaseClassDescriptor GMagicTeleportInfo 3                                                                       // [0xfedc0] 0x008a9000 + 0xfedc0 = 0x009a7dc0
.byte 0xc0, 0x7d, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00                                                               // [0xfedd8] 0x008a9000 + 0xfedd8 = 0x009a7dd8
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfede0] 0x008a9000 + 0xfede0 = 0x009a7de0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0x7d, 0x9a, 0x00               // [0xfedf0] 0x008a9000 + 0xfedf0 = 0x009a7df0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xb9, 0x9c, 0x00               // [0xfee00] 0x008a9000 + 0xfee00 = 0x009a7e00
.byte 0xf0, 0x7d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfee10] 0x008a9000 + 0xfee10 = 0x009a7e10
RTTIBaseClassDescriptor GMagicForestInfo 3                                                                         // [0xfee18] 0x008a9000 + 0xfee18 = 0x009a7e18
.byte 0x18, 0x7e, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfee30] 0x008a9000 + 0xfee30 = 0x009a7e30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfee40] 0x008a9000 + 0xfee40 = 0x009a7e40
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0x7e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfee50] 0x008a9000 + 0xfee50 = 0x009a7e50
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0xb9, 0x9c, 0x00, 0x48, 0x7e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfee60] 0x008a9000 + 0xfee60 = 0x009a7e60
RTTIBaseClassDescriptor GMagicObjectInfo 3                                                                         // [0xfee70] 0x008a9000 + 0xfee70 = 0x009a7e70
RTTIBaseClassDescriptor GMagicResourceInfo 4                                                                       // [0xfee88] 0x008a9000 + 0xfee88 = 0x009a7e88
.byte 0x88, 0x7e, 0x9a, 0x00, 0x70, 0x7e, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0xfeea0] 0x008a9000 + 0xfeea0 = 0x009a7ea0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeeb0] 0x008a9000 + 0xfeeb0 = 0x009a7eb0
.byte 0x05, 0x00, 0x00, 0x00, 0xa0, 0x7e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeec0] 0x008a9000 + 0xfeec0 = 0x009a7ec0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xba, 0x9c, 0x00, 0xb8, 0x7e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeed0] 0x008a9000 + 0xfeed0 = 0x009a7ed0
RTTIBaseClassDescriptor GMagicHealInfo 3                                                                           // [0xfeee0] 0x008a9000 + 0xfeee0 = 0x009a7ee0
.byte 0xe0, 0x7e, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00                                                               // [0xfeef8] 0x008a9000 + 0xfeef8 = 0x009a7ef8
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfef00] 0x008a9000 + 0xfef00 = 0x009a7f00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x7e, 0x9a, 0x00               // [0xfef10] 0x008a9000 + 0xfef10 = 0x009a7f10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xba, 0x9c, 0x00               // [0xfef20] 0x008a9000 + 0xfef20 = 0x009a7f20
.byte 0x10, 0x7f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xfef30] 0x008a9000 + 0xfef30 = 0x009a7f30
RTTIBaseClassDescriptor LHOSFile 0                                                                                 // [0xfef38] 0x008a9000 + 0xfef38 = 0x009a7f38
RTTIBaseClassDescriptor LHReleasedOSFile 1                                                                         // [0xfef50] 0x008a9000 + 0xfef50 = 0x009a7f50
.byte 0x50, 0x7f, 0x9a, 0x00, 0x38, 0x7f, 0x9a, 0x00                                                               // [0xfef68] 0x008a9000 + 0xfef68 = 0x009a7f68
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfef70] 0x008a9000 + 0xfef70 = 0x009a7f70
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0x7f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfef80] 0x008a9000 + 0xfef80 = 0x009a7f80
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xba, 0x9c, 0x00, 0x78, 0x7f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfef90] 0x008a9000 + 0xfef90 = 0x009a7f90
RTTIBaseClassDescriptor GMagicInfo 2                                                                               // [0xfefa0] 0x008a9000 + 0xfefa0 = 0x009a7fa0
RTTIBaseClassDescriptor GMagicRadiusSpellInfo 3                                                                    // [0xfefb8] 0x008a9000 + 0xfefb8 = 0x009a7fb8
RTTIBaseClassDescriptor GMagicStormAndTornadoInfo 4                                                                // [0xfefd0] 0x008a9000 + 0xfefd0 = 0x009a7fd0
.byte 0xd0, 0x7f, 0x9a, 0x00, 0xb8, 0x7f, 0x9a, 0x00                                                               // [0xfefe8] 0x008a9000 + 0xfefe8 = 0x009a7fe8
.byte 0xa0, 0x7f, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfeff0] 0x008a9000 + 0xfeff0 = 0x009a7ff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe8, 0x7f, 0x9a, 0x00               // [0xff000] 0x008a9000 + 0xff000 = 0x009a8000
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xba, 0x9c, 0x00               // [0xff010] 0x008a9000 + 0xff010 = 0x009a8010
.byte 0x00, 0x80, 0x9a, 0x00, 0x58, 0x7d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff020] 0x008a9000 + 0xff020 = 0x009a8020
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x24, 0x80, 0x9a, 0x00               // [0xff030] 0x008a9000 + 0xff030 = 0x009a8030
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xb9, 0x9c, 0x00               // [0xff040] 0x008a9000 + 0xff040 = 0x009a8040
.byte 0x30, 0x80, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xff050] 0x008a9000 + 0xff050 = 0x009a8050
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff060] 0x008a9000 + 0xff060 = 0x009a8060
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0x80, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff070] 0x008a9000 + 0xff070 = 0x009a8070
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x7e, 0x9c, 0x00, 0x68, 0x80, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff080] 0x008a9000 + 0xff080 = 0x009a8080
RTTIBaseClassDescriptor GMagicShieldInfo 4                                                                         // [0xff090] 0x008a9000 + 0xff090 = 0x009a8090
.byte 0x90, 0x80, 0x9a, 0x00, 0xb8, 0x7f, 0x9a, 0x00                                                               // [0xff0a8] 0x008a9000 + 0xff0a8 = 0x009a80a8
.byte 0xa0, 0x7f, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff0b0] 0x008a9000 + 0xff0b0 = 0x009a80b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x80, 0x9a, 0x00               // [0xff0c0] 0x008a9000 + 0xff0c0 = 0x009a80c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xcf, 0x9c, 0x00               // [0xff0d0] 0x008a9000 + 0xff0d0 = 0x009a80d0
.byte 0xc0, 0x80, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff0e0] 0x008a9000 + 0xff0e0 = 0x009a80e0
RTTIBaseClassDescriptor GMagicWaterInfo 3                                                                          // [0xff0e8] 0x008a9000 + 0xff0e8 = 0x009a80e8
.byte 0xe8, 0x80, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xff100] 0x008a9000 + 0xff100 = 0x009a8100
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff110] 0x008a9000 + 0xff110 = 0x009a8110
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x81, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff120] 0x008a9000 + 0xff120 = 0x009a8120
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xcf, 0x9c, 0x00, 0x18, 0x81, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff130] 0x008a9000 + 0xff130 = 0x009a8130
RTTIBaseClassDescriptor GMagicFlockFlyingInfo 3                                                                    // [0xff140] 0x008a9000 + 0xff140 = 0x009a8140
.byte 0x40, 0x81, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00                                                               // [0xff158] 0x008a9000 + 0xff158 = 0x009a8158
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff160] 0x008a9000 + 0xff160 = 0x009a8160
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x81, 0x9a, 0x00               // [0xff170] 0x008a9000 + 0xff170 = 0x009a8170
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xcf, 0x9c, 0x00               // [0xff180] 0x008a9000 + 0xff180 = 0x009a8180
.byte 0x70, 0x81, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff190] 0x008a9000 + 0xff190 = 0x009a8190
RTTIBaseClassDescriptor GMagicFlockGroundInfo 3                                                                    // [0xff198] 0x008a9000 + 0xff198 = 0x009a8198
.byte 0x98, 0x81, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xff1b0] 0x008a9000 + 0xff1b0 = 0x009a81b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff1c0] 0x008a9000 + 0xff1c0 = 0x009a81c0
.byte 0x04, 0x00, 0x00, 0x00, 0xb0, 0x81, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff1d0] 0x008a9000 + 0xff1d0 = 0x009a81d0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0xd0, 0x9c, 0x00, 0xc8, 0x81, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff1e0] 0x008a9000 + 0xff1e0 = 0x009a81e0
RTTIBaseClassDescriptor GMagicCreatureSpellInfo 3                                                                  // [0xff1f0] 0x008a9000 + 0xff1f0 = 0x009a81f0
.byte 0xf0, 0x81, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00                                                               // [0xff208] 0x008a9000 + 0xff208 = 0x009a8208
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff210] 0x008a9000 + 0xff210 = 0x009a8210
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x82, 0x9a, 0x00               // [0xff220] 0x008a9000 + 0xff220 = 0x009a8220
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xd0, 0x9c, 0x00               // [0xff230] 0x008a9000 + 0xff230 = 0x009a8230
.byte 0x20, 0x82, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x7e, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00               // [0xff240] 0x008a9000 + 0xff240 = 0x009a8240
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff250] 0x008a9000 + 0xff250 = 0x009a8250
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x82, 0x9a, 0x00               // [0xff260] 0x008a9000 + 0xff260 = 0x009a8260
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xb9, 0x9c, 0x00               // [0xff270] 0x008a9000 + 0xff270 = 0x009a8270
.byte 0x60, 0x82, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x7f, 0x9a, 0x00, 0xa0, 0x7f, 0x9a, 0x00               // [0xff280] 0x008a9000 + 0xff280 = 0x009a8280
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff290] 0x008a9000 + 0xff290 = 0x009a8290
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x88, 0x82, 0x9a, 0x00               // [0xff2a0] 0x008a9000 + 0xff2a0 = 0x009a82a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xba, 0x9c, 0x00               // [0xff2b0] 0x008a9000 + 0xff2b0 = 0x009a82b0
.byte 0xa0, 0x82, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff2c0] 0x008a9000 + 0xff2c0 = 0x009a82c0
RTTIBaseClassDescriptor GBallInfo 5                                                                                // [0xff2c8] 0x008a9000 + 0xff2c8 = 0x009a82c8
.byte 0xc8, 0x82, 0x9a, 0x00, 0xe8, 0x7a, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00               // [0xff2e0] 0x008a9000 + 0xff2e0 = 0x009a82e0
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff2f0] 0x008a9000 + 0xff2f0 = 0x009a82f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe0, 0x82, 0x9a, 0x00               // [0xff300] 0x008a9000 + 0xff300 = 0x009a8300
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xd0, 0x9c, 0x00               // [0xff310] 0x008a9000 + 0xff310 = 0x009a8310
.byte 0x00, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff320] 0x008a9000 + 0xff320 = 0x009a8320
RTTIBaseClassDescriptor Ball 6                                                                                     // [0xff328] 0x008a9000 + 0xff328 = 0x009a8328
.byte 0x28, 0x83, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xff340] 0x008a9000 + 0xff340 = 0x009a8340
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff350] 0x008a9000 + 0xff350 = 0x009a8350
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x40, 0x83, 0x9a, 0x00               // [0xff360] 0x008a9000 + 0xff360 = 0x009a8360
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xd0, 0x9c, 0x00               // [0xff370] 0x008a9000 + 0xff370 = 0x009a8370
.byte 0x60, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff380] 0x008a9000 + 0xff380 = 0x009a8380
RTTIBaseClassDescriptor GBeliefInfo 2                                                                              // [0xff388] 0x008a9000 + 0xff388 = 0x009a8388
.byte 0x88, 0x83, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff3a0] 0x008a9000 + 0xff3a0 = 0x009a83a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa0, 0x83, 0x9a, 0x00               // [0xff3b0] 0x008a9000 + 0xff3b0 = 0x009a83b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xd2, 0x9c, 0x00               // [0xff3c0] 0x008a9000 + 0xff3c0 = 0x009a83c0
.byte 0xb0, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff3d0] 0x008a9000 + 0xff3d0 = 0x009a83d0
.byte 0x40, 0xd2, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff3d8] 0x008a9000 + 0xff3d8 = 0x009a83d8
.byte 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0xff3e0] 0x008a9000 + 0xff3e0 = 0x009a83e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff3e8] 0x008a9000 + 0xff3e8 = 0x009a83e8
RTTIBaseClassDescriptorStruct ValueSpinner 1                                                                       // [0xff3f0] 0x008a9000 + 0xff3f0 = 0x009a83f0
.byte 0xf0, 0x83, 0x9a, 0x00, 0xd8, 0x83, 0x9a, 0x00                                                               // [0xff408] 0x008a9000 + 0xff408 = 0x009a8408
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff410] 0x008a9000 + 0xff410 = 0x009a8410
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0x84, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff420] 0x008a9000 + 0xff420 = 0x009a8420
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0xd2, 0x9c, 0x00, 0x18, 0x84, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff430] 0x008a9000 + 0xff430 = 0x009a8430
RTTIBaseClassDescriptor GBigForestInfo 4                                                                           // [0xff440] 0x008a9000 + 0xff440 = 0x009a8440
.byte 0x40, 0x84, 0x9a, 0x00, 0x50, 0x63, 0x9a, 0x00                                                               // [0xff458] 0x008a9000 + 0xff458 = 0x009a8458
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff460] 0x008a9000 + 0xff460 = 0x009a8460
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0x84, 0x9a, 0x00               // [0xff470] 0x008a9000 + 0xff470 = 0x009a8470
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xd2, 0x9c, 0x00               // [0xff480] 0x008a9000 + 0xff480 = 0x009a8480
.byte 0x70, 0x84, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff490] 0x008a9000 + 0xff490 = 0x009a8490
RTTIBaseClassDescriptor BigForest 6                                                                                // [0xff498] 0x008a9000 + 0xff498 = 0x009a8498
.byte 0x98, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0xff4b0] 0x008a9000 + 0xff4b0 = 0x009a84b0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff4c0] 0x008a9000 + 0xff4c0 = 0x009a84c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, 0x84, 0x9a, 0x00               // [0xff4d0] 0x008a9000 + 0xff4d0 = 0x009a84d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd2, 0x9c, 0x00               // [0xff4e0] 0x008a9000 + 0xff4e0 = 0x009a84e0
.byte 0xd0, 0x84, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff4f0] 0x008a9000 + 0xff4f0 = 0x009a84f0
RTTIBaseClassDescriptor MobileStatic 6                                                                             // [0xff4f8] 0x008a9000 + 0xff4f8 = 0x009a84f8
RTTIBaseClassDescriptor Rock 7                                                                                     // [0xff510] 0x008a9000 + 0xff510 = 0x009a8510
RTTIBaseClassDescriptor Bonfire 8                                                                                  // [0xff528] 0x008a9000 + 0xff528 = 0x009a8528
.byte 0x28, 0x85, 0x9a, 0x00, 0x10, 0x85, 0x9a, 0x00, 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00               // [0xff540] 0x008a9000 + 0xff540 = 0x009a8540
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0xff550] 0x008a9000 + 0xff550 = 0x009a8550
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff560] 0x008a9000 + 0xff560 = 0x009a8560
.byte 0x09, 0x00, 0x00, 0x00, 0x40, 0x85, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff570] 0x008a9000 + 0xff570 = 0x009a8570
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0xd3, 0x9c, 0x00, 0x68, 0x85, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff580] 0x008a9000 + 0xff580 = 0x009a8580
RTTIBaseClassDescriptor BuildingSite 2                                                                             // [0xff590] 0x008a9000 + 0xff590 = 0x009a8590
.byte 0x90, 0x85, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0xff5a8] 0x008a9000 + 0xff5a8 = 0x009a85a8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff5b0] 0x008a9000 + 0xff5b0 = 0x009a85b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0x85, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff5c0] 0x008a9000 + 0xff5c0 = 0x009a85c0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0xd3, 0x9c, 0x00, 0xb8, 0x85, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff5d0] 0x008a9000 + 0xff5d0 = 0x009a85d0
RTTIBaseClassDescriptor CitadelBuildingSite 3                                                                      // [0xff5e0] 0x008a9000 + 0xff5e0 = 0x009a85e0
.byte 0xe0, 0x85, 0x9a, 0x00, 0x90, 0x85, 0x9a, 0x00                                                               // [0xff5f8] 0x008a9000 + 0xff5f8 = 0x009a85f8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff600] 0x008a9000 + 0xff600 = 0x009a8600
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x85, 0x9a, 0x00               // [0xff610] 0x008a9000 + 0xff610 = 0x009a8610
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xd4, 0x9c, 0x00               // [0xff620] 0x008a9000 + 0xff620 = 0x009a8620
.byte 0x10, 0x86, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff630] 0x008a9000 + 0xff630 = 0x009a8630
RTTIBaseClassDescriptor StandardBuildingSite 3                                                                     // [0xff638] 0x008a9000 + 0xff638 = 0x009a8638
.byte 0x38, 0x86, 0x9a, 0x00, 0x90, 0x85, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xff650] 0x008a9000 + 0xff650 = 0x009a8650
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff660] 0x008a9000 + 0xff660 = 0x009a8660
.byte 0x04, 0x00, 0x00, 0x00, 0x50, 0x86, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff670] 0x008a9000 + 0xff670 = 0x009a8670
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xd4, 0x9c, 0x00, 0x68, 0x86, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff680] 0x008a9000 + 0xff680 = 0x009a8680
RTTIBaseClassDescriptor WorkshopBuildingSite 3                                                                     // [0xff690] 0x008a9000 + 0xff690 = 0x009a8690
.byte 0x90, 0x86, 0x9a, 0x00, 0x90, 0x85, 0x9a, 0x00                                                               // [0xff6a8] 0x008a9000 + 0xff6a8 = 0x009a86a8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff6b0] 0x008a9000 + 0xff6b0 = 0x009a86b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0x86, 0x9a, 0x00               // [0xff6c0] 0x008a9000 + 0xff6c0 = 0x009a86c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xd4, 0x9c, 0x00               // [0xff6d0] 0x008a9000 + 0xff6d0 = 0x009a86d0
.byte 0xc0, 0x86, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff6e0] 0x008a9000 + 0xff6e0 = 0x009a86e0
RTTIBaseClassDescriptor LayerCommunication 0                                                                       // [0xff6e8] 0x008a9000 + 0xff6e8 = 0x009a86e8
RTTIBaseClassDescriptor BWGameSpy 1                                                                                // [0xff700] 0x008a9000 + 0xff700 = 0x009a8700
.byte 0x00, 0x87, 0x9a, 0x00, 0xe8, 0x86, 0x9a, 0x00                                                               // [0xff718] 0x008a9000 + 0xff718 = 0x009a8718
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff720] 0x008a9000 + 0xff720 = 0x009a8720
.byte 0x02, 0x00, 0x00, 0x00, 0x18, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff730] 0x008a9000 + 0xff730 = 0x009a8730
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0xd6, 0x9c, 0x00, 0x28, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff740] 0x008a9000 + 0xff740 = 0x009a8740
RTTIBaseClassDescriptor MPFEMessageObject 0                                                                        // [0xff750] 0x008a9000 + 0xff750 = 0x009a8750
.byte 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff768] 0x008a9000 + 0xff768 = 0x009a8768
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x68, 0x87, 0x9a, 0x00               // [0xff770] 0x008a9000 + 0xff770 = 0x009a8770
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xd8, 0x9c, 0x00               // [0xff780] 0x008a9000 + 0xff780 = 0x009a8780
.byte 0x70, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff790] 0x008a9000 + 0xff790 = 0x009a8790
RTTIBaseClassDescriptor BWLan 1                                                                                    // [0xff798] 0x008a9000 + 0xff798 = 0x009a8798
.byte 0x98, 0x87, 0x9a, 0x00, 0xe8, 0x86, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff7b0] 0x008a9000 + 0xff7b0 = 0x009a87b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb0, 0x87, 0x9a, 0x00               // [0xff7c0] 0x008a9000 + 0xff7c0 = 0x009a87c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xd9, 0x9c, 0x00               // [0xff7d0] 0x008a9000 + 0xff7d0 = 0x009a87d0
.byte 0xc0, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff7e0] 0x008a9000 + 0xff7e0 = 0x009a87e0
RTTIBaseClassDescriptor GCamera 3                                                                                  // [0xff7e8] 0x008a9000 + 0xff7e8 = 0x009a87e8
.byte 0xe8, 0x87, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xff800] 0x008a9000 + 0xff800 = 0x009a8800
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff810] 0x008a9000 + 0xff810 = 0x009a8810
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff820] 0x008a9000 + 0xff820 = 0x009a8820
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd9, 0x9c, 0x00, 0x18, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff830] 0x008a9000 + 0xff830 = 0x009a8830
RTTIBaseClassDescriptor Prss 0                                                                                     // [0xff840] 0x008a9000 + 0xff840 = 0x009a8840
RTTIBaseClassDescriptor GCameraEditor 1                                                                            // [0xff858] 0x008a9000 + 0xff858 = 0x009a8858
.byte 0x58, 0x88, 0x9a, 0x00, 0x40, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff870] 0x008a9000 + 0xff870 = 0x009a8870
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x70, 0x88, 0x9a, 0x00               // [0xff880] 0x008a9000 + 0xff880 = 0x009a8880
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xdc, 0x9c, 0x00               // [0xff890] 0x008a9000 + 0xff890 = 0x009a8890
.byte 0x80, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xff8a0] 0x008a9000 + 0xff8a0 = 0x009a88a0
RTTIBaseClassDescriptor CameraMode 0                                                                               // [0xff8a8] 0x008a9000 + 0xff8a8 = 0x009a88a8
RTTIBaseClassDescriptor CameraModeCitadel 1                                                                        // [0xff8c0] 0x008a9000 + 0xff8c0 = 0x009a88c0
.byte 0xc0, 0x88, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xff8d8] 0x008a9000 + 0xff8d8 = 0x009a88d8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff8e0] 0x008a9000 + 0xff8e0 = 0x009a88e0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff8f0] 0x008a9000 + 0xff8f0 = 0x009a88f0
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xe0, 0x9c, 0x00, 0xe8, 0x88, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00               // [0xff900] 0x008a9000 + 0xff900 = 0x009a8900
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff910] 0x008a9000 + 0xff910 = 0x009a8910
.byte 0x01, 0x00, 0x00, 0x00, 0x0c, 0x89, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff920] 0x008a9000 + 0xff920 = 0x009a8920
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xd3, 0x9c, 0x00, 0x18, 0x89, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff930] 0x008a9000 + 0xff930 = 0x009a8930
RTTIBaseClassDescriptor CameraModeCtrInteract 1                                                                    // [0xff940] 0x008a9000 + 0xff940 = 0x009a8940
.byte 0x40, 0x89, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xff958] 0x008a9000 + 0xff958 = 0x009a8958
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff960] 0x008a9000 + 0xff960 = 0x009a8960
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0x89, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff970] 0x008a9000 + 0xff970 = 0x009a8970
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xe0, 0x9c, 0x00, 0x68, 0x89, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff980] 0x008a9000 + 0xff980 = 0x009a8980
RTTIBaseClassDescriptor CameraModeDance 1                                                                          // [0xff990] 0x008a9000 + 0xff990 = 0x009a8990
.byte 0x90, 0x89, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xff9a8] 0x008a9000 + 0xff9a8 = 0x009a89a8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff9b0] 0x008a9000 + 0xff9b0 = 0x009a89b0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0x89, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff9c0] 0x008a9000 + 0xff9c0 = 0x009a89c0
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0xe0, 0x9c, 0x00, 0xb8, 0x89, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xff9d0] 0x008a9000 + 0xff9d0 = 0x009a89d0
RTTIBaseClassDescriptor CameraModeFlyAndClick 1                                                                    // [0xff9e0] 0x008a9000 + 0xff9e0 = 0x009a89e0
.byte 0xe0, 0x89, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xff9f8] 0x008a9000 + 0xff9f8 = 0x009a89f8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffa00] 0x008a9000 + 0xffa00 = 0x009a8a00
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0x89, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffa10] 0x008a9000 + 0xffa10 = 0x009a8a10
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0xe0, 0x9c, 0x00, 0x08, 0x8a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffa20] 0x008a9000 + 0xffa20 = 0x009a8a20
RTTIBaseClassDescriptor CameraModeFollow 1                                                                         // [0xffa30] 0x008a9000 + 0xffa30 = 0x009a8a30
.byte 0x30, 0x8a, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xffa48] 0x008a9000 + 0xffa48 = 0x009a8a48
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffa50] 0x008a9000 + 0xffa50 = 0x009a8a50
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0x8a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffa60] 0x008a9000 + 0xffa60 = 0x009a8a60
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0xda, 0x9c, 0x00, 0x58, 0x8a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffa70] 0x008a9000 + 0xffa70 = 0x009a8a70
RTTIBaseClassDescriptor CameraModeFollowHeading 1                                                                  // [0xffa80] 0x008a9000 + 0xffa80 = 0x009a8a80
.byte 0x80, 0x8a, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xffa98] 0x008a9000 + 0xffa98 = 0x009a8a98
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffaa0] 0x008a9000 + 0xffaa0 = 0x009a8aa0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0x8a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffab0] 0x008a9000 + 0xffab0 = 0x009a8ab0
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xe1, 0x9c, 0x00, 0xa8, 0x8a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffac0] 0x008a9000 + 0xffac0 = 0x009a8ac0
RTTIBaseClassDescriptor CameraModeFree 1                                                                           // [0xffad0] 0x008a9000 + 0xffad0 = 0x009a8ad0
.byte 0xd0, 0x8a, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xffae8] 0x008a9000 + 0xffae8 = 0x009a8ae8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffaf0] 0x008a9000 + 0xffaf0 = 0x009a8af0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0x8a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffb00] 0x008a9000 + 0xffb00 = 0x009a8b00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xda, 0x9c, 0x00, 0xf8, 0x8a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffb10] 0x008a9000 + 0xffb10 = 0x009a8b10
RTTIBaseClassDescriptor CameraModeNew1 2                                                                           // [0xffb20] 0x008a9000 + 0xffb20 = 0x009a8b20
.byte 0x20, 0x8b, 0x9a, 0x00, 0x70, 0x8b, 0x9a, 0x00                                                               // [0xffb38] 0x008a9000 + 0xffb38 = 0x009a8b38
.byte 0xa8, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffb40] 0x008a9000 + 0xffb40 = 0x009a8b40
.byte 0x03, 0x00, 0x00, 0x00, 0x38, 0x8b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffb50] 0x008a9000 + 0xffb50 = 0x009a8b50
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xe2, 0x9c, 0x00, 0x48, 0x8b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffb60] 0x008a9000 + 0xffb60 = 0x009a8b60
RTTIBaseClassDescriptor CameraModeNew 1                                                                            // [0xffb70] 0x008a9000 + 0xffb70 = 0x009a8b70
.byte 0x70, 0x8b, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xffb88] 0x008a9000 + 0xffb88 = 0x009a8b88
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffb90] 0x008a9000 + 0xffb90 = 0x009a8b90
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0x8b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffba0] 0x008a9000 + 0xffba0 = 0x009a8ba0
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xe2, 0x9c, 0x00, 0x98, 0x8b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffbb0] 0x008a9000 + 0xffbb0 = 0x009a8bb0
RTTIBaseClassDescriptor CameraModeNew2 2                                                                           // [0xffbc0] 0x008a9000 + 0xffbc0 = 0x009a8bc0
.byte 0xc0, 0x8b, 0x9a, 0x00, 0x70, 0x8b, 0x9a, 0x00                                                               // [0xffbd8] 0x008a9000 + 0xffbd8 = 0x009a8bd8
.byte 0xa8, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffbe0] 0x008a9000 + 0xffbe0 = 0x009a8be0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0x8b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffbf0] 0x008a9000 + 0xffbf0 = 0x009a8bf0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xe5, 0x9c, 0x00, 0xe8, 0x8b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffc00] 0x008a9000 + 0xffc00 = 0x009a8c00
RTTIBaseClassDescriptor CameraModeNew3 1                                                                           // [0xffc10] 0x008a9000 + 0xffc10 = 0x009a8c10
.byte 0x10, 0x8c, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xffc28] 0x008a9000 + 0xffc28 = 0x009a8c28
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffc30] 0x008a9000 + 0xffc30 = 0x009a8c30
.byte 0x02, 0x00, 0x00, 0x00, 0x28, 0x8c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffc40] 0x008a9000 + 0xffc40 = 0x009a8c40
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xd3, 0x9c, 0x00, 0x38, 0x8c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffc50] 0x008a9000 + 0xffc50 = 0x009a8c50
RTTIBaseClassDescriptor CameraModePath 1                                                                           // [0xffc60] 0x008a9000 + 0xffc60 = 0x009a8c60
.byte 0x60, 0x8c, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xffc78] 0x008a9000 + 0xffc78 = 0x009a8c78
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffc80] 0x008a9000 + 0xffc80 = 0x009a8c80
.byte 0x02, 0x00, 0x00, 0x00, 0x78, 0x8c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffc90] 0x008a9000 + 0xffc90 = 0x009a8c90
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xd9, 0x9c, 0x00, 0x88, 0x8c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffca0] 0x008a9000 + 0xffca0 = 0x009a8ca0
RTTIBaseClassDescriptor CameraModeScript 2                                                                         // [0xffcb0] 0x008a9000 + 0xffcb0 = 0x009a8cb0
.byte 0xb0, 0x8c, 0x9a, 0x00, 0x30, 0x8a, 0x9a, 0x00                                                               // [0xffcc8] 0x008a9000 + 0xffcc8 = 0x009a8cc8
.byte 0xa8, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffcd0] 0x008a9000 + 0xffcd0 = 0x009a8cd0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0x8c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffce0] 0x008a9000 + 0xffce0 = 0x009a8ce0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0xe1, 0x9c, 0x00, 0xd8, 0x8c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffcf0] 0x008a9000 + 0xffcf0 = 0x009a8cf0
RTTIBaseClassDescriptor CameraModeTwoObjects 1                                                                     // [0xffd00] 0x008a9000 + 0xffd00 = 0x009a8d00
.byte 0x00, 0x8d, 0x9a, 0x00, 0xa8, 0x88, 0x9a, 0x00                                                               // [0xffd18] 0x008a9000 + 0xffd18 = 0x009a8d18
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffd20] 0x008a9000 + 0xffd20 = 0x009a8d20
.byte 0x02, 0x00, 0x00, 0x00, 0x18, 0x8d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffd30] 0x008a9000 + 0xffd30 = 0x009a8d30
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xe7, 0x9c, 0x00, 0x28, 0x8d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffd40] 0x008a9000 + 0xffd40 = 0x009a8d40
RTTIBaseClassDescriptor GContainerInfo 2                                                                           // [0xffd50] 0x008a9000 + 0xffd50 = 0x009a8d50
RTTIBaseClassDescriptor GCitadelInfo 3                                                                             // [0xffd68] 0x008a9000 + 0xffd68 = 0x009a8d68
.byte 0x68, 0x8d, 0x9a, 0x00, 0x50, 0x8d, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xffd80] 0x008a9000 + 0xffd80 = 0x009a8d80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffd90] 0x008a9000 + 0xffd90 = 0x009a8d90
.byte 0x04, 0x00, 0x00, 0x00, 0x80, 0x8d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffda0] 0x008a9000 + 0xffda0 = 0x009a8da0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xe8, 0x9c, 0x00, 0x98, 0x8d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffdb0] 0x008a9000 + 0xffdb0 = 0x009a8db0
RTTIBaseClassDescriptor Container 3                                                                                // [0xffdc0] 0x008a9000 + 0xffdc0 = 0x009a8dc0
RTTIBaseClassDescriptor Citadel 4                                                                                  // [0xffdd8] 0x008a9000 + 0xffdd8 = 0x009a8dd8
.byte 0xd8, 0x8d, 0x9a, 0x00, 0xc0, 0x8d, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0xffdf0] 0x008a9000 + 0xffdf0 = 0x009a8df0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffe00] 0x008a9000 + 0xffe00 = 0x009a8e00
.byte 0x05, 0x00, 0x00, 0x00, 0xf0, 0x8d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffe10] 0x008a9000 + 0xffe10 = 0x009a8e10
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xe8, 0x9c, 0x00, 0x08, 0x8e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffe20] 0x008a9000 + 0xffe20 = 0x009a8e20
RTTIBaseClassDescriptor GCitadelPartInfo 4                                                                         // [0xffe30] 0x008a9000 + 0xffe30 = 0x009a8e30
RTTIBaseClassDescriptor GCitadelHeartInfo 5                                                                        // [0xffe48] 0x008a9000 + 0xffe48 = 0x009a8e48
.byte 0x48, 0x8e, 0x9a, 0x00, 0x30, 0x8e, 0x9a, 0x00, 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00               // [0xffe60] 0x008a9000 + 0xffe60 = 0x009a8e60
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffe70] 0x008a9000 + 0xffe70 = 0x009a8e70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x60, 0x8e, 0x9a, 0x00               // [0xffe80] 0x008a9000 + 0xffe80 = 0x009a8e80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe9, 0x9c, 0x00               // [0xffe90] 0x008a9000 + 0xffe90 = 0x009a8e90
.byte 0x80, 0x8e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xffea0] 0x008a9000 + 0xffea0 = 0x009a8ea0
RTTIBaseClassDescriptor LeashObj 4                                                                                 // [0xffea8] 0x008a9000 + 0xffea8 = 0x009a8ea8
.byte 0xa8, 0x8e, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0xffec0] 0x008a9000 + 0xffec0 = 0x009a8ec0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffed0] 0x008a9000 + 0xffed0 = 0x009a8ed0
.byte 0x05, 0x00, 0x00, 0x00, 0xc0, 0x8e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffee0] 0x008a9000 + 0xffee0 = 0x009a8ee0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xe9, 0x9c, 0x00, 0xd8, 0x8e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xffef0] 0x008a9000 + 0xffef0 = 0x009a8ef0
RTTIBaseClassDescriptor CitadelPart 6                                                                              // [0xfff00] 0x008a9000 + 0xfff00 = 0x009a8f00
RTTIBaseClassDescriptor CitadelHeart 7                                                                             // [0xfff18] 0x008a9000 + 0xfff18 = 0x009a8f18
.byte 0x18, 0x8f, 0x9a, 0x00, 0x00, 0x8f, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0xfff30] 0x008a9000 + 0xfff30 = 0x009a8f30
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0xfff40] 0x008a9000 + 0xfff40 = 0x009a8f40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfff50] 0x008a9000 + 0xfff50 = 0x009a8f50
.byte 0x08, 0x00, 0x00, 0x00, 0x30, 0x8f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfff60] 0x008a9000 + 0xfff60 = 0x009a8f60
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xe8, 0x9c, 0x00, 0x58, 0x8f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfff70] 0x008a9000 + 0xfff70 = 0x009a8f70
RTTIBaseClassDescriptor PlannedCitadelPart 4                                                                       // [0xfff80] 0x008a9000 + 0xfff80 = 0x009a8f80
RTTIBaseClassDescriptor PlannedCitadelHeart 5                                                                      // [0xfff98] 0x008a9000 + 0xfff98 = 0x009a8f98
.byte 0x98, 0x8f, 0x9a, 0x00, 0x80, 0x8f, 0x9a, 0x00, 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0xfffb0] 0x008a9000 + 0xfffb0 = 0x009a8fb0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0xfffc0] 0x008a9000 + 0xfffc0 = 0x009a8fc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb0, 0x8f, 0x9a, 0x00               // [0xfffd0] 0x008a9000 + 0xfffd0 = 0x009a8fd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xea, 0x9c, 0x00               // [0xfffe0] 0x008a9000 + 0xfffe0 = 0x009a8fe0
.byte 0xd0, 0x8f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0xffff0] 0x008a9000 + 0xffff0 = 0x009a8ff0
RTTIBaseClassDescriptor UR_PlasmaInf 3                                                                             // [0xffff8] 0x008a9000 + 0xffff8 = 0x009a8ff8
.byte 0xf8, 0x8f, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x100010] 0x008a9000 + 0x100010 = 0x009a9010
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100020] 0x008a9000 + 0x100020 = 0x009a9020
.byte 0x04, 0x00, 0x00, 0x00, 0x10, 0x90, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100030] 0x008a9000 + 0x100030 = 0x009a9030
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xea, 0x9c, 0x00, 0x28, 0x90, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100040] 0x008a9000 + 0x100040 = 0x009a9040
RTTIBaseClassDescriptor PSysBase 2                                                                                 // [0x100050] 0x008a9000 + 0x100050 = 0x009a9050
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x100068] 0x008a9000 + 0x100068 = 0x009a9068
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100070] 0x008a9000 + 0x100070 = 0x009a9070
.byte 0x03, 0x00, 0x00, 0x00, 0x68, 0x90, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100080] 0x008a9000 + 0x100080 = 0x009a9080
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xea, 0x9c, 0x00, 0x78, 0x90, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100090] 0x008a9000 + 0x100090 = 0x009a9090
RTTIBaseClassDescriptor PlannedTownCitadelHeart 4                                                                  // [0x1000a0] 0x008a9000 + 0x1000a0 = 0x009a90a0
.byte 0xa0, 0x90, 0x9a, 0x00, 0x98, 0x64, 0x9a, 0x00                                                               // [0x1000b8] 0x008a9000 + 0x1000b8 = 0x009a90b8
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1000c0] 0x008a9000 + 0x1000c0 = 0x009a90c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xb8, 0x90, 0x9a, 0x00               // [0x1000d0] 0x008a9000 + 0x1000d0 = 0x009a90d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xea, 0x9c, 0x00               // [0x1000e0] 0x008a9000 + 0x1000e0 = 0x009a90e0
.byte 0xd0, 0x90, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1000f0] 0x008a9000 + 0x1000f0 = 0x009a90f0
RTTIBaseClassDescriptor CitadelEntrance 4                                                                          // [0x1000f8] 0x008a9000 + 0x1000f8 = 0x009a90f8
.byte 0xf8, 0x90, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x100110] 0x008a9000 + 0x100110 = 0x009a9110
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100120] 0x008a9000 + 0x100120 = 0x009a9120
.byte 0x05, 0x00, 0x00, 0x00, 0x10, 0x91, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100130] 0x008a9000 + 0x100130 = 0x009a9130
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xeb, 0x9c, 0x00, 0x28, 0x91, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100140] 0x008a9000 + 0x100140 = 0x009a9140
.byte 0x00, 0x8f, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x100150] 0x008a9000 + 0x100150 = 0x009a9150
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100160] 0x008a9000 + 0x100160 = 0x009a9160
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, 0x91, 0x9a, 0x00               // [0x100170] 0x008a9000 + 0x100170 = 0x009a9170
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xe8, 0x9c, 0x00               // [0x100180] 0x008a9000 + 0x100180 = 0x009a9180
.byte 0x70, 0x91, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x8f, 0x9a, 0x00, 0x98, 0x64, 0x9a, 0x00               // [0x100190] 0x008a9000 + 0x100190 = 0x009a9190
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1001a0] 0x008a9000 + 0x1001a0 = 0x009a91a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x98, 0x91, 0x9a, 0x00               // [0x1001b0] 0x008a9000 + 0x1001b0 = 0x009a91b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xea, 0x9c, 0x00               // [0x1001c0] 0x008a9000 + 0x1001c0 = 0x009a91c0
.byte 0xb0, 0x91, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x8d, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x1001d0] 0x008a9000 + 0x1001d0 = 0x009a91d0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1001e0] 0x008a9000 + 0x1001e0 = 0x009a91e0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0x91, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1001f0] 0x008a9000 + 0x1001f0 = 0x009a91f0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0xe7, 0x9c, 0x00, 0xe8, 0x91, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100200] 0x008a9000 + 0x100200 = 0x009a9200
.byte 0xc0, 0x8d, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x100210] 0x008a9000 + 0x100210 = 0x009a9210
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100220] 0x008a9000 + 0x100220 = 0x009a9220
.byte 0x04, 0x00, 0x00, 0x00, 0x10, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100230] 0x008a9000 + 0x100230 = 0x009a9230
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xe8, 0x9c, 0x00, 0x28, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100240] 0x008a9000 + 0x100240 = 0x009a9240
.byte 0x88, 0x92, 0x9a, 0x00, 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100250] 0x008a9000 + 0x100250 = 0x009a9250
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x92, 0x9a, 0x00               // [0x100260] 0x008a9000 + 0x100260 = 0x009a9260
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xec, 0x9c, 0x00               // [0x100270] 0x008a9000 + 0x100270 = 0x009a9270
.byte 0x60, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x100280] 0x008a9000 + 0x100280 = 0x009a9280
RTTIBaseClassDescriptor Morphable 1                                                                                // [0x100288] 0x008a9000 + 0x100288 = 0x009a9288
RTTIBaseClassDescriptor CHand 2                                                                                    // [0x1002a0] 0x008a9000 + 0x1002a0 = 0x009a92a0
.byte 0xa0, 0x92, 0x9a, 0x00, 0x88, 0x92, 0x9a, 0x00                                                               // [0x1002b8] 0x008a9000 + 0x1002b8 = 0x009a92b8
.byte 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1002c0] 0x008a9000 + 0x1002c0 = 0x009a92c0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1002d0] 0x008a9000 + 0x1002d0 = 0x009a92d0
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xec, 0x9c, 0x00, 0xc8, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1002e0] 0x008a9000 + 0x1002e0 = 0x009a92e0
RTTIBaseClassDescriptor HandState 0                                                                                // [0x1002f0] 0x008a9000 + 0x1002f0 = 0x009a92f0
RTTIBaseClassDescriptor HandStateInvisible 1                                                                       // [0x100308] 0x008a9000 + 0x100308 = 0x009a9308
.byte 0x08, 0x93, 0x9a, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100320] 0x008a9000 + 0x100320 = 0x009a9320
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x93, 0x9a, 0x00               // [0x100330] 0x008a9000 + 0x100330 = 0x009a9330
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xec, 0x9c, 0x00               // [0x100340] 0x008a9000 + 0x100340 = 0x009a9340
.byte 0x30, 0x93, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x100350] 0x008a9000 + 0x100350 = 0x009a9350
RTTIBaseClassDescriptor CPUCheck 0                                                                                 // [0x100358] 0x008a9000 + 0x100358 = 0x009a9358
.byte 0x58, 0x93, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100370] 0x008a9000 + 0x100370 = 0x009a9370
.byte 0x01, 0x00, 0x00, 0x00, 0x70, 0x93, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100380] 0x008a9000 + 0x100380 = 0x009a9380
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xee, 0x9c, 0x00, 0x78, 0x93, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100390] 0x008a9000 + 0x100390 = 0x009a9390
RTTIBaseClassDescriptor CreatureInfo 6                                                                             // [0x1003a0] 0x008a9000 + 0x1003a0 = 0x009a93a0
.byte 0xa0, 0x93, 0x9a, 0x00, 0x20, 0x6b, 0x9a, 0x00                                                               // [0x1003b8] 0x008a9000 + 0x1003b8 = 0x009a93b8
.byte 0x08, 0x6b, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x1003c0] 0x008a9000 + 0x1003c0 = 0x009a93c0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1003d0] 0x008a9000 + 0x1003d0 = 0x009a93d0
.byte 0x07, 0x00, 0x00, 0x00, 0xb8, 0x93, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1003e0] 0x008a9000 + 0x1003e0 = 0x009a93e0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0x9c, 0x00, 0xd8, 0x93, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1003f0] 0x008a9000 + 0x1003f0 = 0x009a93f0
RTTIBaseClassDescriptor DifferentCreatureInfo 2                                                                    // [0x100400] 0x008a9000 + 0x100400 = 0x009a9400
.byte 0x00, 0x94, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x100418] 0x008a9000 + 0x100418 = 0x009a9418
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100420] 0x008a9000 + 0x100420 = 0x009a9420
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0x94, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100430] 0x008a9000 + 0x100430 = 0x009a9430
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xf9, 0x9c, 0x00, 0x28, 0x94, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100440] 0x008a9000 + 0x100440 = 0x009a9440
RTTIBaseClassDescriptor CreaturePlan 1                                                                             // [0x100450] 0x008a9000 + 0x100450 = 0x009a9450
.byte 0x50, 0x94, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x100468] 0x008a9000 + 0x100468 = 0x009a9468
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100470] 0x008a9000 + 0x100470 = 0x009a9470
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0x94, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100480] 0x008a9000 + 0x100480 = 0x009a9480
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xf9, 0x9c, 0x00, 0x78, 0x94, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100490] 0x008a9000 + 0x100490 = 0x009a9490
RTTIBaseClassDescriptor GAlignment 1                                                                               // [0x1004a0] 0x008a9000 + 0x1004a0 = 0x009a94a0
.byte 0xa0, 0x94, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1004b8] 0x008a9000 + 0x1004b8 = 0x009a94b8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1004c0] 0x008a9000 + 0x1004c0 = 0x009a94c0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0x94, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1004d0] 0x008a9000 + 0x1004d0 = 0x009a94d0
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0xf9, 0x9c, 0x00, 0xc8, 0x94, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1004e0] 0x008a9000 + 0x1004e0 = 0x009a94e0
RTTIBaseClassDescriptor Creature 7                                                                                 // [0x1004f0] 0x008a9000 + 0x1004f0 = 0x009a94f0
.byte 0xf0, 0x94, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00                                                               // [0x100508] 0x008a9000 + 0x100508 = 0x009a9508
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x100510] 0x008a9000 + 0x100510 = 0x009a9510
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100520] 0x008a9000 + 0x100520 = 0x009a9520
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x95, 0x9a, 0x00               // [0x100530] 0x008a9000 + 0x100530 = 0x009a9530
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x80, 0x9c, 0x00               // [0x100540] 0x008a9000 + 0x100540 = 0x009a9540
.byte 0x30, 0x95, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x100550] 0x008a9000 + 0x100550 = 0x009a9550
RTTIBaseClassDescriptor CreatureSubActionAgenda 1                                                                  // [0x100558] 0x008a9000 + 0x100558 = 0x009a9558
.byte 0x58, 0x95, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100570] 0x008a9000 + 0x100570 = 0x009a9570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x70, 0x95, 0x9a, 0x00               // [0x100580] 0x008a9000 + 0x100580 = 0x009a9580
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xf9, 0x9c, 0x00               // [0x100590] 0x008a9000 + 0x100590 = 0x009a9590
.byte 0x80, 0x95, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1005a0] 0x008a9000 + 0x1005a0 = 0x009a95a0
RTTIBaseClassDescriptor CreatureSubAction 1                                                                        // [0x1005a8] 0x008a9000 + 0x1005a8 = 0x009a95a8
.byte 0xa8, 0x95, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1005c0] 0x008a9000 + 0x1005c0 = 0x009a95c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc0, 0x95, 0x9a, 0x00               // [0x1005d0] 0x008a9000 + 0x1005d0 = 0x009a95d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x9c, 0x00               // [0x1005e0] 0x008a9000 + 0x1005e0 = 0x009a95e0
.byte 0xd0, 0x95, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00               // [0x1005f0] 0x008a9000 + 0x1005f0 = 0x009a95f0
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x100600] 0x008a9000 + 0x100600 = 0x009a9600
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100610] 0x008a9000 + 0x100610 = 0x009a9610
.byte 0x07, 0x00, 0x00, 0x00, 0xf8, 0x95, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100620] 0x008a9000 + 0x100620 = 0x009a9620
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0x8d, 0x9c, 0x00, 0x18, 0x96, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100630] 0x008a9000 + 0x100630 = 0x009a9630
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x100640] 0x008a9000 + 0x100640 = 0x009a9640
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100650] 0x008a9000 + 0x100650 = 0x009a9650
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x96, 0x9a, 0x00               // [0x100660] 0x008a9000 + 0x100660 = 0x009a9660
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x8d, 0x9c, 0x00               // [0x100670] 0x008a9000 + 0x100670 = 0x009a9670
.byte 0x60, 0x96, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x100680] 0x008a9000 + 0x100680 = 0x009a9680
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100690] 0x008a9000 + 0x100690 = 0x009a9690
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x88, 0x96, 0x9a, 0x00               // [0x1006a0] 0x008a9000 + 0x1006a0 = 0x009a96a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x8d, 0x9c, 0x00               // [0x1006b0] 0x008a9000 + 0x1006b0 = 0x009a96b0
.byte 0xa0, 0x96, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1006c0] 0x008a9000 + 0x1006c0 = 0x009a96c0
RTTIBaseClassDescriptorStruct CreatureValueSpinner 2                                                               // [0x1006c8] 0x008a9000 + 0x1006c8 = 0x009a96c8
.byte 0xc8, 0x96, 0x9a, 0x00, 0xf0, 0x83, 0x9a, 0x00, 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1006e0] 0x008a9000 + 0x1006e0 = 0x009a96e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe0, 0x96, 0x9a, 0x00               // [0x1006f0] 0x008a9000 + 0x1006f0 = 0x009a96f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xfa, 0x9c, 0x00               // [0x100700] 0x008a9000 + 0x100700 = 0x009a9700
.byte 0xf0, 0x96, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x100710] 0x008a9000 + 0x100710 = 0x009a9710
RTTIBaseClassDescriptor SubArgument 0                                                                              // [0x100718] 0x008a9000 + 0x100718 = 0x009a9718
RTTIBaseClassDescriptor SubArgumentPoint 1                                                                         // [0x100730] 0x008a9000 + 0x100730 = 0x009a9730
.byte 0x30, 0x97, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100748] 0x008a9000 + 0x100748 = 0x009a9748
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100750] 0x008a9000 + 0x100750 = 0x009a9750
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0x97, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100760] 0x008a9000 + 0x100760 = 0x009a9760
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x03, 0x9d, 0x00, 0x58, 0x97, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100770] 0x008a9000 + 0x100770 = 0x009a9770
RTTIBaseClassDescriptor SubArgumentPointAndFloat 1                                                                 // [0x100780] 0x008a9000 + 0x100780 = 0x009a9780
.byte 0x80, 0x97, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100798] 0x008a9000 + 0x100798 = 0x009a9798
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1007a0] 0x008a9000 + 0x1007a0 = 0x009a97a0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0x97, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1007b0] 0x008a9000 + 0x1007b0 = 0x009a97b0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x04, 0x9d, 0x00, 0xa8, 0x97, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1007c0] 0x008a9000 + 0x1007c0 = 0x009a97c0
RTTIBaseClassDescriptor SubArgumentObject 1                                                                        // [0x1007d0] 0x008a9000 + 0x1007d0 = 0x009a97d0
.byte 0xd0, 0x97, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x1007e8] 0x008a9000 + 0x1007e8 = 0x009a97e8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1007f0] 0x008a9000 + 0x1007f0 = 0x009a97f0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0x97, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100800] 0x008a9000 + 0x100800 = 0x009a9800
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0x06, 0x9d, 0x00, 0xf8, 0x97, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100810] 0x008a9000 + 0x100810 = 0x009a9810
RTTIBaseClassDescriptor SubArgumentIntegerAndFloat 1                                                               // [0x100820] 0x008a9000 + 0x100820 = 0x009a9820
.byte 0x20, 0x98, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100838] 0x008a9000 + 0x100838 = 0x009a9838
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100840] 0x008a9000 + 0x100840 = 0x009a9840
.byte 0x02, 0x00, 0x00, 0x00, 0x38, 0x98, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100850] 0x008a9000 + 0x100850 = 0x009a9850
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x06, 0x9d, 0x00, 0x48, 0x98, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100860] 0x008a9000 + 0x100860 = 0x009a9860
RTTIBaseClassDescriptor SubArgumentFloat 1                                                                         // [0x100870] 0x008a9000 + 0x100870 = 0x009a9870
.byte 0x70, 0x98, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100888] 0x008a9000 + 0x100888 = 0x009a9888
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100890] 0x008a9000 + 0x100890 = 0x009a9890
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0x98, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1008a0] 0x008a9000 + 0x1008a0 = 0x009a98a0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x06, 0x9d, 0x00, 0x98, 0x98, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1008b0] 0x008a9000 + 0x1008b0 = 0x009a98b0
RTTIBaseClassDescriptor SubArgumentInteger 1                                                                       // [0x1008c0] 0x008a9000 + 0x1008c0 = 0x009a98c0
.byte 0xc0, 0x98, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x1008d8] 0x008a9000 + 0x1008d8 = 0x009a98d8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1008e0] 0x008a9000 + 0x1008e0 = 0x009a98e0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0x98, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1008f0] 0x008a9000 + 0x1008f0 = 0x009a98f0
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x06, 0x9d, 0x00, 0xe8, 0x98, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100900] 0x008a9000 + 0x100900 = 0x009a9900
RTTIBaseClassDescriptor LH3DCreature 2                                                                             // [0x100910] 0x008a9000 + 0x100910 = 0x009a9910
.byte 0x10, 0x99, 0x9a, 0x00, 0x88, 0x92, 0x9a, 0x00                                                               // [0x100928] 0x008a9000 + 0x100928 = 0x009a9928
.byte 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100930] 0x008a9000 + 0x100930 = 0x009a9930
.byte 0x03, 0x00, 0x00, 0x00, 0x28, 0x99, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100940] 0x008a9000 + 0x100940 = 0x009a9940
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x10, 0x9d, 0x00, 0x38, 0x99, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100950] 0x008a9000 + 0x100950 = 0x009a9950
RTTIBaseClassDescriptor CreatureActionInfo 2                                                                       // [0x100960] 0x008a9000 + 0x100960 = 0x009a9960
.byte 0x60, 0x99, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x100978] 0x008a9000 + 0x100978 = 0x009a9978
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100980] 0x008a9000 + 0x100980 = 0x009a9980
.byte 0x03, 0x00, 0x00, 0x00, 0x78, 0x99, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100990] 0x008a9000 + 0x100990 = 0x009a9990
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0x7d, 0x9d, 0x00, 0x88, 0x99, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1009a0] 0x008a9000 + 0x1009a0 = 0x009a99a0
RTTIBaseClassDescriptor CreatureInitialDesireInfo 2                                                                // [0x1009b0] 0x008a9000 + 0x1009b0 = 0x009a99b0
.byte 0xb0, 0x99, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x1009c8] 0x008a9000 + 0x1009c8 = 0x009a99c8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1009d0] 0x008a9000 + 0x1009d0 = 0x009a99d0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0x99, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1009e0] 0x008a9000 + 0x1009e0 = 0x009a99e0
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x7d, 0x9d, 0x00, 0xd8, 0x99, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1009f0] 0x008a9000 + 0x1009f0 = 0x009a99f0
RTTIBaseClassDescriptor CreatureDesireActionEntry 2                                                                // [0x100a00] 0x008a9000 + 0x100a00 = 0x009a9a00
.byte 0x00, 0x9a, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x100a18] 0x008a9000 + 0x100a18 = 0x009a9a18
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100a20] 0x008a9000 + 0x100a20 = 0x009a9a20
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0x9a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100a30] 0x008a9000 + 0x100a30 = 0x009a9a30
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x7d, 0x9d, 0x00, 0x28, 0x9a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100a40] 0x008a9000 + 0x100a40 = 0x009a9a40
RTTIBaseClassDescriptor CreatureDesireAttributeEntry 2                                                             // [0x100a50] 0x008a9000 + 0x100a50 = 0x009a9a50
.byte 0x50, 0x9a, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x100a68] 0x008a9000 + 0x100a68 = 0x009a9a68
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100a70] 0x008a9000 + 0x100a70 = 0x009a9a70
.byte 0x03, 0x00, 0x00, 0x00, 0x68, 0x9a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100a80] 0x008a9000 + 0x100a80 = 0x009a9a80
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x7d, 0x9d, 0x00, 0x78, 0x9a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100a90] 0x008a9000 + 0x100a90 = 0x009a9a90
RTTIBaseClassDescriptor SubArgumentObjectAndFloat 1                                                                // [0x100aa0] 0x008a9000 + 0x100aa0 = 0x009a9aa0
.byte 0xa0, 0x9a, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100ab8] 0x008a9000 + 0x100ab8 = 0x009a9ab8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ac0] 0x008a9000 + 0x100ac0 = 0x009a9ac0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0x9a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ad0] 0x008a9000 + 0x100ad0 = 0x009a9ad0
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x95, 0x9d, 0x00, 0xc8, 0x9a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ae0] 0x008a9000 + 0x100ae0 = 0x009a9ae0
RTTIBaseClassDescriptor SubArgumentObjectAndInteger 1                                                              // [0x100af0] 0x008a9000 + 0x100af0 = 0x009a9af0
.byte 0xf0, 0x9a, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100b08] 0x008a9000 + 0x100b08 = 0x009a9b08
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100b10] 0x008a9000 + 0x100b10 = 0x009a9b10
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0x9b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100b20] 0x008a9000 + 0x100b20 = 0x009a9b20
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x95, 0x9d, 0x00, 0x18, 0x9b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100b30] 0x008a9000 + 0x100b30 = 0x009a9b30
RTTIBaseClassDescriptor SubArgumentPointIntegerFloatAndSpell 1                                                     // [0x100b40] 0x008a9000 + 0x100b40 = 0x009a9b40
.byte 0x40, 0x9b, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100b58] 0x008a9000 + 0x100b58 = 0x009a9b58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100b60] 0x008a9000 + 0x100b60 = 0x009a9b60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0x9b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100b70] 0x008a9000 + 0x100b70 = 0x009a9b70
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0x95, 0x9d, 0x00, 0x68, 0x9b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100b80] 0x008a9000 + 0x100b80 = 0x009a9b80
RTTIBaseClassDescriptor SubArgumentObjectIntegerFloatAndSpell 1                                                    // [0x100b90] 0x008a9000 + 0x100b90 = 0x009a9b90
.byte 0x90, 0x9b, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x100ba8] 0x008a9000 + 0x100ba8 = 0x009a9ba8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100bb0] 0x008a9000 + 0x100bb0 = 0x009a9bb0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0x9b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100bc0] 0x008a9000 + 0x100bc0 = 0x009a9bc0
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x96, 0x9d, 0x00, 0xb8, 0x9b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100bd0] 0x008a9000 + 0x100bd0 = 0x009a9bd0
RTTIBaseClassDescriptor CreatureCommand 1                                                                          // [0x100be0] 0x008a9000 + 0x100be0 = 0x009a9be0
.byte 0xe0, 0x9b, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x100bf8] 0x008a9000 + 0x100bf8 = 0x009a9bf8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100c00] 0x008a9000 + 0x100c00 = 0x009a9c00
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0x9b, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100c10] 0x008a9000 + 0x100c10 = 0x009a9c10
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x98, 0x9d, 0x00, 0x08, 0x9c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100c20] 0x008a9000 + 0x100c20 = 0x009a9c20
RTTIBaseClassDescriptor CreatureAttitudeToPlayer 1                                                                 // [0x100c30] 0x008a9000 + 0x100c30 = 0x009a9c30
.byte 0x30, 0x9c, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x100c48] 0x008a9000 + 0x100c48 = 0x009a9c48
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100c50] 0x008a9000 + 0x100c50 = 0x009a9c50
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0x9c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100c60] 0x008a9000 + 0x100c60 = 0x009a9c60
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0x9b, 0x9d, 0x00, 0x58, 0x9c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100c70] 0x008a9000 + 0x100c70 = 0x009a9c70
RTTIBaseClassDescriptor AttributeType 2                                                                            // [0x100c80] 0x008a9000 + 0x100c80 = 0x009a9c80
.byte 0x80, 0x9c, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100c98] 0x008a9000 + 0x100c98 = 0x009a9c98
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ca0] 0x008a9000 + 0x100ca0 = 0x009a9ca0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0x9c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100cb0] 0x008a9000 + 0x100cb0 = 0x009a9cb0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xd2, 0x9d, 0x00, 0xa8, 0x9c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100cc0] 0x008a9000 + 0x100cc0 = 0x009a9cc0
RTTIBaseClassDescriptor AttributeCreatureType 2                                                                    // [0x100cd0] 0x008a9000 + 0x100cd0 = 0x009a9cd0
.byte 0xd0, 0x9c, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100ce8] 0x008a9000 + 0x100ce8 = 0x009a9ce8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100cf0] 0x008a9000 + 0x100cf0 = 0x009a9cf0
.byte 0x03, 0x00, 0x00, 0x00, 0xe8, 0x9c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100d00] 0x008a9000 + 0x100d00 = 0x009a9d00
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xd2, 0x9d, 0x00, 0xf8, 0x9c, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100d10] 0x008a9000 + 0x100d10 = 0x009a9d10
RTTIBaseClassDescriptor AttributeAnimate 2                                                                         // [0x100d20] 0x008a9000 + 0x100d20 = 0x009a9d20
.byte 0x20, 0x9d, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100d38] 0x008a9000 + 0x100d38 = 0x009a9d38
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100d40] 0x008a9000 + 0x100d40 = 0x009a9d40
.byte 0x03, 0x00, 0x00, 0x00, 0x38, 0x9d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100d50] 0x008a9000 + 0x100d50 = 0x009a9d50
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xd2, 0x9d, 0x00, 0x48, 0x9d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100d60] 0x008a9000 + 0x100d60 = 0x009a9d60
RTTIBaseClassDescriptor AttributeIsHarderThanMe 2                                                                  // [0x100d70] 0x008a9000 + 0x100d70 = 0x009a9d70
.byte 0x70, 0x9d, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100d88] 0x008a9000 + 0x100d88 = 0x009a9d88
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100d90] 0x008a9000 + 0x100d90 = 0x009a9d90
.byte 0x03, 0x00, 0x00, 0x00, 0x88, 0x9d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100da0] 0x008a9000 + 0x100da0 = 0x009a9da0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xd2, 0x9d, 0x00, 0x98, 0x9d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100db0] 0x008a9000 + 0x100db0 = 0x009a9db0
RTTIBaseClassDescriptor AttributeOrigin 2                                                                          // [0x100dc0] 0x008a9000 + 0x100dc0 = 0x009a9dc0
.byte 0xc0, 0x9d, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100dd8] 0x008a9000 + 0x100dd8 = 0x009a9dd8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100de0] 0x008a9000 + 0x100de0 = 0x009a9de0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0x9d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100df0] 0x008a9000 + 0x100df0 = 0x009a9df0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xd2, 0x9d, 0x00, 0xe8, 0x9d, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100e00] 0x008a9000 + 0x100e00 = 0x009a9e00
RTTIBaseClassDescriptor AttributePlayerNumber 2                                                                    // [0x100e10] 0x008a9000 + 0x100e10 = 0x009a9e10
.byte 0x10, 0x9e, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100e28] 0x008a9000 + 0x100e28 = 0x009a9e28
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100e30] 0x008a9000 + 0x100e30 = 0x009a9e30
.byte 0x03, 0x00, 0x00, 0x00, 0x28, 0x9e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100e40] 0x008a9000 + 0x100e40 = 0x009a9e40
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xd2, 0x9d, 0x00, 0x38, 0x9e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100e50] 0x008a9000 + 0x100e50 = 0x009a9e50
RTTIBaseClassDescriptor AttributeAllegiance 2                                                                      // [0x100e60] 0x008a9000 + 0x100e60 = 0x009a9e60
.byte 0x60, 0x9e, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100e78] 0x008a9000 + 0x100e78 = 0x009a9e78
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100e80] 0x008a9000 + 0x100e80 = 0x009a9e80
.byte 0x03, 0x00, 0x00, 0x00, 0x78, 0x9e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100e90] 0x008a9000 + 0x100e90 = 0x009a9e90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xd3, 0x9d, 0x00, 0x88, 0x9e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ea0] 0x008a9000 + 0x100ea0 = 0x009a9ea0
RTTIBaseClassDescriptor AttributeSex 2                                                                             // [0x100eb0] 0x008a9000 + 0x100eb0 = 0x009a9eb0
.byte 0xb0, 0x9e, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100ec8] 0x008a9000 + 0x100ec8 = 0x009a9ec8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ed0] 0x008a9000 + 0x100ed0 = 0x009a9ed0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0x9e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ee0] 0x008a9000 + 0x100ee0 = 0x009a9ee0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xd3, 0x9d, 0x00, 0xd8, 0x9e, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100ef0] 0x008a9000 + 0x100ef0 = 0x009a9ef0
RTTIBaseClassDescriptor AttributeOnFire 2                                                                          // [0x100f00] 0x008a9000 + 0x100f00 = 0x009a9f00
.byte 0x00, 0x9f, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100f18] 0x008a9000 + 0x100f18 = 0x009a9f18
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100f20] 0x008a9000 + 0x100f20 = 0x009a9f20
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0x9f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100f30] 0x008a9000 + 0x100f30 = 0x009a9f30
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xd3, 0x9d, 0x00, 0x28, 0x9f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100f40] 0x008a9000 + 0x100f40 = 0x009a9f40
RTTIBaseClassDescriptor CreatureLearningEpisode 1                                                                  // [0x100f50] 0x008a9000 + 0x100f50 = 0x009a9f50
.byte 0x50, 0x9f, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x100f68] 0x008a9000 + 0x100f68 = 0x009a9f68
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100f70] 0x008a9000 + 0x100f70 = 0x009a9f70
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0x9f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100f80] 0x008a9000 + 0x100f80 = 0x009a9f80
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xd3, 0x9d, 0x00, 0x78, 0x9f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100f90] 0x008a9000 + 0x100f90 = 0x009a9f90
RTTIBaseClassDescriptor AttributeVillagerJob 2                                                                     // [0x100fa0] 0x008a9000 + 0x100fa0 = 0x009a9fa0
.byte 0xa0, 0x9f, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x100fb8] 0x008a9000 + 0x100fb8 = 0x009a9fb8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100fc0] 0x008a9000 + 0x100fc0 = 0x009a9fc0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0x9f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100fd0] 0x008a9000 + 0x100fd0 = 0x009a9fd0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xd3, 0x9d, 0x00, 0xc8, 0x9f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x100fe0] 0x008a9000 + 0x100fe0 = 0x009a9fe0
RTTIBaseClassDescriptor Attribute 1                                                                                // [0x100ff0] 0x008a9000 + 0x100ff0 = 0x009a9ff0
RTTIBaseClassDescriptor AttributeLife 2                                                                            // [0x101008] 0x008a9000 + 0x101008 = 0x009aa008
.byte 0x08, 0xa0, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101020] 0x008a9000 + 0x101020 = 0x009aa020
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0xa0, 0x9a, 0x00               // [0x101030] 0x008a9000 + 0x101030 = 0x009aa030
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xd3, 0x9d, 0x00               // [0x101040] 0x008a9000 + 0x101040 = 0x009aa040
.byte 0x30, 0xa0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x9f, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x101050] 0x008a9000 + 0x101050 = 0x009aa050
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101060] 0x008a9000 + 0x101060 = 0x009aa060
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xa0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101070] 0x008a9000 + 0x101070 = 0x009aa070
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xd3, 0x9d, 0x00, 0x68, 0xa0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101080] 0x008a9000 + 0x101080 = 0x009aa080
RTTIBaseClassDescriptor AttributeWhatTownNeedsMost 2                                                               // [0x101090] 0x008a9000 + 0x101090 = 0x009aa090
.byte 0x90, 0xa0, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x1010a8] 0x008a9000 + 0x1010a8 = 0x009aa0a8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1010b0] 0x008a9000 + 0x1010b0 = 0x009aa0b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0xa0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1010c0] 0x008a9000 + 0x1010c0 = 0x009aa0c0
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0xd4, 0x9d, 0x00, 0xb8, 0xa0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1010d0] 0x008a9000 + 0x1010d0 = 0x009aa0d0
RTTIBaseClassDescriptor AttributeTownReligiousBeliefInYou 2                                                        // [0x1010e0] 0x008a9000 + 0x1010e0 = 0x009aa0e0
.byte 0xe0, 0xa0, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x1010f8] 0x008a9000 + 0x1010f8 = 0x009aa0f8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101100] 0x008a9000 + 0x101100 = 0x009aa100
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xa0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101110] 0x008a9000 + 0x101110 = 0x009aa110
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xd4, 0x9d, 0x00, 0x08, 0xa1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101120] 0x008a9000 + 0x101120 = 0x009aa120
RTTIBaseClassDescriptor AttributeTribe 2                                                                           // [0x101130] 0x008a9000 + 0x101130 = 0x009aa130
.byte 0x30, 0xa1, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x101148] 0x008a9000 + 0x101148 = 0x009aa148
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101150] 0x008a9000 + 0x101150 = 0x009aa150
.byte 0x03, 0x00, 0x00, 0x00, 0x48, 0xa1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101160] 0x008a9000 + 0x101160 = 0x009aa160
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0xd4, 0x9d, 0x00, 0x58, 0xa1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101170] 0x008a9000 + 0x101170 = 0x009aa170
RTTIBaseClassDescriptor AttributeTownSize 2                                                                        // [0x101180] 0x008a9000 + 0x101180 = 0x009aa180
.byte 0x80, 0xa1, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x101198] 0x008a9000 + 0x101198 = 0x009aa198
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1011a0] 0x008a9000 + 0x1011a0 = 0x009aa1a0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0xa1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1011b0] 0x008a9000 + 0x1011b0 = 0x009aa1b0
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xd5, 0x9d, 0x00, 0xa8, 0xa1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1011c0] 0x008a9000 + 0x1011c0 = 0x009aa1c0
RTTIBaseClassDescriptor ?$EditorIconButton@VCreatureLessonChooser@@ 2                                              // [0x1011d0] 0x008a9000 + 0x1011d0 = 0x009aa1d0
.byte 0xd0, 0xa1, 0x9a, 0x00, 0x30, 0x6a, 0x9a, 0x00                                                               // [0x1011e8] 0x008a9000 + 0x1011e8 = 0x009aa1e8
.byte 0x18, 0x6a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1011f0] 0x008a9000 + 0x1011f0 = 0x009aa1f0
.byte 0x03, 0x00, 0x00, 0x00, 0xe8, 0xa1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101200] 0x008a9000 + 0x101200 = 0x009aa200
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xd6, 0x9d, 0x00, 0xf8, 0xa1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101210] 0x008a9000 + 0x101210 = 0x009aa210
RTTIBaseClassDescriptor CreatureContext 1                                                                          // [0x101220] 0x008a9000 + 0x101220 = 0x009aa220
.byte 0x20, 0xa2, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101238] 0x008a9000 + 0x101238 = 0x009aa238
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101240] 0x008a9000 + 0x101240 = 0x009aa240
.byte 0x02, 0x00, 0x00, 0x00, 0x38, 0xa2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101250] 0x008a9000 + 0x101250 = 0x009aa250
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0xd7, 0x9d, 0x00, 0x48, 0xa2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101260] 0x008a9000 + 0x101260 = 0x009aa260
RTTIBaseClassDescriptor CreatureVisionState 1                                                                      // [0x101270] 0x008a9000 + 0x101270 = 0x009aa270
.byte 0x70, 0xa2, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101288] 0x008a9000 + 0x101288 = 0x009aa288
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101290] 0x008a9000 + 0x101290 = 0x009aa290
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0xa2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1012a0] 0x008a9000 + 0x1012a0 = 0x009aa2a0
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xd7, 0x9d, 0x00, 0x98, 0xa2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1012b0] 0x008a9000 + 0x1012b0 = 0x009aa2b0
RTTIBaseClassDescriptor CreatureMentalDebug 1                                                                      // [0x1012c0] 0x008a9000 + 0x1012c0 = 0x009aa2c0
.byte 0xc0, 0xa2, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1012d8] 0x008a9000 + 0x1012d8 = 0x009aa2d8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1012e0] 0x008a9000 + 0x1012e0 = 0x009aa2e0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0xa2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1012f0] 0x008a9000 + 0x1012f0 = 0x009aa2f0
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xd8, 0x9d, 0x00, 0xe8, 0xa2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101300] 0x008a9000 + 0x101300 = 0x009aa300
RTTIBaseClassDescriptor CreatureMental 1                                                                           // [0x101310] 0x008a9000 + 0x101310 = 0x009aa310
.byte 0x10, 0xa3, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101328] 0x008a9000 + 0x101328 = 0x009aa328
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101330] 0x008a9000 + 0x101330 = 0x009aa330
.byte 0x02, 0x00, 0x00, 0x00, 0x28, 0xa3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101340] 0x008a9000 + 0x101340 = 0x009aa340
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xd8, 0x9d, 0x00, 0x38, 0xa3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101350] 0x008a9000 + 0x101350 = 0x009aa350
RTTIBaseClassDescriptor CreatureBeliefs 1                                                                          // [0x101360] 0x008a9000 + 0x101360 = 0x009aa360
.byte 0x60, 0xa3, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101378] 0x008a9000 + 0x101378 = 0x009aa378
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101380] 0x008a9000 + 0x101380 = 0x009aa380
.byte 0x02, 0x00, 0x00, 0x00, 0x78, 0xa3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101390] 0x008a9000 + 0x101390 = 0x009aa390
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xd8, 0x9d, 0x00, 0x88, 0xa3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1013a0] 0x008a9000 + 0x1013a0 = 0x009aa3a0
RTTIBaseClassDescriptor CreatureBeliefList 1                                                                       // [0x1013b0] 0x008a9000 + 0x1013b0 = 0x009aa3b0
.byte 0xb0, 0xa3, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1013c8] 0x008a9000 + 0x1013c8 = 0x009aa3c8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1013d0] 0x008a9000 + 0x1013d0 = 0x009aa3d0
.byte 0x02, 0x00, 0x00, 0x00, 0xc8, 0xa3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1013e0] 0x008a9000 + 0x1013e0 = 0x009aa3e0
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0xd8, 0x9d, 0x00, 0xd8, 0xa3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1013f0] 0x008a9000 + 0x1013f0 = 0x009aa3f0
RTTIBaseClassDescriptor CreatureAgenda 1                                                                           // [0x101400] 0x008a9000 + 0x101400 = 0x009aa400
.byte 0x00, 0xa4, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101418] 0x008a9000 + 0x101418 = 0x009aa418
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101420] 0x008a9000 + 0x101420 = 0x009aa420
.byte 0x02, 0x00, 0x00, 0x00, 0x18, 0xa4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101430] 0x008a9000 + 0x101430 = 0x009aa430
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd8, 0x9d, 0x00, 0x28, 0xa4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101440] 0x008a9000 + 0x101440 = 0x009aa440
RTTIBaseClassDescriptor CreatureCommandState 1                                                                     // [0x101450] 0x008a9000 + 0x101450 = 0x009aa450
.byte 0x50, 0xa4, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101468] 0x008a9000 + 0x101468 = 0x009aa468
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101470] 0x008a9000 + 0x101470 = 0x009aa470
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0xa4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101480] 0x008a9000 + 0x101480 = 0x009aa480
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xd8, 0x9d, 0x00, 0x78, 0xa4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101490] 0x008a9000 + 0x101490 = 0x009aa490
RTTIBaseClassDescriptor AttributeForestSize 2                                                                      // [0x1014a0] 0x008a9000 + 0x1014a0 = 0x009aa4a0
.byte 0xa0, 0xa4, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x1014b8] 0x008a9000 + 0x1014b8 = 0x009aa4b8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1014c0] 0x008a9000 + 0x1014c0 = 0x009aa4c0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0xa4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1014d0] 0x008a9000 + 0x1014d0 = 0x009aa4d0
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0xee, 0xbd, 0x00, 0xc8, 0xa4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1014e0] 0x008a9000 + 0x1014e0 = 0x009aa4e0
RTTIBaseClassDescriptor AttributeCreatureWhatHeIsCarrying 2                                                        // [0x1014f0] 0x008a9000 + 0x1014f0 = 0x009aa4f0
.byte 0xf0, 0xa4, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x101508] 0x008a9000 + 0x101508 = 0x009aa508
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101510] 0x008a9000 + 0x101510 = 0x009aa510
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0xa5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101520] 0x008a9000 + 0x101520 = 0x009aa520
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xee, 0xbd, 0x00, 0x18, 0xa5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101530] 0x008a9000 + 0x101530 = 0x009aa530
RTTIBaseClassDescriptor AttributeCreatureSpellKnowledge 2                                                          // [0x101540] 0x008a9000 + 0x101540 = 0x009aa540
.byte 0x40, 0xa5, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x101558] 0x008a9000 + 0x101558 = 0x009aa558
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101560] 0x008a9000 + 0x101560 = 0x009aa560
.byte 0x03, 0x00, 0x00, 0x00, 0x58, 0xa5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101570] 0x008a9000 + 0x101570 = 0x009aa570
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0xee, 0xbd, 0x00, 0x68, 0xa5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101580] 0x008a9000 + 0x101580 = 0x009aa580
RTTIBaseClassDescriptor AttributeCreatureHeight 2                                                                  // [0x101590] 0x008a9000 + 0x101590 = 0x009aa590
.byte 0x90, 0xa5, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x1015a8] 0x008a9000 + 0x1015a8 = 0x009aa5a8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1015b0] 0x008a9000 + 0x1015b0 = 0x009aa5b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0xa5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1015c0] 0x008a9000 + 0x1015c0 = 0x009aa5c0
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xee, 0xbd, 0x00, 0xb8, 0xa5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1015d0] 0x008a9000 + 0x1015d0 = 0x009aa5d0
RTTIBaseClassDescriptor AttributeAbodeBeingBuilt 2                                                                 // [0x1015e0] 0x008a9000 + 0x1015e0 = 0x009aa5e0
.byte 0xe0, 0xa5, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x1015f8] 0x008a9000 + 0x1015f8 = 0x009aa5f8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101600] 0x008a9000 + 0x101600 = 0x009aa600
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xa5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101610] 0x008a9000 + 0x101610 = 0x009aa610
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0xee, 0xbd, 0x00, 0x08, 0xa6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101620] 0x008a9000 + 0x101620 = 0x009aa620
RTTIBaseClassDescriptor AttributeCreatureDominantDesire 2                                                          // [0x101630] 0x008a9000 + 0x101630 = 0x009aa630
.byte 0x30, 0xa6, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x101648] 0x008a9000 + 0x101648 = 0x009aa648
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101650] 0x008a9000 + 0x101650 = 0x009aa650
.byte 0x03, 0x00, 0x00, 0x00, 0x48, 0xa6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101660] 0x008a9000 + 0x101660 = 0x009aa660
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xef, 0xbd, 0x00, 0x58, 0xa6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101670] 0x008a9000 + 0x101670 = 0x009aa670
RTTIBaseClassDescriptor AttributeAbodeType 2                                                                       // [0x101680] 0x008a9000 + 0x101680 = 0x009aa680
.byte 0x80, 0xa6, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x101698] 0x008a9000 + 0x101698 = 0x009aa698
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1016a0] 0x008a9000 + 0x1016a0 = 0x009aa6a0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0xa6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1016b0] 0x008a9000 + 0x1016b0 = 0x009aa6b0
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xef, 0xbd, 0x00, 0xa8, 0xa6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1016c0] 0x008a9000 + 0x1016c0 = 0x009aa6c0
RTTIBaseClassDescriptor AttributeMobileObjectType 2                                                                // [0x1016d0] 0x008a9000 + 0x1016d0 = 0x009aa6d0
.byte 0xd0, 0xa6, 0x9a, 0x00, 0xf0, 0x9f, 0x9a, 0x00                                                               // [0x1016e8] 0x008a9000 + 0x1016e8 = 0x009aa6e8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1016f0] 0x008a9000 + 0x1016f0 = 0x009aa6f0
.byte 0x03, 0x00, 0x00, 0x00, 0xe8, 0xa6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101700] 0x008a9000 + 0x101700 = 0x009aa700
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xef, 0xbd, 0x00, 0xf8, 0xa6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101710] 0x008a9000 + 0x101710 = 0x009aa710
RTTIBaseClassDescriptor CreatureBeliefAboutTown 2                                                                  // [0x101720] 0x008a9000 + 0x101720 = 0x009aa720
.byte 0x20, 0xa7, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x101738] 0x008a9000 + 0x101738 = 0x009aa738
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101740] 0x008a9000 + 0x101740 = 0x009aa740
.byte 0x03, 0x00, 0x00, 0x00, 0x38, 0xa7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101750] 0x008a9000 + 0x101750 = 0x009aa750
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0xf0, 0xbd, 0x00, 0x48, 0xa7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101760] 0x008a9000 + 0x101760 = 0x009aa760
RTTIBaseClassDescriptor CreatureBeliefAboutContext 2                                                               // [0x101770] 0x008a9000 + 0x101770 = 0x009aa770
.byte 0x70, 0xa7, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x101788] 0x008a9000 + 0x101788 = 0x009aa788
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101790] 0x008a9000 + 0x101790 = 0x009aa790
.byte 0x03, 0x00, 0x00, 0x00, 0x88, 0xa7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1017a0] 0x008a9000 + 0x1017a0 = 0x009aa7a0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xf0, 0xbd, 0x00, 0x98, 0xa7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1017b0] 0x008a9000 + 0x1017b0 = 0x009aa7b0
RTTIBaseClassDescriptor CreatureBeliefAboutVillager 2                                                              // [0x1017c0] 0x008a9000 + 0x1017c0 = 0x009aa7c0
.byte 0xc0, 0xa7, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x1017d8] 0x008a9000 + 0x1017d8 = 0x009aa7d8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1017e0] 0x008a9000 + 0x1017e0 = 0x009aa7e0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0xa7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1017f0] 0x008a9000 + 0x1017f0 = 0x009aa7f0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0xbd, 0x00, 0xe8, 0xa7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101800] 0x008a9000 + 0x101800 = 0x009aa800
RTTIBaseClassDescriptor CreatureBeliefAboutAbode 2                                                                 // [0x101810] 0x008a9000 + 0x101810 = 0x009aa810
.byte 0x10, 0xa8, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x101828] 0x008a9000 + 0x101828 = 0x009aa828
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101830] 0x008a9000 + 0x101830 = 0x009aa830
.byte 0x03, 0x00, 0x00, 0x00, 0x28, 0xa8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101840] 0x008a9000 + 0x101840 = 0x009aa840
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xf1, 0xbd, 0x00, 0x38, 0xa8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101850] 0x008a9000 + 0x101850 = 0x009aa850
RTTIBaseClassDescriptor CreatureBeliefAboutForest 2                                                                // [0x101860] 0x008a9000 + 0x101860 = 0x009aa860
.byte 0x60, 0xa8, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x101878] 0x008a9000 + 0x101878 = 0x009aa878
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101880] 0x008a9000 + 0x101880 = 0x009aa880
.byte 0x03, 0x00, 0x00, 0x00, 0x78, 0xa8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101890] 0x008a9000 + 0x101890 = 0x009aa890
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xf1, 0xbd, 0x00, 0x88, 0xa8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1018a0] 0x008a9000 + 0x1018a0 = 0x009aa8a0
RTTIBaseClassDescriptor CreatureBeliefAboutCreature 2                                                              // [0x1018b0] 0x008a9000 + 0x1018b0 = 0x009aa8b0
.byte 0xb0, 0xa8, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x1018c8] 0x008a9000 + 0x1018c8 = 0x009aa8c8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1018d0] 0x008a9000 + 0x1018d0 = 0x009aa8d0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0xa8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1018e0] 0x008a9000 + 0x1018e0 = 0x009aa8e0
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0xf1, 0xbd, 0x00, 0xd8, 0xa8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1018f0] 0x008a9000 + 0x1018f0 = 0x009aa8f0
RTTIBaseClassDescriptor CreatureBeliefSmall 2                                                                      // [0x101900] 0x008a9000 + 0x101900 = 0x009aa900
.byte 0x00, 0xa9, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x101918] 0x008a9000 + 0x101918 = 0x009aa918
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101920] 0x008a9000 + 0x101920 = 0x009aa920
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0xa9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101930] 0x008a9000 + 0x101930 = 0x009aa930
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xf1, 0xbd, 0x00, 0x28, 0xa9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101940] 0x008a9000 + 0x101940 = 0x009aa940
RTTIBaseClassDescriptor CreatureBeliefAboutCitadel 2                                                               // [0x101950] 0x008a9000 + 0x101950 = 0x009aa950
.byte 0x50, 0xa9, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x101968] 0x008a9000 + 0x101968 = 0x009aa968
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101970] 0x008a9000 + 0x101970 = 0x009aa970
.byte 0x03, 0x00, 0x00, 0x00, 0x68, 0xa9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101980] 0x008a9000 + 0x101980 = 0x009aa980
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xf1, 0xbd, 0x00, 0x78, 0xa9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101990] 0x008a9000 + 0x101990 = 0x009aa990
RTTIBaseClassDescriptor CreatureBelief 1                                                                           // [0x1019a0] 0x008a9000 + 0x1019a0 = 0x009aa9a0
RTTIBaseClassDescriptor CreatureBeliefAboutFlock 2                                                                 // [0x1019b8] 0x008a9000 + 0x1019b8 = 0x009aa9b8
.byte 0xb8, 0xa9, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1019d0] 0x008a9000 + 0x1019d0 = 0x009aa9d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xd0, 0xa9, 0x9a, 0x00               // [0x1019e0] 0x008a9000 + 0x1019e0 = 0x009aa9e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf2, 0xbd, 0x00               // [0x1019f0] 0x008a9000 + 0x1019f0 = 0x009aa9f0
.byte 0xe0, 0xa9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xa9, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x101a00] 0x008a9000 + 0x101a00 = 0x009aaa00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101a10] 0x008a9000 + 0x101a10 = 0x009aaa10
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0xaa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101a20] 0x008a9000 + 0x101a20 = 0x009aaa20
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xf1, 0xbd, 0x00, 0x18, 0xaa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101a30] 0x008a9000 + 0x101a30 = 0x009aaa30
RTTIBaseClassDescriptor AllocatedBeliefList 1                                                                      // [0x101a40] 0x008a9000 + 0x101a40 = 0x009aaa40
.byte 0x40, 0xaa, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101a58] 0x008a9000 + 0x101a58 = 0x009aaa58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101a60] 0x008a9000 + 0x101a60 = 0x009aaa60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xaa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101a70] 0x008a9000 + 0x101a70 = 0x009aaa70
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xf3, 0xbd, 0x00, 0x68, 0xaa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101a80] 0x008a9000 + 0x101a80 = 0x009aaa80
RTTIBaseClassDescriptor CreatureBeliefAboutMobileObject 2                                                          // [0x101a90] 0x008a9000 + 0x101a90 = 0x009aaa90
.byte 0x90, 0xaa, 0x9a, 0x00, 0xa0, 0xa9, 0x9a, 0x00                                                               // [0x101aa8] 0x008a9000 + 0x101aa8 = 0x009aaaa8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ab0] 0x008a9000 + 0x101ab0 = 0x009aaab0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0xaa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ac0] 0x008a9000 + 0x101ac0 = 0x009aaac0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xf4, 0xbd, 0x00, 0xb8, 0xaa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ad0] 0x008a9000 + 0x101ad0 = 0x009aaad0
RTTIBaseClassDescriptor CreatureDesireDependency 2                                                                 // [0x101ae0] 0x008a9000 + 0x101ae0 = 0x009aaae0
.byte 0xe0, 0xaa, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101af8] 0x008a9000 + 0x101af8 = 0x009aaaf8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101b00] 0x008a9000 + 0x101b00 = 0x009aab00
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xaa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101b10] 0x008a9000 + 0x101b10 = 0x009aab10
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xf4, 0xbd, 0x00, 0x08, 0xab, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101b20] 0x008a9000 + 0x101b20 = 0x009aab20
RTTIBaseClassDescriptor CreatureDesireForType 2                                                                    // [0x101b30] 0x008a9000 + 0x101b30 = 0x009aab30
.byte 0x30, 0xab, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101b48] 0x008a9000 + 0x101b48 = 0x009aab48
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101b50] 0x008a9000 + 0x101b50 = 0x009aab50
.byte 0x03, 0x00, 0x00, 0x00, 0x48, 0xab, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101b60] 0x008a9000 + 0x101b60 = 0x009aab60
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0xf4, 0xbd, 0x00, 0x58, 0xab, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101b70] 0x008a9000 + 0x101b70 = 0x009aab70
RTTIBaseClassDescriptor CreatureDevelopmentPhaseEntry 2                                                            // [0x101b80] 0x008a9000 + 0x101b80 = 0x009aab80
.byte 0x80, 0xab, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101b98] 0x008a9000 + 0x101b98 = 0x009aab98
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ba0] 0x008a9000 + 0x101ba0 = 0x009aaba0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0xab, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101bb0] 0x008a9000 + 0x101bb0 = 0x009aabb0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xf4, 0xbd, 0x00, 0xa8, 0xab, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101bc0] 0x008a9000 + 0x101bc0 = 0x009aabc0
RTTIBaseClassDescriptor CreatureDevelopmentDurationEntry 2                                                         // [0x101bd0] 0x008a9000 + 0x101bd0 = 0x009aabd0
.byte 0xd0, 0xab, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101be8] 0x008a9000 + 0x101be8 = 0x009aabe8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101bf0] 0x008a9000 + 0x101bf0 = 0x009aabf0
.byte 0x03, 0x00, 0x00, 0x00, 0xe8, 0xab, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101c00] 0x008a9000 + 0x101c00 = 0x009aac00
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xf4, 0xbd, 0x00, 0xf8, 0xab, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101c10] 0x008a9000 + 0x101c10 = 0x009aac10
RTTIBaseClassDescriptor CreatureDesires 1                                                                          // [0x101c20] 0x008a9000 + 0x101c20 = 0x009aac20
.byte 0x20, 0xac, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101c38] 0x008a9000 + 0x101c38 = 0x009aac38
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101c40] 0x008a9000 + 0x101c40 = 0x009aac40
.byte 0x02, 0x00, 0x00, 0x00, 0x38, 0xac, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101c50] 0x008a9000 + 0x101c50 = 0x009aac50
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0xf5, 0xbd, 0x00, 0x48, 0xac, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101c60] 0x008a9000 + 0x101c60 = 0x009aac60
RTTIBaseClassDescriptor CreatureDesireSourceTable 2                                                                // [0x101c70] 0x008a9000 + 0x101c70 = 0x009aac70
.byte 0x70, 0xac, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101c88] 0x008a9000 + 0x101c88 = 0x009aac88
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101c90] 0x008a9000 + 0x101c90 = 0x009aac90
.byte 0x03, 0x00, 0x00, 0x00, 0x88, 0xac, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ca0] 0x008a9000 + 0x101ca0 = 0x009aaca0
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0xf5, 0xbd, 0x00, 0x98, 0xac, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101cb0] 0x008a9000 + 0x101cb0 = 0x009aacb0
RTTIBaseClassDescriptor CreatureInitialSourceInfo 2                                                                // [0x101cc0] 0x008a9000 + 0x101cc0 = 0x009aacc0
.byte 0xc0, 0xac, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101cd8] 0x008a9000 + 0x101cd8 = 0x009aacd8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ce0] 0x008a9000 + 0x101ce0 = 0x009aace0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0xac, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101cf0] 0x008a9000 + 0x101cf0 = 0x009aacf0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0xf5, 0xbd, 0x00, 0xe8, 0xac, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101d00] 0x008a9000 + 0x101d00 = 0x009aad00
RTTIBaseClassDescriptor CreatureSourceBoundsInfo 2                                                                 // [0x101d10] 0x008a9000 + 0x101d10 = 0x009aad10
.byte 0x10, 0xad, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101d28] 0x008a9000 + 0x101d28 = 0x009aad28
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101d30] 0x008a9000 + 0x101d30 = 0x009aad30
.byte 0x03, 0x00, 0x00, 0x00, 0x28, 0xad, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101d40] 0x008a9000 + 0x101d40 = 0x009aad40
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xf5, 0xbd, 0x00, 0x38, 0xad, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101d50] 0x008a9000 + 0x101d50 = 0x009aad50
RTTIBaseClassDescriptor CreatureExplorationRegionEntry 1                                                           // [0x101d60] 0x008a9000 + 0x101d60 = 0x009aad60
.byte 0x60, 0xad, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101d78] 0x008a9000 + 0x101d78 = 0x009aad78
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101d80] 0x008a9000 + 0x101d80 = 0x009aad80
.byte 0x02, 0x00, 0x00, 0x00, 0x78, 0xad, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101d90] 0x008a9000 + 0x101d90 = 0x009aad90
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xf8, 0xbd, 0x00, 0x88, 0xad, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101da0] 0x008a9000 + 0x101da0 = 0x009aada0
RTTIBaseClassDescriptor CreatureGlobalExplorationMap 1                                                             // [0x101db0] 0x008a9000 + 0x101db0 = 0x009aadb0
.byte 0xb0, 0xad, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101dc8] 0x008a9000 + 0x101dc8 = 0x009aadc8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101dd0] 0x008a9000 + 0x101dd0 = 0x009aadd0
.byte 0x02, 0x00, 0x00, 0x00, 0xc8, 0xad, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101de0] 0x008a9000 + 0x101de0 = 0x009aade0
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0xf8, 0xbd, 0x00, 0xd8, 0xad, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101df0] 0x008a9000 + 0x101df0 = 0x009aadf0
RTTIBaseClassDescriptor CreatureExplorationMap 1                                                                   // [0x101e00] 0x008a9000 + 0x101e00 = 0x009aae00
.byte 0x00, 0xae, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101e18] 0x008a9000 + 0x101e18 = 0x009aae18
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101e20] 0x008a9000 + 0x101e20 = 0x009aae20
.byte 0x02, 0x00, 0x00, 0x00, 0x18, 0xae, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101e30] 0x008a9000 + 0x101e30 = 0x009aae30
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xf8, 0xbd, 0x00, 0x28, 0xae, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101e40] 0x008a9000 + 0x101e40 = 0x009aae40
RTTIBaseClassDescriptor CreatureLearning 1                                                                         // [0x101e50] 0x008a9000 + 0x101e50 = 0x009aae50
.byte 0x50, 0xae, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101e68] 0x008a9000 + 0x101e68 = 0x009aae68
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101e70] 0x008a9000 + 0x101e70 = 0x009aae70
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0xae, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101e80] 0x008a9000 + 0x101e80 = 0x009aae80
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xf9, 0xbd, 0x00, 0x78, 0xae, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101e90] 0x008a9000 + 0x101e90 = 0x009aae90
RTTIBaseClassDescriptor CreaturePreviousLesson 1                                                                   // [0x101ea0] 0x008a9000 + 0x101ea0 = 0x009aaea0
.byte 0xa0, 0xae, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101eb8] 0x008a9000 + 0x101eb8 = 0x009aaeb8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ec0] 0x008a9000 + 0x101ec0 = 0x009aaec0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0xae, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ed0] 0x008a9000 + 0x101ed0 = 0x009aaed0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xf9, 0xbd, 0x00, 0xc8, 0xae, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101ee0] 0x008a9000 + 0x101ee0 = 0x009aaee0
RTTIBaseClassDescriptor CreatureLearningContext 1                                                                  // [0x101ef0] 0x008a9000 + 0x101ef0 = 0x009aaef0
.byte 0xf0, 0xae, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101f08] 0x008a9000 + 0x101f08 = 0x009aaf08
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101f10] 0x008a9000 + 0x101f10 = 0x009aaf10
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0xaf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101f20] 0x008a9000 + 0x101f20 = 0x009aaf20
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xfa, 0xbd, 0x00, 0x18, 0xaf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101f30] 0x008a9000 + 0x101f30 = 0x009aaf30
RTTIBaseClassDescriptor CreatureActionsKnownAbout 1                                                                // [0x101f40] 0x008a9000 + 0x101f40 = 0x009aaf40
.byte 0x40, 0xaf, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101f58] 0x008a9000 + 0x101f58 = 0x009aaf58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101f60] 0x008a9000 + 0x101f60 = 0x009aaf60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xaf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101f70] 0x008a9000 + 0x101f70 = 0x009aaf70
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0xfd, 0xbd, 0x00, 0x68, 0xaf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101f80] 0x008a9000 + 0x101f80 = 0x009aaf80
RTTIBaseClassDescriptor CreatureActionKnownAbout 1                                                                 // [0x101f90] 0x008a9000 + 0x101f90 = 0x009aaf90
.byte 0x90, 0xaf, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x101fa8] 0x008a9000 + 0x101fa8 = 0x009aafa8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101fb0] 0x008a9000 + 0x101fb0 = 0x009aafb0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0xaf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101fc0] 0x008a9000 + 0x101fc0 = 0x009aafc0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xfd, 0xbd, 0x00, 0xb8, 0xaf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x101fd0] 0x008a9000 + 0x101fd0 = 0x009aafd0
RTTIBaseClassDescriptor CreatureActionKnownAboutEntry 2                                                            // [0x101fe0] 0x008a9000 + 0x101fe0 = 0x009aafe0
.byte 0xe0, 0xaf, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x101ff8] 0x008a9000 + 0x101ff8 = 0x009aaff8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102000] 0x008a9000 + 0x102000 = 0x009ab000
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xaf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102010] 0x008a9000 + 0x102010 = 0x009ab010
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xbd, 0x00, 0x08, 0xb0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102020] 0x008a9000 + 0x102020 = 0x009ab020
RTTIBaseClassDescriptor CreatureMagicActionKnownAboutEntry 3                                                       // [0x102030] 0x008a9000 + 0x102030 = 0x009ab030
.byte 0x30, 0xb0, 0x9a, 0x00, 0xe0, 0xaf, 0x9a, 0x00                                                               // [0x102048] 0x008a9000 + 0x102048 = 0x009ab048
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102050] 0x008a9000 + 0x102050 = 0x009ab050
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0xb0, 0x9a, 0x00               // [0x102060] 0x008a9000 + 0x102060 = 0x009ab060
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xfe, 0xbd, 0x00               // [0x102070] 0x008a9000 + 0x102070 = 0x009ab070
.byte 0x60, 0xb0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102080] 0x008a9000 + 0x102080 = 0x009ab080
RTTIBaseClassDescriptor CreatureTimeToWait 1                                                                       // [0x102088] 0x008a9000 + 0x102088 = 0x009ab088
.byte 0x88, 0xb0, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1020a0] 0x008a9000 + 0x1020a0 = 0x009ab0a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0xb0, 0x9a, 0x00               // [0x1020b0] 0x008a9000 + 0x1020b0 = 0x009ab0b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xfe, 0xbd, 0x00               // [0x1020c0] 0x008a9000 + 0x1020c0 = 0x009ab0c0
.byte 0xb0, 0xb0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1020d0] 0x008a9000 + 0x1020d0 = 0x009ab0d0
RTTIBaseClassDescriptor CreatureObjectsInspected 1                                                                 // [0x1020d8] 0x008a9000 + 0x1020d8 = 0x009ab0d8
.byte 0xd8, 0xb0, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1020f0] 0x008a9000 + 0x1020f0 = 0x009ab0f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0xb0, 0x9a, 0x00               // [0x102100] 0x008a9000 + 0x102100 = 0x009ab100
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xfe, 0xbd, 0x00               // [0x102110] 0x008a9000 + 0x102110 = 0x009ab110
.byte 0x00, 0xb1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102120] 0x008a9000 + 0x102120 = 0x009ab120
RTTIBaseClassDescriptor CreatureMimicInfo 2                                                                        // [0x102128] 0x008a9000 + 0x102128 = 0x009ab128
.byte 0x28, 0xb1, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102140] 0x008a9000 + 0x102140 = 0x009ab140
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0xb1, 0x9a, 0x00               // [0x102150] 0x008a9000 + 0x102150 = 0x009ab150
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xbe, 0x00               // [0x102160] 0x008a9000 + 0x102160 = 0x009ab160
.byte 0x50, 0xb1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102170] 0x008a9000 + 0x102170 = 0x009ab170
RTTIBaseClassDescriptor CreatureMimicState 1                                                                       // [0x102178] 0x008a9000 + 0x102178 = 0x009ab178
.byte 0x78, 0xb1, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102190] 0x008a9000 + 0x102190 = 0x009ab190
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0xb1, 0x9a, 0x00               // [0x1021a0] 0x008a9000 + 0x1021a0 = 0x009ab1a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0xbe, 0x00               // [0x1021b0] 0x008a9000 + 0x1021b0 = 0x009ab1b0
.byte 0xa0, 0xb1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1021c0] 0x008a9000 + 0x1021c0 = 0x009ab1c0
RTTIBaseClassDescriptor GCreaturePenInfo 5                                                                         // [0x1021c8] 0x008a9000 + 0x1021c8 = 0x009ab1c8
.byte 0xc8, 0xb1, 0x9a, 0x00, 0x30, 0x8e, 0x9a, 0x00, 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00               // [0x1021e0] 0x008a9000 + 0x1021e0 = 0x009ab1e0
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1021f0] 0x008a9000 + 0x1021f0 = 0x009ab1f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe0, 0xb1, 0x9a, 0x00               // [0x102200] 0x008a9000 + 0x102200 = 0x009ab200
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x01, 0xbe, 0x00               // [0x102210] 0x008a9000 + 0x102210 = 0x009ab210
.byte 0x00, 0xb2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102220] 0x008a9000 + 0x102220 = 0x009ab220
RTTIBaseClassDescriptor CreaturePen 7                                                                              // [0x102228] 0x008a9000 + 0x102228 = 0x009ab228
.byte 0x28, 0xb2, 0x9a, 0x00, 0x00, 0x8f, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x102240] 0x008a9000 + 0x102240 = 0x009ab240
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x102250] 0x008a9000 + 0x102250 = 0x009ab250
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102260] 0x008a9000 + 0x102260 = 0x009ab260
.byte 0x08, 0x00, 0x00, 0x00, 0x40, 0xb2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102270] 0x008a9000 + 0x102270 = 0x009ab270
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xe8, 0x9c, 0x00, 0x68, 0xb2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102280] 0x008a9000 + 0x102280 = 0x009ab280
RTTIBaseClassDescriptor PlannedCreaturePen 5                                                                       // [0x102290] 0x008a9000 + 0x102290 = 0x009ab290
.byte 0x90, 0xb2, 0x9a, 0x00, 0x80, 0x8f, 0x9a, 0x00                                                               // [0x1022a8] 0x008a9000 + 0x1022a8 = 0x009ab2a8
.byte 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1022b0] 0x008a9000 + 0x1022b0 = 0x009ab2b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1022c0] 0x008a9000 + 0x1022c0 = 0x009ab2c0
.byte 0x06, 0x00, 0x00, 0x00, 0xa8, 0xb2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1022d0] 0x008a9000 + 0x1022d0 = 0x009ab2d0
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xe8, 0x9c, 0x00, 0xc8, 0xb2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1022e0] 0x008a9000 + 0x1022e0 = 0x009ab2e0
RTTIBaseClassDescriptor CreaturePhysical 1                                                                         // [0x1022f0] 0x008a9000 + 0x1022f0 = 0x009ab2f0
.byte 0xf0, 0xb2, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x102308] 0x008a9000 + 0x102308 = 0x009ab308
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102310] 0x008a9000 + 0x102310 = 0x009ab310
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0xb3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102320] 0x008a9000 + 0x102320 = 0x009ab320
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x01, 0xbe, 0x00, 0x18, 0xb3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102330] 0x008a9000 + 0x102330 = 0x009ab330
RTTIBaseClassDescriptor CreatureDamageMap 1                                                                        // [0x102340] 0x008a9000 + 0x102340 = 0x009ab340
.byte 0x40, 0xb3, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x102358] 0x008a9000 + 0x102358 = 0x009ab358
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102360] 0x008a9000 + 0x102360 = 0x009ab360
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xb3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102370] 0x008a9000 + 0x102370 = 0x009ab370
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01, 0xbe, 0x00, 0x68, 0xb3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102380] 0x008a9000 + 0x102380 = 0x009ab380
RTTIBaseClassDescriptor CreaturePreviousActions 1                                                                  // [0x102390] 0x008a9000 + 0x102390 = 0x009ab390
.byte 0x90, 0xb3, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1023a8] 0x008a9000 + 0x1023a8 = 0x009ab3a8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1023b0] 0x008a9000 + 0x1023b0 = 0x009ab3b0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0xb3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1023c0] 0x008a9000 + 0x1023c0 = 0x009ab3c0
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x02, 0xbe, 0x00, 0xb8, 0xb3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1023d0] 0x008a9000 + 0x1023d0 = 0x009ab3d0
RTTIBaseClassDescriptor CreatureSelect 1                                                                           // [0x1023e0] 0x008a9000 + 0x1023e0 = 0x009ab3e0
.byte 0xe0, 0xb3, 0x9a, 0x00, 0x40, 0x88, 0x9a, 0x00                                                               // [0x1023f8] 0x008a9000 + 0x1023f8 = 0x009ab3f8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102400] 0x008a9000 + 0x102400 = 0x009ab400
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0xb3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102410] 0x008a9000 + 0x102410 = 0x009ab410
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x0a, 0xbe, 0x00, 0x08, 0xb4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102420] 0x008a9000 + 0x102420 = 0x009ab420
RTTIBaseClassDescriptor SubArgumentObjectIntegerPosFloatAndSpell 1                                                 // [0x102430] 0x008a9000 + 0x102430 = 0x009ab430
.byte 0x30, 0xb4, 0x9a, 0x00, 0x18, 0x97, 0x9a, 0x00                                                               // [0x102448] 0x008a9000 + 0x102448 = 0x009ab448
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102450] 0x008a9000 + 0x102450 = 0x009ab450
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0xb4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102460] 0x008a9000 + 0x102460 = 0x009ab460
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x67, 0xbe, 0x00, 0x58, 0xb4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102470] 0x008a9000 + 0x102470 = 0x009ab470
RTTIBaseClassDescriptor Creche 7                                                                                   // [0x102480] 0x008a9000 + 0x102480 = 0x009ab480
.byte 0x80, 0xb4, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00                                                               // [0x102498] 0x008a9000 + 0x102498 = 0x009ab498
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x1024a0] 0x008a9000 + 0x1024a0 = 0x009ab4a0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1024b0] 0x008a9000 + 0x1024b0 = 0x009ab4b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x98, 0xb4, 0x9a, 0x00               // [0x1024c0] 0x008a9000 + 0x1024c0 = 0x009ab4c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x67, 0xbe, 0x00               // [0x1024d0] 0x008a9000 + 0x1024d0 = 0x009ab4d0
.byte 0xc0, 0xb4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1024e0] 0x008a9000 + 0x1024e0 = 0x009ab4e0
RTTIBaseClassDescriptor Creed 6                                                                                    // [0x1024e8] 0x008a9000 + 0x1024e8 = 0x009ab4e8
.byte 0xe8, 0xb4, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x102500] 0x008a9000 + 0x102500 = 0x009ab500
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102510] 0x008a9000 + 0x102510 = 0x009ab510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0xb5, 0x9a, 0x00               // [0x102520] 0x008a9000 + 0x102520 = 0x009ab520
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x68, 0xbe, 0x00               // [0x102530] 0x008a9000 + 0x102530 = 0x009ab530
.byte 0x20, 0xb5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102540] 0x008a9000 + 0x102540 = 0x009ab540
RTTIBaseClassDescriptor GDanceInfo 2                                                                               // [0x102548] 0x008a9000 + 0x102548 = 0x009ab548
.byte 0x48, 0xb5, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102560] 0x008a9000 + 0x102560 = 0x009ab560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0xb5, 0x9a, 0x00               // [0x102570] 0x008a9000 + 0x102570 = 0x009ab570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x68, 0xbe, 0x00               // [0x102580] 0x008a9000 + 0x102580 = 0x009ab580
.byte 0x70, 0xb5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102590] 0x008a9000 + 0x102590 = 0x009ab590
RTTIBaseClassDescriptor GroupBehaviour 3                                                                           // [0x102598] 0x008a9000 + 0x102598 = 0x009ab598
RTTIBaseClassDescriptor Dance 4                                                                                    // [0x1025b0] 0x008a9000 + 0x1025b0 = 0x009ab5b0
.byte 0xb0, 0xb5, 0x9a, 0x00, 0x98, 0xb5, 0x9a, 0x00                                                               // [0x1025c8] 0x008a9000 + 0x1025c8 = 0x009ab5c8
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1025d0] 0x008a9000 + 0x1025d0 = 0x009ab5d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xc8, 0xb5, 0x9a, 0x00               // [0x1025e0] 0x008a9000 + 0x1025e0 = 0x009ab5e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x67, 0xbe, 0x00               // [0x1025f0] 0x008a9000 + 0x1025f0 = 0x009ab5f0
.byte 0xe0, 0xb5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102600] 0x008a9000 + 0x102600 = 0x009ab600
RTTIBaseClassDescriptor GFootpathLink 2                                                                            // [0x102608] 0x008a9000 + 0x102608 = 0x009ab608
.byte 0x08, 0xb6, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102620] 0x008a9000 + 0x102620 = 0x009ab620
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0xb6, 0x9a, 0x00               // [0x102630] 0x008a9000 + 0x102630 = 0x009ab630
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x68, 0xbe, 0x00               // [0x102640] 0x008a9000 + 0x102640 = 0x009ab640
.byte 0x30, 0xb6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102650] 0x008a9000 + 0x102650 = 0x009ab650
RTTIBaseClassDescriptor DanceEditState 4                                                                           // [0x102658] 0x008a9000 + 0x102658 = 0x009ab658
.byte 0x58, 0xb6, 0x9a, 0x00, 0x98, 0xb5, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x102670] 0x008a9000 + 0x102670 = 0x009ab670
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102680] 0x008a9000 + 0x102680 = 0x009ab680
.byte 0x05, 0x00, 0x00, 0x00, 0x70, 0xb6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102690] 0x008a9000 + 0x102690 = 0x009ab690
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0x82, 0xbe, 0x00, 0x88, 0xb6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1026a0] 0x008a9000 + 0x1026a0 = 0x009ab6a0
RTTIBaseClassDescriptor DanceGroup 2                                                                               // [0x1026b0] 0x008a9000 + 0x1026b0 = 0x009ab6b0
.byte 0xb0, 0xb6, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x1026c8] 0x008a9000 + 0x1026c8 = 0x009ab6c8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1026d0] 0x008a9000 + 0x1026d0 = 0x009ab6d0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0xb6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1026e0] 0x008a9000 + 0x1026e0 = 0x009ab6e0
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x82, 0xbe, 0x00, 0xd8, 0xb6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1026f0] 0x008a9000 + 0x1026f0 = 0x009ab6f0
RTTIBaseClassDescriptor DanceKeyAction 2                                                                           // [0x102700] 0x008a9000 + 0x102700 = 0x009ab700
.byte 0x00, 0xb7, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x102718] 0x008a9000 + 0x102718 = 0x009ab718
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102720] 0x008a9000 + 0x102720 = 0x009ab720
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0xb7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102730] 0x008a9000 + 0x102730 = 0x009ab730
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0x82, 0xbe, 0x00, 0x28, 0xb7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102740] 0x008a9000 + 0x102740 = 0x009ab740
RTTIBaseClassDescriptor DanceKeyFrame 2                                                                            // [0x102750] 0x008a9000 + 0x102750 = 0x009ab750
.byte 0x50, 0xb7, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x102768] 0x008a9000 + 0x102768 = 0x009ab768
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102770] 0x008a9000 + 0x102770 = 0x009ab770
.byte 0x03, 0x00, 0x00, 0x00, 0x68, 0xb7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102780] 0x008a9000 + 0x102780 = 0x009ab780
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x83, 0xbe, 0x00, 0x78, 0xb7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102790] 0x008a9000 + 0x102790 = 0x009ab790
RTTIBaseClassDescriptor GData 1                                                                                    // [0x1027a0] 0x008a9000 + 0x1027a0 = 0x009ab7a0
.byte 0xa0, 0xb7, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1027b8] 0x008a9000 + 0x1027b8 = 0x009ab7b8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1027c0] 0x008a9000 + 0x1027c0 = 0x009ab7c0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0xb7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1027d0] 0x008a9000 + 0x1027d0 = 0x009ab7d0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0x89, 0xbe, 0x00, 0xc8, 0xb7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1027e0] 0x008a9000 + 0x1027e0 = 0x009ab7e0
RTTIBaseClassDescriptor DeadTree 8                                                                                 // [0x1027f0] 0x008a9000 + 0x1027f0 = 0x009ab7f0
.byte 0xf0, 0xb7, 0x9a, 0x00, 0x10, 0x85, 0x9a, 0x00                                                               // [0x102808] 0x008a9000 + 0x102808 = 0x009ab808
.byte 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x102810] 0x008a9000 + 0x102810 = 0x009ab810
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102820] 0x008a9000 + 0x102820 = 0x009ab820
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0xb8, 0x9a, 0x00               // [0x102830] 0x008a9000 + 0x102830 = 0x009ab830
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x8a, 0xbe, 0x00               // [0x102840] 0x008a9000 + 0x102840 = 0x009ab840
.byte 0x30, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102850] 0x008a9000 + 0x102850 = 0x009ab850
RTTIBaseClassDescriptor FelledTree 9                                                                               // [0x102858] 0x008a9000 + 0x102858 = 0x009ab858
.byte 0x58, 0xb8, 0x9a, 0x00, 0xf0, 0xb7, 0x9a, 0x00, 0x10, 0x85, 0x9a, 0x00, 0xf8, 0x84, 0x9a, 0x00               // [0x102870] 0x008a9000 + 0x102870 = 0x009ab870
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x102880] 0x008a9000 + 0x102880 = 0x009ab880
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102890] 0x008a9000 + 0x102890 = 0x009ab890
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x70, 0xb8, 0x9a, 0x00               // [0x1028a0] 0x008a9000 + 0x1028a0 = 0x009ab8a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x8a, 0xbe, 0x00               // [0x1028b0] 0x008a9000 + 0x1028b0 = 0x009ab8b0
.byte 0xa0, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1028c0] 0x008a9000 + 0x1028c0 = 0x009ab8c0
RTTIBaseClassDescriptor DialogBoxBase 0                                                                            // [0x1028c8] 0x008a9000 + 0x1028c8 = 0x009ab8c8
RTTIBaseClassDescriptor DialogBoxKeyBinding 1                                                                      // [0x1028e0] 0x008a9000 + 0x1028e0 = 0x009ab8e0
.byte 0xe0, 0xb8, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x1028f8] 0x008a9000 + 0x1028f8 = 0x009ab8f8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102900] 0x008a9000 + 0x102900 = 0x009ab900
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102910] 0x008a9000 + 0x102910 = 0x009ab910
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0xbe, 0x00, 0x08, 0xb9, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00               // [0x102920] 0x008a9000 + 0x102920 = 0x009ab920
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102930] 0x008a9000 + 0x102930 = 0x009ab930
.byte 0x01, 0x00, 0x00, 0x00, 0x2c, 0xb9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102940] 0x008a9000 + 0x102940 = 0x009ab940
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x8b, 0xbe, 0x00, 0x38, 0xb9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102950] 0x008a9000 + 0x102950 = 0x009ab950
RTTIBaseClassDescriptorStruct SetupBox 0                                                                           // [0x102960] 0x008a9000 + 0x102960 = 0x009ab960
.byte 0x60, 0xb9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102978] 0x008a9000 + 0x102978 = 0x009ab978
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x78, 0xb9, 0x9a, 0x00               // [0x102980] 0x008a9000 + 0x102980 = 0x009ab980
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x8c, 0xbe, 0x00               // [0x102990] 0x008a9000 + 0x102990 = 0x009ab990
.byte 0x80, 0xb9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1029a0] 0x008a9000 + 0x1029a0 = 0x009ab9a0
RTTIBaseClassDescriptor DialogBoxOptions 1                                                                         // [0x1029a8] 0x008a9000 + 0x1029a8 = 0x009ab9a8
.byte 0xa8, 0xb9, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1029c0] 0x008a9000 + 0x1029c0 = 0x009ab9c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc0, 0xb9, 0x9a, 0x00               // [0x1029d0] 0x008a9000 + 0x1029d0 = 0x009ab9d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x8d, 0xbe, 0x00               // [0x1029e0] 0x008a9000 + 0x1029e0 = 0x009ab9e0
.byte 0xd0, 0xb9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1029f0] 0x008a9000 + 0x1029f0 = 0x009ab9f0
RTTIBaseClassDescriptor DialogBoxImmersion 1                                                                       // [0x1029f8] 0x008a9000 + 0x1029f8 = 0x009ab9f8
.byte 0xf8, 0xb9, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102a10] 0x008a9000 + 0x102a10 = 0x009aba10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0xba, 0x9a, 0x00               // [0x102a20] 0x008a9000 + 0x102a20 = 0x009aba20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x8d, 0xbe, 0x00               // [0x102a30] 0x008a9000 + 0x102a30 = 0x009aba30
.byte 0x20, 0xba, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102a40] 0x008a9000 + 0x102a40 = 0x009aba40
RTTIBaseClassDescriptor MiniDialogBoxOptions 1                                                                     // [0x102a48] 0x008a9000 + 0x102a48 = 0x009aba48
.byte 0x48, 0xba, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102a60] 0x008a9000 + 0x102a60 = 0x009aba60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0xba, 0x9a, 0x00               // [0x102a70] 0x008a9000 + 0x102a70 = 0x009aba70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x8d, 0xbe, 0x00               // [0x102a80] 0x008a9000 + 0x102a80 = 0x009aba80
.byte 0x70, 0xba, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102a90] 0x008a9000 + 0x102a90 = 0x009aba90
RTTIBaseClassDescriptor DialogBoxSaveMessage 1                                                                     // [0x102a98] 0x008a9000 + 0x102a98 = 0x009aba98
.byte 0x98, 0xba, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102ab0] 0x008a9000 + 0x102ab0 = 0x009abab0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb0, 0xba, 0x9a, 0x00               // [0x102ac0] 0x008a9000 + 0x102ac0 = 0x009abac0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x8d, 0xbe, 0x00               // [0x102ad0] 0x008a9000 + 0x102ad0 = 0x009abad0
.byte 0xc0, 0xba, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102ae0] 0x008a9000 + 0x102ae0 = 0x009abae0
RTTIBaseClassDescriptor AnimEdit 1                                                                                 // [0x102ae8] 0x008a9000 + 0x102ae8 = 0x009abae8
.byte 0xe8, 0xba, 0x9a, 0x00, 0x40, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102b00] 0x008a9000 + 0x102b00 = 0x009abb00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xbb, 0x9a, 0x00               // [0x102b10] 0x008a9000 + 0x102b10 = 0x009abb10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x8f, 0xbe, 0x00               // [0x102b20] 0x008a9000 + 0x102b20 = 0x009abb20
.byte 0x10, 0xbb, 0x9a, 0x00, 0x40, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102b30] 0x008a9000 + 0x102b30 = 0x009abb30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x34, 0xbb, 0x9a, 0x00               // [0x102b40] 0x008a9000 + 0x102b40 = 0x009abb40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xdc, 0x9c, 0x00               // [0x102b50] 0x008a9000 + 0x102b50 = 0x009abb50
.byte 0x40, 0xbb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102b60] 0x008a9000 + 0x102b60 = 0x009abb60
RTTIBaseClassDescriptor EditorHug 1                                                                                // [0x102b68] 0x008a9000 + 0x102b68 = 0x009abb68
.byte 0x68, 0xbb, 0x9a, 0x00, 0x40, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102b80] 0x008a9000 + 0x102b80 = 0x009abb80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0xbb, 0x9a, 0x00               // [0x102b90] 0x008a9000 + 0x102b90 = 0x009abb90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x91, 0xbe, 0x00               // [0x102ba0] 0x008a9000 + 0x102ba0 = 0x009abba0
.byte 0x90, 0xbb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x6a, 0x9a, 0x00, 0x18, 0x6a, 0x9a, 0x00               // [0x102bb0] 0x008a9000 + 0x102bb0 = 0x009abbb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102bc0] 0x008a9000 + 0x102bc0 = 0x009abbc0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0xbb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102bd0] 0x008a9000 + 0x102bd0 = 0x009abbd0
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x83, 0x9c, 0x00, 0xc8, 0xbb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102be0] 0x008a9000 + 0x102be0 = 0x009abbe0
RTTIBaseClassDescriptor EditorIconBool 2                                                                           // [0x102bf0] 0x008a9000 + 0x102bf0 = 0x009abbf0
.byte 0xf0, 0xbb, 0x9a, 0x00, 0x30, 0x6a, 0x9a, 0x00                                                               // [0x102c08] 0x008a9000 + 0x102c08 = 0x009abc08
.byte 0x18, 0x6a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102c10] 0x008a9000 + 0x102c10 = 0x009abc10
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0xbc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102c20] 0x008a9000 + 0x102c20 = 0x009abc20
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x91, 0xbe, 0x00, 0x18, 0xbc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102c30] 0x008a9000 + 0x102c30 = 0x009abc30
RTTIBaseClassDescriptor EditorIconTextBox 1                                                                        // [0x102c40] 0x008a9000 + 0x102c40 = 0x009abc40
.byte 0x40, 0xbc, 0x9a, 0x00, 0x18, 0x6a, 0x9a, 0x00                                                               // [0x102c58] 0x008a9000 + 0x102c58 = 0x009abc58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102c60] 0x008a9000 + 0x102c60 = 0x009abc60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xbc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102c70] 0x008a9000 + 0x102c70 = 0x009abc70
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0x91, 0xbe, 0x00, 0x68, 0xbc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102c80] 0x008a9000 + 0x102c80 = 0x009abc80
RTTIBaseClassDescriptor EditorIconRequester 1                                                                      // [0x102c90] 0x008a9000 + 0x102c90 = 0x009abc90
.byte 0x90, 0xbc, 0x9a, 0x00, 0x18, 0x6a, 0x9a, 0x00                                                               // [0x102ca8] 0x008a9000 + 0x102ca8 = 0x009abca8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102cb0] 0x008a9000 + 0x102cb0 = 0x009abcb0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0xbc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102cc0] 0x008a9000 + 0x102cc0 = 0x009abcc0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0x91, 0xbe, 0x00, 0xb8, 0xbc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102cd0] 0x008a9000 + 0x102cd0 = 0x009abcd0
RTTIBaseClassDescriptor EditorIconEditBox 2                                                                        // [0x102ce0] 0x008a9000 + 0x102ce0 = 0x009abce0
.byte 0xe0, 0xbc, 0x9a, 0x00, 0x30, 0x6a, 0x9a, 0x00                                                               // [0x102cf8] 0x008a9000 + 0x102cf8 = 0x009abcf8
.byte 0x18, 0x6a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102d00] 0x008a9000 + 0x102d00 = 0x009abd00
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xbc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102d10] 0x008a9000 + 0x102d10 = 0x009abd10
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0x92, 0xbe, 0x00, 0x08, 0xbd, 0x9a, 0x00, 0x18, 0x6a, 0x9a, 0x00               // [0x102d20] 0x008a9000 + 0x102d20 = 0x009abd20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102d30] 0x008a9000 + 0x102d30 = 0x009abd30
.byte 0x01, 0x00, 0x00, 0x00, 0x2c, 0xbd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102d40] 0x008a9000 + 0x102d40 = 0x009abd40
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x83, 0x9c, 0x00, 0x38, 0xbd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102d50] 0x008a9000 + 0x102d50 = 0x009abd50
RTTIBaseClassDescriptor EditorIconGraph 2                                                                          // [0x102d60] 0x008a9000 + 0x102d60 = 0x009abd60
.byte 0x60, 0xbd, 0x9a, 0x00, 0x30, 0x6a, 0x9a, 0x00                                                               // [0x102d78] 0x008a9000 + 0x102d78 = 0x009abd78
.byte 0x18, 0x6a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102d80] 0x008a9000 + 0x102d80 = 0x009abd80
.byte 0x03, 0x00, 0x00, 0x00, 0x78, 0xbd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102d90] 0x008a9000 + 0x102d90 = 0x009abd90
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x92, 0xbe, 0x00, 0x88, 0xbd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102da0] 0x008a9000 + 0x102da0 = 0x009abda0
RTTIBaseClassDescriptor EditorIconPDM 3                                                                            // [0x102db0] 0x008a9000 + 0x102db0 = 0x009abdb0
.byte 0xb0, 0xbd, 0x9a, 0x00, 0xf0, 0xbb, 0x9a, 0x00                                                               // [0x102dc8] 0x008a9000 + 0x102dc8 = 0x009abdc8
.byte 0x30, 0x6a, 0x9a, 0x00, 0x18, 0x6a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102dd0] 0x008a9000 + 0x102dd0 = 0x009abdd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc8, 0xbd, 0x9a, 0x00               // [0x102de0] 0x008a9000 + 0x102de0 = 0x009abde0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x92, 0xbe, 0x00               // [0x102df0] 0x008a9000 + 0x102df0 = 0x009abdf0
.byte 0xe0, 0xbd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102e00] 0x008a9000 + 0x102e00 = 0x009abe00
RTTIBaseClassDescriptor ?$EditorIconNumber@KK 2                                                                    // [0x102e08] 0x008a9000 + 0x102e08 = 0x009abe08
RTTIBaseClassDescriptor ?$EditorIconSlider@K 3                                                                     // [0x102e20] 0x008a9000 + 0x102e20 = 0x009abe20
.byte 0x20, 0xbe, 0x9a, 0x00, 0x08, 0xbe, 0x9a, 0x00                                                               // [0x102e38] 0x008a9000 + 0x102e38 = 0x009abe38
.byte 0x30, 0x6a, 0x9a, 0x00, 0x18, 0x6a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102e40] 0x008a9000 + 0x102e40 = 0x009abe40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0xbe, 0x9a, 0x00               // [0x102e50] 0x008a9000 + 0x102e50 = 0x009abe50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x93, 0xbe, 0x00               // [0x102e60] 0x008a9000 + 0x102e60 = 0x009abe60
.byte 0x50, 0xbe, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102e70] 0x008a9000 + 0x102e70 = 0x009abe70
RTTIBaseClassDescriptor PDMStrip 1                                                                                 // [0x102e78] 0x008a9000 + 0x102e78 = 0x009abe78
.byte 0x78, 0xbe, 0x9a, 0x00, 0x18, 0x6a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102e90] 0x008a9000 + 0x102e90 = 0x009abe90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0xbe, 0x9a, 0x00               // [0x102ea0] 0x008a9000 + 0x102ea0 = 0x009abea0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x93, 0xbe, 0x00               // [0x102eb0] 0x008a9000 + 0x102eb0 = 0x009abeb0
.byte 0xa0, 0xbe, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102ec0] 0x008a9000 + 0x102ec0 = 0x009abec0
RTTIBaseClassDescriptor GEffectInfo 2                                                                              // [0x102ec8] 0x008a9000 + 0x102ec8 = 0x009abec8
.byte 0xc8, 0xbe, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102ee0] 0x008a9000 + 0x102ee0 = 0x009abee0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe0, 0xbe, 0x9a, 0x00               // [0x102ef0] 0x008a9000 + 0x102ef0 = 0x009abef0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x96, 0xbe, 0x00               // [0x102f00] 0x008a9000 + 0x102f00 = 0x009abf00
.byte 0xf0, 0xbe, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x102f10] 0x008a9000 + 0x102f10 = 0x009abf10
RTTIBaseClassDescriptor GMagicEffectInfo 3                                                                         // [0x102f18] 0x008a9000 + 0x102f18 = 0x009abf18
.byte 0x18, 0xbf, 0x9a, 0x00, 0xc8, 0xbe, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x102f30] 0x008a9000 + 0x102f30 = 0x009abf30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102f40] 0x008a9000 + 0x102f40 = 0x009abf40
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0xbf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102f50] 0x008a9000 + 0x102f50 = 0x009abf50
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0x96, 0xbe, 0x00, 0x48, 0xbf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102f60] 0x008a9000 + 0x102f60 = 0x009abf60
RTTIBaseClassDescriptor EffectValues 1                                                                             // [0x102f70] 0x008a9000 + 0x102f70 = 0x009abf70
.byte 0x70, 0xbf, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x102f88] 0x008a9000 + 0x102f88 = 0x009abf88
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102f90] 0x008a9000 + 0x102f90 = 0x009abf90
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0xbf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102fa0] 0x008a9000 + 0x102fa0 = 0x009abfa0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x96, 0xbe, 0x00, 0x98, 0xbf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102fb0] 0x008a9000 + 0x102fb0 = 0x009abfb0
RTTIBaseClassDescriptor CreatureFalling 3                                                                          // [0x102fc0] 0x008a9000 + 0x102fc0 = 0x009abfc0
.byte 0xc0, 0xbf, 0x9a, 0x00, 0x10, 0x99, 0x9a, 0x00                                                               // [0x102fd8] 0x008a9000 + 0x102fd8 = 0x009abfd8
.byte 0x88, 0x92, 0x9a, 0x00, 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x102fe0] 0x008a9000 + 0x102fe0 = 0x009abfe0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0xbf, 0x9a, 0x00               // [0x102ff0] 0x008a9000 + 0x102ff0 = 0x009abff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x9c, 0xbe, 0x00               // [0x103000] 0x008a9000 + 0x103000 = 0x009ac000
.byte 0xf0, 0xbf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x78, 0x9a, 0x00, 0x50, 0x63, 0x9a, 0x00               // [0x103010] 0x008a9000 + 0x103010 = 0x009ac010
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103020] 0x008a9000 + 0x103020 = 0x009ac020
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0xc0, 0x9a, 0x00               // [0x103030] 0x008a9000 + 0x103030 = 0x009ac030
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x95, 0x9c, 0x00               // [0x103040] 0x008a9000 + 0x103040 = 0x009ac040
.byte 0x30, 0xc0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x103050] 0x008a9000 + 0x103050 = 0x009ac050
RTTIBaseClassDescriptor PlannedFeature 4                                                                           // [0x103058] 0x008a9000 + 0x103058 = 0x009ac058
.byte 0x58, 0xc0, 0x9a, 0x00, 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x103070] 0x008a9000 + 0x103070 = 0x009ac070
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103080] 0x008a9000 + 0x103080 = 0x009ac080
.byte 0x05, 0x00, 0x00, 0x00, 0x70, 0xc0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103090] 0x008a9000 + 0x103090 = 0x009ac090
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x9c, 0xbe, 0x00, 0x88, 0xc0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1030a0] 0x008a9000 + 0x1030a0 = 0x009ac0a0
RTTIBaseClassDescriptor GFlowersInfo 5                                                                             // [0x1030b0] 0x008a9000 + 0x1030b0 = 0x009ac0b0
.byte 0xb0, 0xc0, 0x9a, 0x00, 0xb8, 0x78, 0x9a, 0x00                                                               // [0x1030c8] 0x008a9000 + 0x1030c8 = 0x009ac0c8
.byte 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1030d0] 0x008a9000 + 0x1030d0 = 0x009ac0d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1030e0] 0x008a9000 + 0x1030e0 = 0x009ac0e0
.byte 0x06, 0x00, 0x00, 0x00, 0xc8, 0xc0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1030f0] 0x008a9000 + 0x1030f0 = 0x009ac0f0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x9c, 0xbe, 0x00, 0xe8, 0xc0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103100] 0x008a9000 + 0x103100 = 0x009ac100
RTTIBaseClassDescriptor Flowers 7                                                                                  // [0x103110] 0x008a9000 + 0x103110 = 0x009ac110
.byte 0x10, 0xc1, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00                                                               // [0x103128] 0x008a9000 + 0x103128 = 0x009ac128
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x103130] 0x008a9000 + 0x103130 = 0x009ac130
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103140] 0x008a9000 + 0x103140 = 0x009ac140
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x28, 0xc1, 0x9a, 0x00               // [0x103150] 0x008a9000 + 0x103150 = 0x009ac150
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9d, 0xbe, 0x00               // [0x103160] 0x008a9000 + 0x103160 = 0x009ac160
.byte 0x50, 0xc1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x103170] 0x008a9000 + 0x103170 = 0x009ac170
RTTIBaseClassDescriptor GFieldInfo 4                                                                               // [0x103178] 0x008a9000 + 0x103178 = 0x009ac178
.byte 0x78, 0xc1, 0x9a, 0x00, 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x103190] 0x008a9000 + 0x103190 = 0x009ac190
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1031a0] 0x008a9000 + 0x1031a0 = 0x009ac1a0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0xc1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1031b0] 0x008a9000 + 0x1031b0 = 0x009ac1b0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x9d, 0xbe, 0x00, 0xa8, 0xc1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1031c0] 0x008a9000 + 0x1031c0 = 0x009ac1c0
RTTIBaseClassDescriptor GFieldTypeInfo 4                                                                           // [0x1031d0] 0x008a9000 + 0x1031d0 = 0x009ac1d0
.byte 0xd0, 0xc1, 0x9a, 0x00, 0x50, 0x63, 0x9a, 0x00                                                               // [0x1031e8] 0x008a9000 + 0x1031e8 = 0x009ac1e8
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1031f0] 0x008a9000 + 0x1031f0 = 0x009ac1f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe8, 0xc1, 0x9a, 0x00               // [0x103200] 0x008a9000 + 0x103200 = 0x009ac200
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x9d, 0xbe, 0x00               // [0x103210] 0x008a9000 + 0x103210 = 0x009ac210
.byte 0x00, 0xc2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x103220] 0x008a9000 + 0x103220 = 0x009ac220
RTTIBaseClassDescriptor Field 7                                                                                    // [0x103228] 0x008a9000 + 0x103228 = 0x009ac228
.byte 0x28, 0xc2, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x103240] 0x008a9000 + 0x103240 = 0x009ac240
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x103250] 0x008a9000 + 0x103250 = 0x009ac250
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103260] 0x008a9000 + 0x103260 = 0x009ac260
.byte 0x08, 0x00, 0x00, 0x00, 0x40, 0xc2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103270] 0x008a9000 + 0x103270 = 0x009ac270
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x9d, 0xbe, 0x00, 0x68, 0xc2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103280] 0x008a9000 + 0x103280 = 0x009ac280
RTTIBaseClassDescriptor FireFly 4                                                                                  // [0x103290] 0x008a9000 + 0x103290 = 0x009ac290
.byte 0x90, 0xc2, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00                                                               // [0x1032a8] 0x008a9000 + 0x1032a8 = 0x009ac2a8
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1032b0] 0x008a9000 + 0x1032b0 = 0x009ac2b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0xc2, 0x9a, 0x00               // [0x1032c0] 0x008a9000 + 0x1032c0 = 0x009ac2c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x9d, 0xbe, 0x00               // [0x1032d0] 0x008a9000 + 0x1032d0 = 0x009ac2d0
.byte 0xc0, 0xc2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1032e0] 0x008a9000 + 0x1032e0 = 0x009ac2e0
RTTIBaseClassDescriptor GFishFarmInfo 4                                                                            // [0x1032e8] 0x008a9000 + 0x1032e8 = 0x009ac2e8
.byte 0xe8, 0xc2, 0x9a, 0x00, 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x103300] 0x008a9000 + 0x103300 = 0x009ac300
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103310] 0x008a9000 + 0x103310 = 0x009ac310
.byte 0x05, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103320] 0x008a9000 + 0x103320 = 0x009ac320
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x9e, 0xbe, 0x00, 0x18, 0xc3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103330] 0x008a9000 + 0x103330 = 0x009ac330
RTTIBaseClassDescriptor FishFarm 6                                                                                 // [0x103340] 0x008a9000 + 0x103340 = 0x009ac340
.byte 0x40, 0xc3, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00                                                               // [0x103358] 0x008a9000 + 0x103358 = 0x009ac358
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x103360] 0x008a9000 + 0x103360 = 0x009ac360
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103370] 0x008a9000 + 0x103370 = 0x009ac370
.byte 0x07, 0x00, 0x00, 0x00, 0x58, 0xc3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103380] 0x008a9000 + 0x103380 = 0x009ac380
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x97, 0x9d, 0x00, 0x78, 0xc3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103390] 0x008a9000 + 0x103390 = 0x009ac390
RTTIBaseClassDescriptor GSingleMapFixedInfo 3                                                                      // [0x1033a0] 0x008a9000 + 0x1033a0 = 0x009ac3a0
.byte 0xa0, 0xc3, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00                                                               // [0x1033b8] 0x008a9000 + 0x1033b8 = 0x009ac3b8
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1033c0] 0x008a9000 + 0x1033c0 = 0x009ac3c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb8, 0xc3, 0x9a, 0x00               // [0x1033d0] 0x008a9000 + 0x1033d0 = 0x009ac3d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x9e, 0xbe, 0x00               // [0x1033e0] 0x008a9000 + 0x1033e0 = 0x009ac3e0
.byte 0xd0, 0xc3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x1033f0] 0x008a9000 + 0x1033f0 = 0x009ac3f0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103400] 0x008a9000 + 0x103400 = 0x009ac400
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0xc3, 0x9a, 0x00               // [0x103410] 0x008a9000 + 0x103410 = 0x009ac410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x7f, 0x9c, 0x00               // [0x103420] 0x008a9000 + 0x103420 = 0x009ac420
.byte 0x10, 0xc4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x103430] 0x008a9000 + 0x103430 = 0x009ac430
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x103440] 0x008a9000 + 0x103440 = 0x009ac440
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103450] 0x008a9000 + 0x103450 = 0x009ac450
.byte 0x06, 0x00, 0x00, 0x00, 0x38, 0xc4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103460] 0x008a9000 + 0x103460 = 0x009ac460
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x9c, 0x00, 0x58, 0xc4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103470] 0x008a9000 + 0x103470 = 0x009ac470
RTTIBaseClassDescriptor SingleMapFixed 5                                                                           // [0x103480] 0x008a9000 + 0x103480 = 0x009ac480
.byte 0x80, 0xc4, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00                                                               // [0x103498] 0x008a9000 + 0x103498 = 0x009ac498
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1034a0] 0x008a9000 + 0x1034a0 = 0x009ac4a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1034b0] 0x008a9000 + 0x1034b0 = 0x009ac4b0
.byte 0x06, 0x00, 0x00, 0x00, 0x98, 0xc4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1034c0] 0x008a9000 + 0x1034c0 = 0x009ac4c0
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x9e, 0xbe, 0x00, 0xb8, 0xc4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1034d0] 0x008a9000 + 0x1034d0 = 0x009ac4d0
RTTIBaseClassDescriptor Flock 4                                                                                    // [0x1034e0] 0x008a9000 + 0x1034e0 = 0x009ac4e0
.byte 0xe0, 0xc4, 0x9a, 0x00, 0xc0, 0x8d, 0x9a, 0x00                                                               // [0x1034f8] 0x008a9000 + 0x1034f8 = 0x009ac4f8
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103500] 0x008a9000 + 0x103500 = 0x009ac500
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0xc4, 0x9a, 0x00               // [0x103510] 0x008a9000 + 0x103510 = 0x009ac510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x9e, 0xbe, 0x00               // [0x103520] 0x008a9000 + 0x103520 = 0x009ac520
.byte 0x10, 0xc5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x103530] 0x008a9000 + 0x103530 = 0x009ac530
RTTIBaseClassDescriptor GFootballPositionInfo 2                                                                    // [0x103538] 0x008a9000 + 0x103538 = 0x009ac538
.byte 0x38, 0xc5, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103550] 0x008a9000 + 0x103550 = 0x009ac550
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0xc5, 0x9a, 0x00               // [0x103560] 0x008a9000 + 0x103560 = 0x009ac560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x9f, 0xbe, 0x00               // [0x103570] 0x008a9000 + 0x103570 = 0x009ac570
.byte 0x60, 0xc5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x103580] 0x008a9000 + 0x103580 = 0x009ac580
RTTIBaseClassDescriptor Football 7                                                                                 // [0x103588] 0x008a9000 + 0x103588 = 0x009ac588
.byte 0x88, 0xc5, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x1035a0] 0x008a9000 + 0x1035a0 = 0x009ac5a0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1035b0] 0x008a9000 + 0x1035b0 = 0x009ac5b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1035c0] 0x008a9000 + 0x1035c0 = 0x009ac5c0
.byte 0x08, 0x00, 0x00, 0x00, 0xa0, 0xc5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1035d0] 0x008a9000 + 0x1035d0 = 0x009ac5d0
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x9f, 0xbe, 0x00, 0xc8, 0xc5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1035e0] 0x008a9000 + 0x1035e0 = 0x009ac5e0
RTTIBaseClassDescriptor GFootpathNode 2                                                                            // [0x1035f0] 0x008a9000 + 0x1035f0 = 0x009ac5f0
.byte 0xf0, 0xc5, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x103608] 0x008a9000 + 0x103608 = 0x009ac608
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103610] 0x008a9000 + 0x103610 = 0x009ac610
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0xc6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103620] 0x008a9000 + 0x103620 = 0x009ac620
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0xa1, 0xbe, 0x00, 0x18, 0xc6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103630] 0x008a9000 + 0x103630 = 0x009ac630
RTTIBaseClassDescriptor GFootpath 2                                                                                // [0x103640] 0x008a9000 + 0x103640 = 0x009ac640
.byte 0x40, 0xc6, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x103658] 0x008a9000 + 0x103658 = 0x009ac658
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103660] 0x008a9000 + 0x103660 = 0x009ac660
.byte 0x03, 0x00, 0x00, 0x00, 0x58, 0xc6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103670] 0x008a9000 + 0x103670 = 0x009ac670
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xa1, 0xbe, 0x00, 0x68, 0xc6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103680] 0x008a9000 + 0x103680 = 0x009ac680
RTTIBaseClassDescriptor GFootpathLinkSave 2                                                                        // [0x103690] 0x008a9000 + 0x103690 = 0x009ac690
.byte 0x90, 0xc6, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x1036a8] 0x008a9000 + 0x1036a8 = 0x009ac6a8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1036b0] 0x008a9000 + 0x1036b0 = 0x009ac6b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0xc6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1036c0] 0x008a9000 + 0x1036c0 = 0x009ac6c0
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xa1, 0xbe, 0x00, 0xb8, 0xc6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1036d0] 0x008a9000 + 0x1036d0 = 0x009ac6d0
RTTIBaseClassDescriptor GFootpathFinder 2                                                                          // [0x1036e0] 0x008a9000 + 0x1036e0 = 0x009ac6e0
.byte 0xe0, 0xc6, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x1036f8] 0x008a9000 + 0x1036f8 = 0x009ac6f8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103700] 0x008a9000 + 0x103700 = 0x009ac700
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xc6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103710] 0x008a9000 + 0x103710 = 0x009ac710
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xa2, 0xbe, 0x00, 0x08, 0xc7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103720] 0x008a9000 + 0x103720 = 0x009ac720
RTTIBaseClassDescriptor GForestInfo 3                                                                              // [0x103730] 0x008a9000 + 0x103730 = 0x009ac730
.byte 0x30, 0xc7, 0x9a, 0x00, 0x50, 0x8d, 0x9a, 0x00                                                               // [0x103748] 0x008a9000 + 0x103748 = 0x009ac748
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103750] 0x008a9000 + 0x103750 = 0x009ac750
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0xc7, 0x9a, 0x00               // [0x103760] 0x008a9000 + 0x103760 = 0x009ac760
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xa2, 0xbe, 0x00               // [0x103770] 0x008a9000 + 0x103770 = 0x009ac770
.byte 0x60, 0xc7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x103780] 0x008a9000 + 0x103780 = 0x009ac780
RTTIBaseClassDescriptor Forest 4                                                                                   // [0x103788] 0x008a9000 + 0x103788 = 0x009ac788
.byte 0x88, 0xc7, 0x9a, 0x00, 0xc0, 0x8d, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1037a0] 0x008a9000 + 0x1037a0 = 0x009ac7a0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1037b0] 0x008a9000 + 0x1037b0 = 0x009ac7b0
.byte 0x05, 0x00, 0x00, 0x00, 0xa0, 0xc7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1037c0] 0x008a9000 + 0x1037c0 = 0x009ac7c0
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xea, 0xbd, 0x00, 0xb8, 0xc7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1037d0] 0x008a9000 + 0x1037d0 = 0x009ac7d0
RTTIBaseClassDescriptor LoadingBox 1                                                                               // [0x1037e0] 0x008a9000 + 0x1037e0 = 0x009ac7e0
.byte 0xe0, 0xc7, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x1037f8] 0x008a9000 + 0x1037f8 = 0x009ac7f8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103800] 0x008a9000 + 0x103800 = 0x009ac800
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0xc7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103810] 0x008a9000 + 0x103810 = 0x009ac810
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xa2, 0xbe, 0x00, 0x08, 0xc8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103820] 0x008a9000 + 0x103820 = 0x009ac820
RTTIBaseClassDescriptor CDBox 1                                                                                    // [0x103830] 0x008a9000 + 0x103830 = 0x009ac830
.byte 0x30, 0xc8, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103848] 0x008a9000 + 0x103848 = 0x009ac848
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103850] 0x008a9000 + 0x103850 = 0x009ac850
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0xc8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103860] 0x008a9000 + 0x103860 = 0x009ac860
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0xa2, 0xbe, 0x00, 0x58, 0xc8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103870] 0x008a9000 + 0x103870 = 0x009ac870
RTTIBaseClassDescriptor NewProfileBox 1                                                                            // [0x103880] 0x008a9000 + 0x103880 = 0x009ac880
.byte 0x80, 0xc8, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103898] 0x008a9000 + 0x103898 = 0x009ac898
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1038a0] 0x008a9000 + 0x1038a0 = 0x009ac8a0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0xc8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1038b0] 0x008a9000 + 0x1038b0 = 0x009ac8b0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xa3, 0xbe, 0x00, 0xa8, 0xc8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1038c0] 0x008a9000 + 0x1038c0 = 0x009ac8c0
RTTIBaseClassDescriptor MainMenu 1                                                                                 // [0x1038d0] 0x008a9000 + 0x1038d0 = 0x009ac8d0
.byte 0xd0, 0xc8, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x1038e8] 0x008a9000 + 0x1038e8 = 0x009ac8e8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1038f0] 0x008a9000 + 0x1038f0 = 0x009ac8f0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0xc8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103900] 0x008a9000 + 0x103900 = 0x009ac900
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xa3, 0xbe, 0x00, 0xf8, 0xc8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103910] 0x008a9000 + 0x103910 = 0x009ac910
RTTIBaseClassDescriptor MultiplayerConditionBox 1                                                                  // [0x103920] 0x008a9000 + 0x103920 = 0x009ac920
.byte 0x20, 0xc9, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103938] 0x008a9000 + 0x103938 = 0x009ac938
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103940] 0x008a9000 + 0x103940 = 0x009ac940
.byte 0x02, 0x00, 0x00, 0x00, 0x38, 0xc9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103950] 0x008a9000 + 0x103950 = 0x009ac950
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xa3, 0xbe, 0x00, 0x48, 0xc9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103960] 0x008a9000 + 0x103960 = 0x009ac960
RTTIBaseClassDescriptor EndGameBox 1                                                                               // [0x103970] 0x008a9000 + 0x103970 = 0x009ac970
.byte 0x70, 0xc9, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103988] 0x008a9000 + 0x103988 = 0x009ac988
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103990] 0x008a9000 + 0x103990 = 0x009ac990
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0xc9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1039a0] 0x008a9000 + 0x1039a0 = 0x009ac9a0
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xa3, 0xbe, 0x00, 0x98, 0xc9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1039b0] 0x008a9000 + 0x1039b0 = 0x009ac9b0
RTTIBaseClassDescriptor StatsBox 1                                                                                 // [0x1039c0] 0x008a9000 + 0x1039c0 = 0x009ac9c0
.byte 0xc0, 0xc9, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x1039d8] 0x008a9000 + 0x1039d8 = 0x009ac9d8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1039e0] 0x008a9000 + 0x1039e0 = 0x009ac9e0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0xc9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1039f0] 0x008a9000 + 0x1039f0 = 0x009ac9f0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xa3, 0xbe, 0x00, 0xe8, 0xc9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103a00] 0x008a9000 + 0x103a00 = 0x009aca00
RTTIBaseClassDescriptor HistoryBox 1                                                                               // [0x103a10] 0x008a9000 + 0x103a10 = 0x009aca10
.byte 0x10, 0xca, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103a28] 0x008a9000 + 0x103a28 = 0x009aca28
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103a30] 0x008a9000 + 0x103a30 = 0x009aca30
.byte 0x02, 0x00, 0x00, 0x00, 0x28, 0xca, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103a40] 0x008a9000 + 0x103a40 = 0x009aca40
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xa3, 0xbe, 0x00, 0x38, 0xca, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103a50] 0x008a9000 + 0x103a50 = 0x009aca50
RTTIBaseClassDescriptor ChannelBox 1                                                                               // [0x103a60] 0x008a9000 + 0x103a60 = 0x009aca60
.byte 0x60, 0xca, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103a78] 0x008a9000 + 0x103a78 = 0x009aca78
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103a80] 0x008a9000 + 0x103a80 = 0x009aca80
.byte 0x02, 0x00, 0x00, 0x00, 0x78, 0xca, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103a90] 0x008a9000 + 0x103a90 = 0x009aca90
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xa3, 0xbe, 0x00, 0x88, 0xca, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103aa0] 0x008a9000 + 0x103aa0 = 0x009acaa0
RTTIBaseClassDescriptor SkirmishGameBox 1                                                                          // [0x103ab0] 0x008a9000 + 0x103ab0 = 0x009acab0
.byte 0xb0, 0xca, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103ac8] 0x008a9000 + 0x103ac8 = 0x009acac8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103ad0] 0x008a9000 + 0x103ad0 = 0x009acad0
.byte 0x02, 0x00, 0x00, 0x00, 0xc8, 0xca, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103ae0] 0x008a9000 + 0x103ae0 = 0x009acae0
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xa3, 0xbe, 0x00, 0xd8, 0xca, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103af0] 0x008a9000 + 0x103af0 = 0x009acaf0
RTTIBaseClassDescriptor ProfileEditor 1                                                                            // [0x103b00] 0x008a9000 + 0x103b00 = 0x009acb00
.byte 0x00, 0xcb, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103b18] 0x008a9000 + 0x103b18 = 0x009acb18
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103b20] 0x008a9000 + 0x103b20 = 0x009acb20
.byte 0x02, 0x00, 0x00, 0x00, 0x18, 0xcb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103b30] 0x008a9000 + 0x103b30 = 0x009acb30
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0xa4, 0xbe, 0x00, 0x28, 0xcb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103b40] 0x008a9000 + 0x103b40 = 0x009acb40
RTTIBaseClassDescriptor RegisterBox 1                                                                              // [0x103b50] 0x008a9000 + 0x103b50 = 0x009acb50
.byte 0x50, 0xcb, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103b68] 0x008a9000 + 0x103b68 = 0x009acb68
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103b70] 0x008a9000 + 0x103b70 = 0x009acb70
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0xcb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103b80] 0x008a9000 + 0x103b80 = 0x009acb80
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xa4, 0xbe, 0x00, 0x78, 0xcb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103b90] 0x008a9000 + 0x103b90 = 0x009acb90
RTTIBaseClassDescriptor SetupMultiplayerMain 1                                                                     // [0x103ba0] 0x008a9000 + 0x103ba0 = 0x009acba0
.byte 0xa0, 0xcb, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103bb8] 0x008a9000 + 0x103bb8 = 0x009acbb8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103bc0] 0x008a9000 + 0x103bc0 = 0x009acbc0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0xcb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103bd0] 0x008a9000 + 0x103bd0 = 0x009acbd0
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xa4, 0xbe, 0x00, 0xc8, 0xcb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103be0] 0x008a9000 + 0x103be0 = 0x009acbe0
RTTIBaseClassDescriptor GatheringBox 1                                                                             // [0x103bf0] 0x008a9000 + 0x103bf0 = 0x009acbf0
.byte 0xf0, 0xcb, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103c08] 0x008a9000 + 0x103c08 = 0x009acc08
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103c10] 0x008a9000 + 0x103c10 = 0x009acc10
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0xcc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103c20] 0x008a9000 + 0x103c20 = 0x009acc20
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xa4, 0xbe, 0x00, 0x18, 0xcc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103c30] 0x008a9000 + 0x103c30 = 0x009acc30
RTTIBaseClassDescriptor TattooEditor 1                                                                             // [0x103c40] 0x008a9000 + 0x103c40 = 0x009acc40
.byte 0x40, 0xcc, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103c58] 0x008a9000 + 0x103c58 = 0x009acc58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103c60] 0x008a9000 + 0x103c60 = 0x009acc60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xcc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103c70] 0x008a9000 + 0x103c70 = 0x009acc70
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xa4, 0xbe, 0x00, 0x68, 0xcc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103c80] 0x008a9000 + 0x103c80 = 0x009acc80
RTTIBaseClassDescriptor SetupOnlineLandscapes 1                                                                    // [0x103c90] 0x008a9000 + 0x103c90 = 0x009acc90
.byte 0x90, 0xcc, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103ca8] 0x008a9000 + 0x103ca8 = 0x009acca8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103cb0] 0x008a9000 + 0x103cb0 = 0x009accb0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0xcc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103cc0] 0x008a9000 + 0x103cc0 = 0x009accc0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xa4, 0xbe, 0x00, 0xb8, 0xcc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103cd0] 0x008a9000 + 0x103cd0 = 0x009accd0
RTTIBaseClassDescriptor StartGameBox 1                                                                             // [0x103ce0] 0x008a9000 + 0x103ce0 = 0x009acce0
.byte 0xe0, 0xcc, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103cf8] 0x008a9000 + 0x103cf8 = 0x009accf8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103d00] 0x008a9000 + 0x103d00 = 0x009acd00
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0xcc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103d10] 0x008a9000 + 0x103d10 = 0x009acd10
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xa4, 0xbe, 0x00, 0x08, 0xcd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103d20] 0x008a9000 + 0x103d20 = 0x009acd20
RTTIBaseClassDescriptor EditingDebugBox 1                                                                          // [0x103d30] 0x008a9000 + 0x103d30 = 0x009acd30
.byte 0x30, 0xcd, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103d48] 0x008a9000 + 0x103d48 = 0x009acd48
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103d50] 0x008a9000 + 0x103d50 = 0x009acd50
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0xcd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103d60] 0x008a9000 + 0x103d60 = 0x009acd60
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0xa4, 0xbe, 0x00, 0x58, 0xcd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103d70] 0x008a9000 + 0x103d70 = 0x009acd70
RTTIBaseClassDescriptor GSLobbyBox 1                                                                               // [0x103d80] 0x008a9000 + 0x103d80 = 0x009acd80
.byte 0x80, 0xcd, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103d98] 0x008a9000 + 0x103d98 = 0x009acd98
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103da0] 0x008a9000 + 0x103da0 = 0x009acda0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0xcd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103db0] 0x008a9000 + 0x103db0 = 0x009acdb0
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xa5, 0xbe, 0x00, 0xa8, 0xcd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103dc0] 0x008a9000 + 0x103dc0 = 0x009acdc0
RTTIBaseClassDescriptor SkipBox 1                                                                                  // [0x103dd0] 0x008a9000 + 0x103dd0 = 0x009acdd0
.byte 0xd0, 0xcd, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103de8] 0x008a9000 + 0x103de8 = 0x009acde8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103df0] 0x008a9000 + 0x103df0 = 0x009acdf0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0xcd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103e00] 0x008a9000 + 0x103e00 = 0x009ace00
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xa5, 0xbe, 0x00, 0xf8, 0xcd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103e10] 0x008a9000 + 0x103e10 = 0x009ace10
RTTIBaseClassDescriptor LobbyBox 1                                                                                 // [0x103e20] 0x008a9000 + 0x103e20 = 0x009ace20
.byte 0x20, 0xce, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103e38] 0x008a9000 + 0x103e38 = 0x009ace38
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103e40] 0x008a9000 + 0x103e40 = 0x009ace40
.byte 0x02, 0x00, 0x00, 0x00, 0x38, 0xce, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103e50] 0x008a9000 + 0x103e50 = 0x009ace50
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xa5, 0xbe, 0x00, 0x48, 0xce, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103e60] 0x008a9000 + 0x103e60 = 0x009ace60
RTTIBaseClassDescriptor LoginBox 1                                                                                 // [0x103e70] 0x008a9000 + 0x103e70 = 0x009ace70
.byte 0x70, 0xce, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103e88] 0x008a9000 + 0x103e88 = 0x009ace88
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103e90] 0x008a9000 + 0x103e90 = 0x009ace90
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0xce, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103ea0] 0x008a9000 + 0x103ea0 = 0x009acea0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0xa5, 0xbe, 0x00, 0x98, 0xce, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103eb0] 0x008a9000 + 0x103eb0 = 0x009aceb0
RTTIBaseClassDescriptor SetupLandscapeBox 1                                                                        // [0x103ec0] 0x008a9000 + 0x103ec0 = 0x009acec0
.byte 0xc0, 0xce, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103ed8] 0x008a9000 + 0x103ed8 = 0x009aced8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103ee0] 0x008a9000 + 0x103ee0 = 0x009acee0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0xce, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103ef0] 0x008a9000 + 0x103ef0 = 0x009acef0
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xa8, 0xbe, 0x00, 0xe8, 0xce, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103f00] 0x008a9000 + 0x103f00 = 0x009acf00
RTTIBaseClassDescriptor SpellSetupBox 1                                                                            // [0x103f10] 0x008a9000 + 0x103f10 = 0x009acf10
.byte 0x10, 0xcf, 0x9a, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x103f28] 0x008a9000 + 0x103f28 = 0x009acf28
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103f30] 0x008a9000 + 0x103f30 = 0x009acf30
.byte 0x02, 0x00, 0x00, 0x00, 0x28, 0xcf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103f40] 0x008a9000 + 0x103f40 = 0x009acf40
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xa8, 0xbe, 0x00, 0x38, 0xcf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103f50] 0x008a9000 + 0x103f50 = 0x009acf50
RTTIBaseClassDescriptor GFurnitureInfo 3                                                                           // [0x103f60] 0x008a9000 + 0x103f60 = 0x009acf60
.byte 0x60, 0xcf, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00                                                               // [0x103f78] 0x008a9000 + 0x103f78 = 0x009acf78
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103f80] 0x008a9000 + 0x103f80 = 0x009acf80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0xcf, 0x9a, 0x00               // [0x103f90] 0x008a9000 + 0x103f90 = 0x009acf90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xa9, 0xbe, 0x00               // [0x103fa0] 0x008a9000 + 0x103fa0 = 0x009acfa0
.byte 0x90, 0xcf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x103fb0] 0x008a9000 + 0x103fb0 = 0x009acfb0
RTTIBaseClassDescriptor Furniture 4                                                                                // [0x103fb8] 0x008a9000 + 0x103fb8 = 0x009acfb8
.byte 0xb8, 0xcf, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x103fd0] 0x008a9000 + 0x103fd0 = 0x009acfd0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103fe0] 0x008a9000 + 0x103fe0 = 0x009acfe0
.byte 0x05, 0x00, 0x00, 0x00, 0xd0, 0xcf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x103ff0] 0x008a9000 + 0x103ff0 = 0x009acff0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xa9, 0xbe, 0x00, 0xe8, 0xcf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104000] 0x008a9000 + 0x104000 = 0x009ad000
RTTIBaseClassDescriptor GGame 2                                                                                    // [0x104010] 0x008a9000 + 0x104010 = 0x009ad010
.byte 0x10, 0xd0, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x104028] 0x008a9000 + 0x104028 = 0x009ad028
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104030] 0x008a9000 + 0x104030 = 0x009ad030
.byte 0x03, 0x00, 0x00, 0x00, 0x28, 0xd0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104040] 0x008a9000 + 0x104040 = 0x009ad040
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xc3, 0xbe, 0x00, 0x38, 0xd0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104050] 0x008a9000 + 0x104050 = 0x009ad050
RTTIBaseClassDescriptor GPlayerInfo 2                                                                              // [0x104060] 0x008a9000 + 0x104060 = 0x009ad060
.byte 0x60, 0xd0, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x104078] 0x008a9000 + 0x104078 = 0x009ad078
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104080] 0x008a9000 + 0x104080 = 0x009ad080
.byte 0x03, 0x00, 0x00, 0x00, 0x78, 0xd0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104090] 0x008a9000 + 0x104090 = 0x009ad090
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xc3, 0xbe, 0x00, 0x88, 0xd0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1040a0] 0x008a9000 + 0x1040a0 = 0x009ad0a0
RTTIBaseClassDescriptor GlobalGameLists 1                                                                          // [0x1040b0] 0x008a9000 + 0x1040b0 = 0x009ad0b0
.byte 0xb0, 0xd0, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1040c8] 0x008a9000 + 0x1040c8 = 0x009ad0c8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1040d0] 0x008a9000 + 0x1040d0 = 0x009ad0d0
.byte 0x02, 0x00, 0x00, 0x00, 0xc8, 0xd0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1040e0] 0x008a9000 + 0x1040e0 = 0x009ad0e0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xc3, 0xbe, 0x00, 0xd8, 0xd0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1040f0] 0x008a9000 + 0x1040f0 = 0x009ad0f0
RTTIBaseClassDescriptor GKeyBuffer 1                                                                               // [0x104100] 0x008a9000 + 0x104100 = 0x009ad100
.byte 0x00, 0xd1, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x104118] 0x008a9000 + 0x104118 = 0x009ad118
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104120] 0x008a9000 + 0x104120 = 0x009ad120
.byte 0x02, 0x00, 0x00, 0x00, 0x18, 0xd1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104130] 0x008a9000 + 0x104130 = 0x009ad130
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xc3, 0xbe, 0x00, 0x28, 0xd1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104140] 0x008a9000 + 0x104140 = 0x009ad140
RTTIBaseClassDescriptor GSoundMap 1                                                                                // [0x104150] 0x008a9000 + 0x104150 = 0x009ad150
.byte 0x50, 0xd1, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x104168] 0x008a9000 + 0x104168 = 0x009ad168
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104170] 0x008a9000 + 0x104170 = 0x009ad170
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0xd1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104180] 0x008a9000 + 0x104180 = 0x009ad180
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xc3, 0xbe, 0x00, 0x78, 0xd1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104190] 0x008a9000 + 0x104190 = 0x009ad190
RTTIBaseClassDescriptor GestureSystemDataList 1                                                                    // [0x1041a0] 0x008a9000 + 0x1041a0 = 0x009ad1a0
.byte 0xa0, 0xd1, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1041b8] 0x008a9000 + 0x1041b8 = 0x009ad1b8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1041c0] 0x008a9000 + 0x1041c0 = 0x009ad1c0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0xd1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1041d0] 0x008a9000 + 0x1041d0 = 0x009ad1d0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0xc3, 0xbe, 0x00, 0xc8, 0xd1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1041e0] 0x008a9000 + 0x1041e0 = 0x009ad1e0
RTTIBaseClassDescriptor GestureSystemData 1                                                                        // [0x1041f0] 0x008a9000 + 0x1041f0 = 0x009ad1f0
.byte 0xf0, 0xd1, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x104208] 0x008a9000 + 0x104208 = 0x009ad208
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104210] 0x008a9000 + 0x104210 = 0x009ad210
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0xd2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104220] 0x008a9000 + 0x104220 = 0x009ad220
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xc4, 0xbe, 0x00, 0x18, 0xd2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104230] 0x008a9000 + 0x104230 = 0x009ad230
RTTIBaseClassDescriptor GestureSystem 1                                                                            // [0x104240] 0x008a9000 + 0x104240 = 0x009ad240
.byte 0x40, 0xd2, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x104258] 0x008a9000 + 0x104258 = 0x009ad258
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104260] 0x008a9000 + 0x104260 = 0x009ad260
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xd2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104270] 0x008a9000 + 0x104270 = 0x009ad270
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xc4, 0xbe, 0x00, 0x68, 0xd2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104280] 0x008a9000 + 0x104280 = 0x009ad280
RTTIBaseClassDescriptor GTerrainMap 1                                                                              // [0x104290] 0x008a9000 + 0x104290 = 0x009ad290
.byte 0x90, 0xd2, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1042a8] 0x008a9000 + 0x1042a8 = 0x009ad2a8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1042b0] 0x008a9000 + 0x1042b0 = 0x009ad2b0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0xd2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1042c0] 0x008a9000 + 0x1042c0 = 0x009ad2c0
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xc4, 0xbe, 0x00, 0xb8, 0xd2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1042d0] 0x008a9000 + 0x1042d0 = 0x009ad2d0
RTTIBaseClassDescriptor TerrainMapInfo 2                                                                           // [0x1042e0] 0x008a9000 + 0x1042e0 = 0x009ad2e0
.byte 0xe0, 0xd2, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x1042f8] 0x008a9000 + 0x1042f8 = 0x009ad2f8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104300] 0x008a9000 + 0x104300 = 0x009ad300
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xd2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104310] 0x008a9000 + 0x104310 = 0x009ad310
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xc4, 0xbe, 0x00, 0x08, 0xd3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104320] 0x008a9000 + 0x104320 = 0x009ad320
RTTIBaseClassDescriptor TerrainMapTypeInfo 2                                                                       // [0x104330] 0x008a9000 + 0x104330 = 0x009ad330
.byte 0x30, 0xd3, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x104348] 0x008a9000 + 0x104348 = 0x009ad348
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104350] 0x008a9000 + 0x104350 = 0x009ad350
.byte 0x03, 0x00, 0x00, 0x00, 0x48, 0xd3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104360] 0x008a9000 + 0x104360 = 0x009ad360
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0xc4, 0xbe, 0x00, 0x58, 0xd3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104370] 0x008a9000 + 0x104370 = 0x009ad370
RTTIBaseClassDescriptor GameArea 1                                                                                 // [0x104380] 0x008a9000 + 0x104380 = 0x009ad380
.byte 0x80, 0xd3, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x104398] 0x008a9000 + 0x104398 = 0x009ad398
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1043a0] 0x008a9000 + 0x1043a0 = 0x009ad3a0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0xd3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1043b0] 0x008a9000 + 0x1043b0 = 0x009ad3b0
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xc9, 0xbe, 0x00, 0xa8, 0xd3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1043c0] 0x008a9000 + 0x1043c0 = 0x009ad3c0
RTTIBaseClassDescriptor GGameInfo 1                                                                                // [0x1043d0] 0x008a9000 + 0x1043d0 = 0x009ad3d0
.byte 0xd0, 0xd3, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1043e8] 0x008a9000 + 0x1043e8 = 0x009ad3e8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1043f0] 0x008a9000 + 0x1043f0 = 0x009ad3f0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0xd3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104400] 0x008a9000 + 0x104400 = 0x009ad400
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xc9, 0xbe, 0x00, 0xf8, 0xd3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104410] 0x008a9000 + 0x104410 = 0x009ad410
RTTIBaseClassDescriptor GameOSFile 2                                                                               // [0x104420] 0x008a9000 + 0x104420 = 0x009ad420
.byte 0x20, 0xd4, 0x9a, 0x00, 0x50, 0x7f, 0x9a, 0x00                                                               // [0x104438] 0x008a9000 + 0x104438 = 0x009ad438
.byte 0x38, 0x7f, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104440] 0x008a9000 + 0x104440 = 0x009ad440
.byte 0x03, 0x00, 0x00, 0x00, 0x38, 0xd4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104450] 0x008a9000 + 0x104450 = 0x009ad450
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xc9, 0xbe, 0x00, 0x48, 0xd4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104460] 0x008a9000 + 0x104460 = 0x009ad460
RTTIBaseClassDescriptor Tree 6                                                                                     // [0x104470] 0x008a9000 + 0x104470 = 0x009ad470
.byte 0x70, 0xd4, 0x9a, 0x00, 0x80, 0xc4, 0x9a, 0x00                                                               // [0x104488] 0x008a9000 + 0x104488 = 0x009ad488
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x104490] 0x008a9000 + 0x104490 = 0x009ad490
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1044a0] 0x008a9000 + 0x1044a0 = 0x009ad4a0
.byte 0x07, 0x00, 0x00, 0x00, 0x88, 0xd4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1044b0] 0x008a9000 + 0x1044b0 = 0x009ad4b0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x96, 0x9d, 0x00, 0xa8, 0xd4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1044c0] 0x008a9000 + 0x1044c0 = 0x009ad4c0
RTTIBaseClassDescriptor SpellFlockFlying 6                                                                         // [0x1044d0] 0x008a9000 + 0x1044d0 = 0x009ad4d0
.byte 0xd0, 0xd4, 0x9a, 0x00, 0xa0, 0xdf, 0x9a, 0x00                                                               // [0x1044e8] 0x008a9000 + 0x1044e8 = 0x009ad4e8
.byte 0x88, 0xdf, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1044f0] 0x008a9000 + 0x1044f0 = 0x009ad4f0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104500] 0x008a9000 + 0x104500 = 0x009ad500
.byte 0x07, 0x00, 0x00, 0x00, 0xe8, 0xd4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104510] 0x008a9000 + 0x104510 = 0x009ad510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0xbe, 0x00, 0x08, 0xd5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104520] 0x008a9000 + 0x104520 = 0x009ad520

RTTIBaseClassArray Villager                                                                                        // [0x104530] 0x008a9000 + 0x104530 = 0x009ad530
.long ??_R1A@?0A@A@Living@@8
.long ??_R1A@?0A@A@MobileWallHug@@8
.long ??_R1A@?0A@A@Mobile@@8
.long ??_R1A@?0A@A@Object@@8                                                                                       // [0x104540] 0x008a9000 + 0x104540 = 0x009ad540
.long ??_R1A@?0A@A@GameThingWithPos@@8
.long ??_R1A@?0A@A@GameThing@@8
.long ??_R1A@?0A@A@Base@@8
.long 0x00000000                                                                                                   // [0x104550] 0x008a9000 + 0x104550 = 0x009ad550
.long 0x00000000                                                                                                   // [0x104554] 0x008a9000 + 0x104554 = 0x009ad554

RTTIClassHierarchyDescriptor Villager 8                                                                            // [0x104558] 0x008a9000 + 0x104558 = 0x009ad558
RTTICompleteObjectLocator Villager                                                                                 // [0x104568] 0x008a9000 + 0x104568 = 0x009ad568

.byte 0x00, 0x00, 0x00, 0x00                                                                                       // [0x10457c] 0x008a9000 + 0x10457c = 0x009ad57c
RTTIBaseClassDescriptor OneOffSpellSeed 6                                                                          // [0x104580] 0x008a9000 + 0x104580 = 0x009ad580
.byte 0x80, 0xd5, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00                                                               // [0x104598] 0x008a9000 + 0x104598 = 0x009ad598
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1045a0] 0x008a9000 + 0x1045a0 = 0x009ad5a0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1045b0] 0x008a9000 + 0x1045b0 = 0x009ad5b0
.byte 0x07, 0x00, 0x00, 0x00, 0x98, 0xd5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1045c0] 0x008a9000 + 0x1045c0 = 0x009ad5c0
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0xca, 0xbe, 0x00, 0xb8, 0xd5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1045d0] 0x008a9000 + 0x1045d0 = 0x009ad5d0
RTTIBaseClassDescriptor PileFood 9                                                                                 // [0x1045e0] 0x008a9000 + 0x1045e0 = 0x009ad5e0
RTTIBaseClassDescriptor PuzzleGrain 10                                                                             // [0x1045f8] 0x008a9000 + 0x1045f8 = 0x009ad5f8
.byte 0xf8, 0xd5, 0x9a, 0x00, 0xe0, 0xd5, 0x9a, 0x00, 0xf0, 0xdb, 0x9a, 0x00, 0xd8, 0xdb, 0x9a, 0x00               // [0x104610] 0x008a9000 + 0x104610 = 0x009ad610
.byte 0xc0, 0xdb, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x104620] 0x008a9000 + 0x104620 = 0x009ad620
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104630] 0x008a9000 + 0x104630 = 0x009ad630
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x10, 0xd6, 0x9a, 0x00               // [0x104640] 0x008a9000 + 0x104640 = 0x009ad640
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xca, 0xbe, 0x00               // [0x104650] 0x008a9000 + 0x104650 = 0x009ad650
.byte 0x40, 0xd6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104660] 0x008a9000 + 0x104660 = 0x009ad660
RTTIBaseClassDescriptor TownDesireFlags 4                                                                          // [0x104668] 0x008a9000 + 0x104668 = 0x009ad668
.byte 0x68, 0xd6, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x104680] 0x008a9000 + 0x104680 = 0x009ad680
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104690] 0x008a9000 + 0x104690 = 0x009ad690
.byte 0x05, 0x00, 0x00, 0x00, 0x80, 0xd6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1046a0] 0x008a9000 + 0x1046a0 = 0x009ad6a0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x02, 0xbe, 0x00, 0x98, 0xd6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1046b0] 0x008a9000 + 0x1046b0 = 0x009ad6b0
RTTIBaseClassDescriptor Reaction 2                                                                                 // [0x1046c0] 0x008a9000 + 0x1046c0 = 0x009ad6c0
.byte 0xc0, 0xd6, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x1046d8] 0x008a9000 + 0x1046d8 = 0x009ad6d8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1046e0] 0x008a9000 + 0x1046e0 = 0x009ad6e0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0xd6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1046f0] 0x008a9000 + 0x1046f0 = 0x009ad6f0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xca, 0xbe, 0x00, 0xe8, 0xd6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104700] 0x008a9000 + 0x104700 = 0x009ad700
RTTIBaseClassDescriptor Poo 6                                                                                      // [0x104710] 0x008a9000 + 0x104710 = 0x009ad710
.byte 0x10, 0xd7, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00                                                               // [0x104728] 0x008a9000 + 0x104728 = 0x009ad728
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x104730] 0x008a9000 + 0x104730 = 0x009ad730
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104740] 0x008a9000 + 0x104740 = 0x009ad740
.byte 0x07, 0x00, 0x00, 0x00, 0x28, 0xd7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104750] 0x008a9000 + 0x104750 = 0x009ad750
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xca, 0xbe, 0x00, 0x48, 0xd7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104760] 0x008a9000 + 0x104760 = 0x009ad760
.byte 0xc0, 0xdb, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x104770] 0x008a9000 + 0x104770 = 0x009ad770
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104780] 0x008a9000 + 0x104780 = 0x009ad780
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0xd7, 0x9a, 0x00               // [0x104790] 0x008a9000 + 0x104790 = 0x009ad790
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x8e, 0x9c, 0x00               // [0x1047a0] 0x008a9000 + 0x1047a0 = 0x009ad7a0
.byte 0x90, 0xd7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1047b0] 0x008a9000 + 0x1047b0 = 0x009ad7b0
RTTIBaseClassDescriptor StoragePit 7                                                                               // [0x1047b8] 0x008a9000 + 0x1047b8 = 0x009ad7b8
.byte 0xb8, 0xd7, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x1047d0] 0x008a9000 + 0x1047d0 = 0x009ad7d0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1047e0] 0x008a9000 + 0x1047e0 = 0x009ad7e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1047f0] 0x008a9000 + 0x1047f0 = 0x009ad7f0
.byte 0x08, 0x00, 0x00, 0x00, 0xd0, 0xd7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104800] 0x008a9000 + 0x104800 = 0x009ad800
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x8e, 0x9c, 0x00, 0xf8, 0xd7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104810] 0x008a9000 + 0x104810 = 0x009ad810
.byte 0x88, 0xdf, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x104820] 0x008a9000 + 0x104820 = 0x009ad820
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104830] 0x008a9000 + 0x104830 = 0x009ad830
.byte 0x05, 0x00, 0x00, 0x00, 0x20, 0xd8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104840] 0x008a9000 + 0x104840 = 0x009ad840
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0xcc, 0xbe, 0x00, 0x38, 0xd8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104850] 0x008a9000 + 0x104850 = 0x009ad850
RTTIBaseClassDescriptor SpellHeal 4                                                                                // [0x104860] 0x008a9000 + 0x104860 = 0x009ad860
.byte 0x60, 0xd8, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00                                                               // [0x104878] 0x008a9000 + 0x104878 = 0x009ad878
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104880] 0x008a9000 + 0x104880 = 0x009ad880
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x78, 0xd8, 0x9a, 0x00               // [0x104890] 0x008a9000 + 0x104890 = 0x009ad890
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xca, 0xbe, 0x00               // [0x1048a0] 0x008a9000 + 0x1048a0 = 0x009ad8a0
.byte 0x90, 0xd8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1048b0] 0x008a9000 + 0x1048b0 = 0x009ad8b0

RTTIBaseClassDescriptor Villager 7                                                                                 // [0x1048b8] 0x008a9000 + 0x1048b8 = 0x009ad8b8

RTTIBaseClassDescriptor SpecialVillager 8                                                                          // [0x1048d0] 0x008a9000 + 0x1048d0 = 0x009ad8d0
.byte 0xd0, 0xd8, 0x9a, 0x00, 0xb8, 0xd8, 0x9a, 0x00                                                               // [0x1048e8] 0x008a9000 + 0x1048e8 = 0x009ad8e8
.byte 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x1048f0] 0x008a9000 + 0x1048f0 = 0x009ad8f0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104900] 0x008a9000 + 0x104900 = 0x009ad900
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0xe8, 0xd8, 0x9a, 0x00               // [0x104910] 0x008a9000 + 0x104910 = 0x009ad910
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8f, 0xbe, 0x00               // [0x104920] 0x008a9000 + 0x104920 = 0x009ad920
.byte 0x10, 0xd9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104930] 0x008a9000 + 0x104930 = 0x009ad930
RTTIBaseClassDescriptor BaseInfo 0                                                                                 // [0x104938] 0x008a9000 + 0x104938 = 0x009ad938
.byte 0x38, 0xd9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104950] 0x008a9000 + 0x104950 = 0x009ad950
.byte 0x01, 0x00, 0x00, 0x00, 0x50, 0xd9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104960] 0x008a9000 + 0x104960 = 0x009ad960
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xca, 0xbe, 0x00, 0x58, 0xd9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104970] 0x008a9000 + 0x104970 = 0x009ad970
RTTIBaseClassDescriptor PuzzleGame 3                                                                               // [0x104980] 0x008a9000 + 0x104980 = 0x009ad980
.byte 0x80, 0xd9, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x104998] 0x008a9000 + 0x104998 = 0x009ad998
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1049a0] 0x008a9000 + 0x1049a0 = 0x009ad9a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0xd9, 0x9a, 0x00               // [0x1049b0] 0x008a9000 + 0x1049b0 = 0x009ad9b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xca, 0xbe, 0x00               // [0x1049c0] 0x008a9000 + 0x1049c0 = 0x009ad9c0
.byte 0xb0, 0xd9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1049d0] 0x008a9000 + 0x1049d0 = 0x009ad9d0
RTTIBaseClassDescriptor GStreetLantern 4                                                                           // [0x1049d8] 0x008a9000 + 0x1049d8 = 0x009ad9d8
.byte 0xd8, 0xd9, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1049f0] 0x008a9000 + 0x1049f0 = 0x009ad9f0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104a00] 0x008a9000 + 0x104a00 = 0x009ada00
.byte 0x05, 0x00, 0x00, 0x00, 0xf0, 0xd9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104a10] 0x008a9000 + 0x104a10 = 0x009ada10
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0xca, 0xbe, 0x00, 0x08, 0xda, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104a20] 0x008a9000 + 0x104a20 = 0x009ada20
RTTIBaseClassDescriptor GStreetLight 3                                                                             // [0x104a30] 0x008a9000 + 0x104a30 = 0x009ada30
.byte 0x30, 0xda, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x104a48] 0x008a9000 + 0x104a48 = 0x009ada48
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104a50] 0x008a9000 + 0x104a50 = 0x009ada50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0xda, 0x9a, 0x00               // [0x104a60] 0x008a9000 + 0x104a60 = 0x009ada60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xcb, 0xbe, 0x00               // [0x104a70] 0x008a9000 + 0x104a70 = 0x009ada70
.byte 0x60, 0xda, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104a80] 0x008a9000 + 0x104a80 = 0x009ada80
RTTIBaseClassDescriptor TownCentre 7                                                                               // [0x104a88] 0x008a9000 + 0x104a88 = 0x009ada88
.byte 0x88, 0xda, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x104aa0] 0x008a9000 + 0x104aa0 = 0x009adaa0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x104ab0] 0x008a9000 + 0x104ab0 = 0x009adab0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104ac0] 0x008a9000 + 0x104ac0 = 0x009adac0
.byte 0x08, 0x00, 0x00, 0x00, 0xa0, 0xda, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104ad0] 0x008a9000 + 0x104ad0 = 0x009adad0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x10, 0x9d, 0x00, 0xc8, 0xda, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104ae0] 0x008a9000 + 0x104ae0 = 0x009adae0
RTTIBaseClassDescriptor PuzzleLion 11                                                                              // [0x104af0] 0x008a9000 + 0x104af0 = 0x009adaf0
.byte 0xf0, 0xda, 0x9a, 0x00, 0x48, 0x78, 0x9a, 0x00                                                               // [0x104b08] 0x008a9000 + 0x104b08 = 0x009adb08
.byte 0xd8, 0x77, 0x9a, 0x00, 0xb0, 0x75, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0x104b10] 0x008a9000 + 0x104b10 = 0x009adb10
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x104b20] 0x008a9000 + 0x104b20 = 0x009adb20
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104b30] 0x008a9000 + 0x104b30 = 0x009adb30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0xdb, 0x9a, 0x00               // [0x104b40] 0x008a9000 + 0x104b40 = 0x009adb40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xcb, 0xbe, 0x00               // [0x104b50] 0x008a9000 + 0x104b50 = 0x009adb50
.byte 0x40, 0xdb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104b60] 0x008a9000 + 0x104b60 = 0x009adb60
RTTIBaseClassDescriptor GWaterfall 4                                                                               // [0x104b68] 0x008a9000 + 0x104b68 = 0x009adb68
.byte 0x68, 0xdb, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x104b80] 0x008a9000 + 0x104b80 = 0x009adb80
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104b90] 0x008a9000 + 0x104b90 = 0x009adb90
.byte 0x05, 0x00, 0x00, 0x00, 0x80, 0xdb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104ba0] 0x008a9000 + 0x104ba0 = 0x009adba0
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xcb, 0xbe, 0x00, 0x98, 0xdb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104bb0] 0x008a9000 + 0x104bb0 = 0x009adbb0
RTTIBaseClassDescriptor Pot 6                                                                                      // [0x104bc0] 0x008a9000 + 0x104bc0 = 0x009adbc0
RTTIBaseClassDescriptor PotStructure 7                                                                             // [0x104bd8] 0x008a9000 + 0x104bd8 = 0x009adbd8
RTTIBaseClassDescriptor PileResource 8                                                                             // [0x104bf0] 0x008a9000 + 0x104bf0 = 0x009adbf0
RTTIBaseClassDescriptor PileWood 9                                                                                 // [0x104c08] 0x008a9000 + 0x104c08 = 0x009adc08
.byte 0x08, 0xdc, 0x9a, 0x00, 0xf0, 0xdb, 0x9a, 0x00, 0xd8, 0xdb, 0x9a, 0x00, 0xc0, 0xdb, 0x9a, 0x00               // [0x104c20] 0x008a9000 + 0x104c20 = 0x009adc20
.byte 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x104c30] 0x008a9000 + 0x104c30 = 0x009adc30
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104c40] 0x008a9000 + 0x104c40 = 0x009adc40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x20, 0xdc, 0x9a, 0x00               // [0x104c50] 0x008a9000 + 0x104c50 = 0x009adc50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xcb, 0xbe, 0x00               // [0x104c60] 0x008a9000 + 0x104c60 = 0x009adc60
.byte 0x50, 0xdc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104c70] 0x008a9000 + 0x104c70 = 0x009adc70
RTTIBaseClassDescriptor GComputerSpellCast 2                                                                       // [0x104c78] 0x008a9000 + 0x104c78 = 0x009adc78
.byte 0x78, 0xdc, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104c90] 0x008a9000 + 0x104c90 = 0x009adc90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x90, 0xdc, 0x9a, 0x00               // [0x104ca0] 0x008a9000 + 0x104ca0 = 0x009adca0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xcb, 0xbe, 0x00               // [0x104cb0] 0x008a9000 + 0x104cb0 = 0x009adcb0
.byte 0xa0, 0xdc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104cc0] 0x008a9000 + 0x104cc0 = 0x009adcc0
RTTIBaseClassDescriptor GStream 2                                                                                  // [0x104cc8] 0x008a9000 + 0x104cc8 = 0x009adcc8
.byte 0xc8, 0xdc, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104ce0] 0x008a9000 + 0x104ce0 = 0x009adce0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe0, 0xdc, 0x9a, 0x00               // [0x104cf0] 0x008a9000 + 0x104cf0 = 0x009adcf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xcb, 0xbe, 0x00               // [0x104d00] 0x008a9000 + 0x104d00 = 0x009add00
.byte 0xf0, 0xdc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104d10] 0x008a9000 + 0x104d10 = 0x009add10
RTTIBaseClassDescriptor SpellTeleport 5                                                                            // [0x104d18] 0x008a9000 + 0x104d18 = 0x009add18
.byte 0x18, 0xdd, 0x9a, 0x00, 0x88, 0xdf, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x104d30] 0x008a9000 + 0x104d30 = 0x009add30
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104d40] 0x008a9000 + 0x104d40 = 0x009add40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x30, 0xdd, 0x9a, 0x00               // [0x104d50] 0x008a9000 + 0x104d50 = 0x009add50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xcc, 0xbe, 0x00               // [0x104d60] 0x008a9000 + 0x104d60 = 0x009add60
.byte 0x50, 0xdd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104d70] 0x008a9000 + 0x104d70 = 0x009add70
RTTIBaseClassDescriptor InfluenceRing 3                                                                            // [0x104d78] 0x008a9000 + 0x104d78 = 0x009add78
.byte 0x78, 0xdd, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x104d90] 0x008a9000 + 0x104d90 = 0x009add90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104da0] 0x008a9000 + 0x104da0 = 0x009adda0
.byte 0x04, 0x00, 0x00, 0x00, 0x90, 0xdd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104db0] 0x008a9000 + 0x104db0 = 0x009addb0
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xcc, 0xbe, 0x00, 0xa8, 0xdd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104dc0] 0x008a9000 + 0x104dc0 = 0x009addc0
RTTIBaseClassDescriptor FieldCrop 6                                                                                // [0x104dd0] 0x008a9000 + 0x104dd0 = 0x009addd0
.byte 0xd0, 0xdd, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00                                                               // [0x104de8] 0x008a9000 + 0x104de8 = 0x009adde8
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x104df0] 0x008a9000 + 0x104df0 = 0x009addf0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104e00] 0x008a9000 + 0x104e00 = 0x009ade00
.byte 0x07, 0x00, 0x00, 0x00, 0xe8, 0xdd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104e10] 0x008a9000 + 0x104e10 = 0x009ade10
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xcc, 0xbe, 0x00, 0x08, 0xde, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104e20] 0x008a9000 + 0x104e20 = 0x009ade20
RTTIBaseClassDescriptor PuzzleVillager 9                                                                           // [0x104e30] 0x008a9000 + 0x104e30 = 0x009ade30
.byte 0x30, 0xde, 0x9a, 0x00, 0x98, 0x6c, 0x9a, 0x00                                                               // [0x104e48] 0x008a9000 + 0x104e48 = 0x009ade48
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0x104e50] 0x008a9000 + 0x104e50 = 0x009ade50
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x104e60] 0x008a9000 + 0x104e60 = 0x009ade60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104e70] 0x008a9000 + 0x104e70 = 0x009ade70
.byte 0x0a, 0x00, 0x00, 0x00, 0x48, 0xde, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104e80] 0x008a9000 + 0x104e80 = 0x009ade80
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xcc, 0xbe, 0x00, 0x78, 0xde, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104e90] 0x008a9000 + 0x104e90 = 0x009ade90
RTTIBaseClassDescriptor Mist 3                                                                                     // [0x104ea0] 0x008a9000 + 0x104ea0 = 0x009adea0
.byte 0xa0, 0xde, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x104eb8] 0x008a9000 + 0x104eb8 = 0x009adeb8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104ec0] 0x008a9000 + 0x104ec0 = 0x009adec0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb8, 0xde, 0x9a, 0x00               // [0x104ed0] 0x008a9000 + 0x104ed0 = 0x009aded0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xcc, 0xbe, 0x00               // [0x104ee0] 0x008a9000 + 0x104ee0 = 0x009adee0
.byte 0xd0, 0xde, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xdf, 0x9a, 0x00, 0x88, 0xdf, 0x9a, 0x00               // [0x104ef0] 0x008a9000 + 0x104ef0 = 0x009adef0
.byte 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x104f00] 0x008a9000 + 0x104f00 = 0x009adf00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104f10] 0x008a9000 + 0x104f10 = 0x009adf10
.byte 0x06, 0x00, 0x00, 0x00, 0xf8, 0xde, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104f20] 0x008a9000 + 0x104f20 = 0x009adf20
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xcc, 0xbe, 0x00, 0x18, 0xdf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104f30] 0x008a9000 + 0x104f30 = 0x009adf30
.byte 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x104f40] 0x008a9000 + 0x104f40 = 0x009adf40
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104f50] 0x008a9000 + 0x104f50 = 0x009adf50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x40, 0xdf, 0x9a, 0x00               // [0x104f60] 0x008a9000 + 0x104f60 = 0x009adf60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xd3, 0x9c, 0x00               // [0x104f70] 0x008a9000 + 0x104f70 = 0x009adf70
.byte 0x60, 0xdf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x104f80] 0x008a9000 + 0x104f80 = 0x009adf80
RTTIBaseClassDescriptor SpellWithObjects 4                                                                         // [0x104f88] 0x008a9000 + 0x104f88 = 0x009adf88
RTTIBaseClassDescriptor SpellFlock 5                                                                               // [0x104fa0] 0x008a9000 + 0x104fa0 = 0x009adfa0
RTTIBaseClassDescriptor SpellFlockGround 6                                                                         // [0x104fb8] 0x008a9000 + 0x104fb8 = 0x009adfb8
.byte 0xb8, 0xdf, 0x9a, 0x00, 0xa0, 0xdf, 0x9a, 0x00, 0x88, 0xdf, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00               // [0x104fd0] 0x008a9000 + 0x104fd0 = 0x009adfd0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x104fe0] 0x008a9000 + 0x104fe0 = 0x009adfe0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd0, 0xdf, 0x9a, 0x00               // [0x104ff0] 0x008a9000 + 0x104ff0 = 0x009adff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xcc, 0xbe, 0x00               // [0x105000] 0x008a9000 + 0x105000 = 0x009ae000
.byte 0xf0, 0xdf, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105010] 0x008a9000 + 0x105010 = 0x009ae010
RTTIBaseClassDescriptor WeatherThing 3                                                                             // [0x105018] 0x008a9000 + 0x105018 = 0x009ae018
.byte 0x18, 0xe0, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x105030] 0x008a9000 + 0x105030 = 0x009ae030
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105040] 0x008a9000 + 0x105040 = 0x009ae040
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0xe0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105050] 0x008a9000 + 0x105050 = 0x009ae050
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xcd, 0xbe, 0x00, 0x48, 0xe0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105060] 0x008a9000 + 0x105060 = 0x009ae060
RTTIBaseClassDescriptor GComputerSeen 2                                                                            // [0x105070] 0x008a9000 + 0x105070 = 0x009ae070
.byte 0x70, 0xe0, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x105088] 0x008a9000 + 0x105088 = 0x009ae088
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105090] 0x008a9000 + 0x105090 = 0x009ae090
.byte 0x03, 0x00, 0x00, 0x00, 0x88, 0xe0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1050a0] 0x008a9000 + 0x1050a0 = 0x009ae0a0
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0xcd, 0xbe, 0x00, 0x98, 0xe0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1050b0] 0x008a9000 + 0x1050b0 = 0x009ae0b0
.byte 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x1050c0] 0x008a9000 + 0x1050c0 = 0x009ae0c0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1050d0] 0x008a9000 + 0x1050d0 = 0x009ae0d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc0, 0xe0, 0x9a, 0x00               // [0x1050e0] 0x008a9000 + 0x1050e0 = 0x009ae0e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x96, 0x9c, 0x00               // [0x1050f0] 0x008a9000 + 0x1050f0 = 0x009ae0f0
.byte 0xe0, 0xe0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105100] 0x008a9000 + 0x105100 = 0x009ae100
RTTIBaseClassDescriptor GParticleContainer 3                                                                       // [0x105108] 0x008a9000 + 0x105108 = 0x009ae108
.byte 0x08, 0xe1, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x105120] 0x008a9000 + 0x105120 = 0x009ae120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105130] 0x008a9000 + 0x105130 = 0x009ae130
.byte 0x04, 0x00, 0x00, 0x00, 0x20, 0xe1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105140] 0x008a9000 + 0x105140 = 0x009ae140
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0xcd, 0xbe, 0x00, 0x38, 0xe1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105150] 0x008a9000 + 0x105150 = 0x009ae150
RTTIBaseClassDescriptor GComputerPlayer 3                                                                          // [0x105160] 0x008a9000 + 0x105160 = 0x009ae160
.byte 0x60, 0xe1, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x105178] 0x008a9000 + 0x105178 = 0x009ae178
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105180] 0x008a9000 + 0x105180 = 0x009ae180
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0xe1, 0x9a, 0x00               // [0x105190] 0x008a9000 + 0x105190 = 0x009ae190
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0xcd, 0xbe, 0x00               // [0x1051a0] 0x008a9000 + 0x1051a0 = 0x009ae1a0
.byte 0x90, 0xe1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1051b0] 0x008a9000 + 0x1051b0 = 0x009ae1b0
RTTIBaseClassDescriptor PuzzleSheep 11                                                                             // [0x1051b8] 0x008a9000 + 0x1051b8 = 0x009ae1b8
.byte 0xb8, 0xe1, 0x9a, 0x00, 0xd8, 0x6d, 0x9a, 0x00, 0x68, 0x6d, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00               // [0x1051d0] 0x008a9000 + 0x1051d0 = 0x009ae1d0
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0x1051e0] 0x008a9000 + 0x1051e0 = 0x009ae1e0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1051f0] 0x008a9000 + 0x1051f0 = 0x009ae1f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105200] 0x008a9000 + 0x105200 = 0x009ae200
.byte 0x0c, 0x00, 0x00, 0x00, 0xd0, 0xe1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105210] 0x008a9000 + 0x105210 = 0x009ae210
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0xcd, 0xbe, 0x00, 0x08, 0xe2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105220] 0x008a9000 + 0x105220 = 0x009ae220
RTTIBaseClassDescriptor HanoiBlock 6                                                                               // [0x105230] 0x008a9000 + 0x105230 = 0x009ae230
.byte 0x30, 0xe2, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00                                                               // [0x105248] 0x008a9000 + 0x105248 = 0x009ae248
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x105250] 0x008a9000 + 0x105250 = 0x009ae250
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105260] 0x008a9000 + 0x105260 = 0x009ae260
.byte 0x07, 0x00, 0x00, 0x00, 0x48, 0xe2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105270] 0x008a9000 + 0x105270 = 0x009ae270
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xcd, 0xbe, 0x00, 0x68, 0xe2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105280] 0x008a9000 + 0x105280 = 0x009ae280
RTTIBaseClassDescriptor WorshipSite 7                                                                              // [0x105290] 0x008a9000 + 0x105290 = 0x009ae290
.byte 0x90, 0xe2, 0x9a, 0x00, 0x00, 0x8f, 0x9a, 0x00                                                               // [0x1052a8] 0x008a9000 + 0x1052a8 = 0x009ae2a8
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x1052b0] 0x008a9000 + 0x1052b0 = 0x009ae2b0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1052c0] 0x008a9000 + 0x1052c0 = 0x009ae2c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa8, 0xe2, 0x9a, 0x00               // [0x1052d0] 0x008a9000 + 0x1052d0 = 0x009ae2d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x96, 0x9d, 0x00               // [0x1052e0] 0x008a9000 + 0x1052e0 = 0x009ae2e0
.byte 0xd0, 0xe2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1052f0] 0x008a9000 + 0x1052f0 = 0x009ae2f0
RTTIBaseClassDescriptor SpellResource 4                                                                            // [0x1052f8] 0x008a9000 + 0x1052f8 = 0x009ae2f8
.byte 0xf8, 0xe2, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x105310] 0x008a9000 + 0x105310 = 0x009ae310
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105320] 0x008a9000 + 0x105320 = 0x009ae320
.byte 0x05, 0x00, 0x00, 0x00, 0x10, 0xe3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105330] 0x008a9000 + 0x105330 = 0x009ae330
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xcd, 0xbe, 0x00, 0x28, 0xe3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105340] 0x008a9000 + 0x105340 = 0x009ae340
RTTIBaseClassDescriptor Graveyard 7                                                                                // [0x105350] 0x008a9000 + 0x105350 = 0x009ae350
.byte 0x50, 0xe3, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00                                                               // [0x105368] 0x008a9000 + 0x105368 = 0x009ae368
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x105370] 0x008a9000 + 0x105370 = 0x009ae370
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105380] 0x008a9000 + 0x105380 = 0x009ae380
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0xe3, 0x9a, 0x00               // [0x105390] 0x008a9000 + 0x105390 = 0x009ae390
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xcd, 0xbe, 0x00               // [0x1053a0] 0x008a9000 + 0x1053a0 = 0x009ae3a0
.byte 0x90, 0xe3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1053b0] 0x008a9000 + 0x1053b0 = 0x009ae3b0
RTTIBaseClassDescriptor ScriptTimer 3                                                                              // [0x1053b8] 0x008a9000 + 0x1053b8 = 0x009ae3b8
.byte 0xb8, 0xe3, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1053d0] 0x008a9000 + 0x1053d0 = 0x009ae3d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1053e0] 0x008a9000 + 0x1053e0 = 0x009ae3e0
.byte 0x04, 0x00, 0x00, 0x00, 0xd0, 0xe3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1053f0] 0x008a9000 + 0x1053f0 = 0x009ae3f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0xbe, 0x00, 0xe8, 0xe3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105400] 0x008a9000 + 0x105400 = 0x009ae400
RTTIBaseClassDescriptor Wonder 7                                                                                   // [0x105410] 0x008a9000 + 0x105410 = 0x009ae410
.byte 0x10, 0xe4, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00                                                               // [0x105428] 0x008a9000 + 0x105428 = 0x009ae428
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x105430] 0x008a9000 + 0x105430 = 0x009ae430
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105440] 0x008a9000 + 0x105440 = 0x009ae440
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x28, 0xe4, 0x9a, 0x00               // [0x105450] 0x008a9000 + 0x105450 = 0x009ae450
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xce, 0xbe, 0x00               // [0x105460] 0x008a9000 + 0x105460 = 0x009ae460
.byte 0x50, 0xe4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105470] 0x008a9000 + 0x105470 = 0x009ae470
RTTIBaseClassDescriptor ShowNeeds 2                                                                                // [0x105478] 0x008a9000 + 0x105478 = 0x009ae478
.byte 0x78, 0xe4, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105490] 0x008a9000 + 0x105490 = 0x009ae490
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x90, 0xe4, 0x9a, 0x00               // [0x1054a0] 0x008a9000 + 0x1054a0 = 0x009ae4a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xd5, 0x9d, 0x00               // [0x1054b0] 0x008a9000 + 0x1054b0 = 0x009ae4b0
.byte 0xa0, 0xe4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xe8, 0x9a, 0x00, 0x38, 0x64, 0x9a, 0x00               // [0x1054c0] 0x008a9000 + 0x1054c0 = 0x009ae4c0
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x1054d0] 0x008a9000 + 0x1054d0 = 0x009ae4d0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1054e0] 0x008a9000 + 0x1054e0 = 0x009ae4e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xc8, 0xe4, 0x9a, 0x00               // [0x1054f0] 0x008a9000 + 0x1054f0 = 0x009ae4f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xcf, 0xbe, 0x00               // [0x105500] 0x008a9000 + 0x105500 = 0x009ae500
.byte 0xf0, 0xe4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xe8, 0x9a, 0x00, 0xf8, 0xe7, 0x9a, 0x00               // [0x105510] 0x008a9000 + 0x105510 = 0x009ae510
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x105520] 0x008a9000 + 0x105520 = 0x009ae520
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105530] 0x008a9000 + 0x105530 = 0x009ae530
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x18, 0xe5, 0x9a, 0x00               // [0x105540] 0x008a9000 + 0x105540 = 0x009ae540
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xce, 0xbe, 0x00               // [0x105550] 0x008a9000 + 0x105550 = 0x009ae550
.byte 0x40, 0xe5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x85, 0x9a, 0x00, 0xf8, 0x84, 0x9a, 0x00               // [0x105560] 0x008a9000 + 0x105560 = 0x009ae560
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x105570] 0x008a9000 + 0x105570 = 0x009ae570
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105580] 0x008a9000 + 0x105580 = 0x009ae580
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0xe5, 0x9a, 0x00               // [0x105590] 0x008a9000 + 0x105590 = 0x009ae590
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xd3, 0x9c, 0x00               // [0x1055a0] 0x008a9000 + 0x1055a0 = 0x009ae5a0
.byte 0x90, 0xe5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1055b0] 0x008a9000 + 0x1055b0 = 0x009ae5b0
RTTIBaseClassDescriptor PlannedTownCentre 5                                                                        // [0x1055b8] 0x008a9000 + 0x1055b8 = 0x009ae5b8
.byte 0xb8, 0xe5, 0x9a, 0x00, 0xb0, 0x64, 0x9a, 0x00, 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x1055d0] 0x008a9000 + 0x1055d0 = 0x009ae5d0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1055e0] 0x008a9000 + 0x1055e0 = 0x009ae5e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xd0, 0xe5, 0x9a, 0x00               // [0x1055f0] 0x008a9000 + 0x1055f0 = 0x009ae5f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xce, 0xbe, 0x00               // [0x105600] 0x008a9000 + 0x105600 = 0x009ae600
.byte 0xf0, 0xe5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105610] 0x008a9000 + 0x105610 = 0x009ae610
RTTIBaseClassDescriptor Scaffold 6                                                                                 // [0x105618] 0x008a9000 + 0x105618 = 0x009ae618
.byte 0x18, 0xe6, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x105630] 0x008a9000 + 0x105630 = 0x009ae630
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105640] 0x008a9000 + 0x105640 = 0x009ae640
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x30, 0xe6, 0x9a, 0x00               // [0x105650] 0x008a9000 + 0x105650 = 0x009ae650
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xce, 0xbe, 0x00               // [0x105660] 0x008a9000 + 0x105660 = 0x009ae660
.byte 0x50, 0xe6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105670] 0x008a9000 + 0x105670 = 0x009ae670
RTTIBaseClassDescriptor SpellWater 4                                                                               // [0x105678] 0x008a9000 + 0x105678 = 0x009ae678
.byte 0x78, 0xe6, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x105690] 0x008a9000 + 0x105690 = 0x009ae690
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1056a0] 0x008a9000 + 0x1056a0 = 0x009ae6a0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0xe6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1056b0] 0x008a9000 + 0x1056b0 = 0x009ae6b0
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0xce, 0xbe, 0x00, 0xa8, 0xe6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1056c0] 0x008a9000 + 0x1056c0 = 0x009ae6c0
RTTIBaseClassDescriptor ShowNeedsVisuals 4                                                                         // [0x1056d0] 0x008a9000 + 0x1056d0 = 0x009ae6d0
.byte 0xd0, 0xe6, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00                                                               // [0x1056e8] 0x008a9000 + 0x1056e8 = 0x009ae6e8
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1056f0] 0x008a9000 + 0x1056f0 = 0x009ae6f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe8, 0xe6, 0x9a, 0x00               // [0x105700] 0x008a9000 + 0x105700 = 0x009ae700
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x96, 0x9d, 0x00               // [0x105710] 0x008a9000 + 0x105710 = 0x009ae710
.byte 0x00, 0xe7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105720] 0x008a9000 + 0x105720 = 0x009ae720
RTTIBaseClassDescriptor Spell 3                                                                                    // [0x105728] 0x008a9000 + 0x105728 = 0x009ae728
RTTIBaseClassDescriptor SpellForest 4                                                                              // [0x105740] 0x008a9000 + 0x105740 = 0x009ae740
.byte 0x40, 0xe7, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00                                                               // [0x105758] 0x008a9000 + 0x105758 = 0x009ae758
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105760] 0x008a9000 + 0x105760 = 0x009ae760
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0xe7, 0x9a, 0x00               // [0x105770] 0x008a9000 + 0x105770 = 0x009ae770
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xce, 0xbe, 0x00               // [0x105780] 0x008a9000 + 0x105780 = 0x009ae780
.byte 0x70, 0xe7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105790] 0x008a9000 + 0x105790 = 0x009ae790
RTTIBaseClassDescriptor TotemStatue 6                                                                              // [0x105798] 0x008a9000 + 0x105798 = 0x009ae798
.byte 0x98, 0xe7, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x1057b0] 0x008a9000 + 0x1057b0 = 0x009ae7b0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1057c0] 0x008a9000 + 0x1057c0 = 0x009ae7c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, 0xe7, 0x9a, 0x00               // [0x1057d0] 0x008a9000 + 0x1057d0 = 0x009ae7d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xd5, 0x9d, 0x00               // [0x1057e0] 0x008a9000 + 0x1057e0 = 0x009ae7e0
.byte 0xd0, 0xe7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1057f0] 0x008a9000 + 0x1057f0 = 0x009ae7f0
RTTIBaseClassDescriptor SpellIcon 6                                                                                // [0x1057f8] 0x008a9000 + 0x1057f8 = 0x009ae7f8
RTTIBaseClassDescriptor TownSpellIcon 7                                                                            // [0x105810] 0x008a9000 + 0x105810 = 0x009ae810
RTTIBaseClassDescriptor TownCentreSpellIcon 8                                                                      // [0x105828] 0x008a9000 + 0x105828 = 0x009ae828
.byte 0x28, 0xe8, 0x9a, 0x00, 0x10, 0xe8, 0x9a, 0x00, 0xf8, 0xe7, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00               // [0x105840] 0x008a9000 + 0x105840 = 0x009ae840
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x105850] 0x008a9000 + 0x105850 = 0x009ae850
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105860] 0x008a9000 + 0x105860 = 0x009ae860
.byte 0x09, 0x00, 0x00, 0x00, 0x40, 0xe8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105870] 0x008a9000 + 0x105870 = 0x009ae870
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xce, 0xbe, 0x00, 0x68, 0xe8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105880] 0x008a9000 + 0x105880 = 0x009ae880
RTTIBaseClassDescriptor ScriptMarker 3                                                                             // [0x105890] 0x008a9000 + 0x105890 = 0x009ae890
.byte 0x90, 0xe8, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x1058a8] 0x008a9000 + 0x1058a8 = 0x009ae8a8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1058b0] 0x008a9000 + 0x1058b0 = 0x009ae8b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0xe8, 0x9a, 0x00               // [0x1058c0] 0x008a9000 + 0x1058c0 = 0x009ae8c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xcf, 0xbe, 0x00               // [0x1058d0] 0x008a9000 + 0x1058d0 = 0x009ae8d0
.byte 0xc0, 0xe8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1058e0] 0x008a9000 + 0x1058e0 = 0x009ae8e0
RTTIBaseClassDescriptor Totem 7                                                                                    // [0x1058e8] 0x008a9000 + 0x1058e8 = 0x009ae8e8
RTTIBaseClassDescriptor PuzzleTotem 8                                                                              // [0x105900] 0x008a9000 + 0x105900 = 0x009ae900
.byte 0x00, 0xe9, 0x9a, 0x00, 0xe8, 0xe8, 0x9a, 0x00                                                               // [0x105918] 0x008a9000 + 0x105918 = 0x009ae918
.byte 0x38, 0x64, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x105920] 0x008a9000 + 0x105920 = 0x009ae920
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105930] 0x008a9000 + 0x105930 = 0x009ae930
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x18, 0xe9, 0x9a, 0x00               // [0x105940] 0x008a9000 + 0x105940 = 0x009ae940
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x67, 0xbe, 0x00               // [0x105950] 0x008a9000 + 0x105950 = 0x009ae950
.byte 0x40, 0xe9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x105960] 0x008a9000 + 0x105960 = 0x009ae960
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105970] 0x008a9000 + 0x105970 = 0x009ae970
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0xe9, 0x9a, 0x00               // [0x105980] 0x008a9000 + 0x105980 = 0x009ae980
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x7f, 0x9c, 0x00               // [0x105990] 0x008a9000 + 0x105990 = 0x009ae990
.byte 0x80, 0xe9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xe7, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00               // [0x1059a0] 0x008a9000 + 0x1059a0 = 0x009ae9a0
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1059b0] 0x008a9000 + 0x1059b0 = 0x009ae9b0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1059c0] 0x008a9000 + 0x1059c0 = 0x009ae9c0
.byte 0x07, 0x00, 0x00, 0x00, 0xa8, 0xe9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1059d0] 0x008a9000 + 0x1059d0 = 0x009ae9d0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xce, 0xbe, 0x00, 0xc8, 0xe9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1059e0] 0x008a9000 + 0x1059e0 = 0x009ae9e0
.byte 0xd8, 0xdb, 0x9a, 0x00, 0xc0, 0xdb, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0x1059f0] 0x008a9000 + 0x1059f0 = 0x009ae9f0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x105a00] 0x008a9000 + 0x105a00 = 0x009aea00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105a10] 0x008a9000 + 0x105a10 = 0x009aea10
.byte 0x08, 0x00, 0x00, 0x00, 0xf0, 0xe9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105a20] 0x008a9000 + 0x105a20 = 0x009aea20
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xcb, 0xbe, 0x00, 0x18, 0xea, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105a30] 0x008a9000 + 0x105a30 = 0x009aea30
RTTIBaseClassDescriptor GBaseOnly 4                                                                                // [0x105a40] 0x008a9000 + 0x105a40 = 0x009aea40
.byte 0x40, 0xea, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00                                                               // [0x105a58] 0x008a9000 + 0x105a58 = 0x009aea58
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105a60] 0x008a9000 + 0x105a60 = 0x009aea60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0xea, 0x9a, 0x00               // [0x105a70] 0x008a9000 + 0x105a70 = 0x009aea70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xd2, 0xbe, 0x00               // [0x105a80] 0x008a9000 + 0x105a80 = 0x009aea80
.byte 0x70, 0xea, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105a90] 0x008a9000 + 0x105a90 = 0x009aea90
RTTIBaseClassDescriptor VortexObjectInfo 3                                                                         // [0x105a98] 0x008a9000 + 0x105a98 = 0x009aea98
.byte 0x98, 0xea, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x105ab0] 0x008a9000 + 0x105ab0 = 0x009aeab0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105ac0] 0x008a9000 + 0x105ac0 = 0x009aeac0
.byte 0x04, 0x00, 0x00, 0x00, 0xb0, 0xea, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105ad0] 0x008a9000 + 0x105ad0 = 0x009aead0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xd2, 0xbe, 0x00, 0xc8, 0xea, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105ae0] 0x008a9000 + 0x105ae0 = 0x009aeae0
RTTIBaseClassDescriptor GClimate 2                                                                                 // [0x105af0] 0x008a9000 + 0x105af0 = 0x009aeaf0
.byte 0xf0, 0xea, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x105b08] 0x008a9000 + 0x105b08 = 0x009aeb08
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105b10] 0x008a9000 + 0x105b10 = 0x009aeb10
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0xeb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105b20] 0x008a9000 + 0x105b20 = 0x009aeb20
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xd3, 0xbe, 0x00, 0x18, 0xeb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105b30] 0x008a9000 + 0x105b30 = 0x009aeb30
RTTIBaseClassDescriptor PlayerSubActionArgument 2                                                                  // [0x105b40] 0x008a9000 + 0x105b40 = 0x009aeb40
.byte 0x40, 0xeb, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x105b58] 0x008a9000 + 0x105b58 = 0x009aeb58
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105b60] 0x008a9000 + 0x105b60 = 0x009aeb60
.byte 0x03, 0x00, 0x00, 0x00, 0x58, 0xeb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105b70] 0x008a9000 + 0x105b70 = 0x009aeb70
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0xd3, 0xbe, 0x00, 0x68, 0xeb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105b80] 0x008a9000 + 0x105b80 = 0x009aeb80
RTTIBaseClassDescriptor PlayerSubAction 2                                                                          // [0x105b90] 0x008a9000 + 0x105b90 = 0x009aeb90
.byte 0x90, 0xeb, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x105ba8] 0x008a9000 + 0x105ba8 = 0x009aeba8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105bb0] 0x008a9000 + 0x105bb0 = 0x009aebb0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0xeb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105bc0] 0x008a9000 + 0x105bc0 = 0x009aebc0
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xd4, 0xbe, 0x00, 0xb8, 0xeb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105bd0] 0x008a9000 + 0x105bd0 = 0x009aebd0
RTTIBaseClassDescriptor PlayerActionState 3                                                                        // [0x105be0] 0x008a9000 + 0x105be0 = 0x009aebe0
.byte 0xe0, 0xeb, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x105bf8] 0x008a9000 + 0x105bf8 = 0x009aebf8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105c00] 0x008a9000 + 0x105c00 = 0x009aec00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0xeb, 0x9a, 0x00               // [0x105c10] 0x008a9000 + 0x105c10 = 0x009aec10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xd4, 0xbe, 0x00               // [0x105c20] 0x008a9000 + 0x105c20 = 0x009aec20
.byte 0x10, 0xec, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105c30] 0x008a9000 + 0x105c30 = 0x009aec30
RTTIBaseClassDescriptor GComputerAttitudeToPlayer 2                                                                // [0x105c38] 0x008a9000 + 0x105c38 = 0x009aec38
.byte 0x38, 0xec, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105c50] 0x008a9000 + 0x105c50 = 0x009aec50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0xec, 0x9a, 0x00               // [0x105c60] 0x008a9000 + 0x105c60 = 0x009aec60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0xd4, 0xbe, 0x00               // [0x105c70] 0x008a9000 + 0x105c70 = 0x009aec70
.byte 0x60, 0xec, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105c80] 0x008a9000 + 0x105c80 = 0x009aec80
RTTIBaseClassDescriptor PSysInterface 3                                                                            // [0x105c88] 0x008a9000 + 0x105c88 = 0x009aec88
RTTIBaseClassDescriptor GJPSysInterface 4                                                                          // [0x105ca0] 0x008a9000 + 0x105ca0 = 0x009aeca0
.byte 0xa0, 0xec, 0x9a, 0x00, 0x88, 0xec, 0x9a, 0x00                                                               // [0x105cb8] 0x008a9000 + 0x105cb8 = 0x009aecb8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105cc0] 0x008a9000 + 0x105cc0 = 0x009aecc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xb8, 0xec, 0x9a, 0x00               // [0x105cd0] 0x008a9000 + 0x105cd0 = 0x009aecd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xd5, 0xbe, 0x00               // [0x105ce0] 0x008a9000 + 0x105ce0 = 0x009aece0
.byte 0xd0, 0xec, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xec, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00               // [0x105cf0] 0x008a9000 + 0x105cf0 = 0x009aecf0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105d00] 0x008a9000 + 0x105d00 = 0x009aed00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0xec, 0x9a, 0x00               // [0x105d10] 0x008a9000 + 0x105d10 = 0x009aed10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xbe, 0x00               // [0x105d20] 0x008a9000 + 0x105d20 = 0x009aed20
.byte 0x10, 0xed, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105d30] 0x008a9000 + 0x105d30 = 0x009aed30
RTTIBaseClassDescriptor RenderParticle 3                                                                           // [0x105d38] 0x008a9000 + 0x105d38 = 0x009aed38
RTTIBaseClassDescriptor Particle3DPnt 4                                                                            // [0x105d50] 0x008a9000 + 0x105d50 = 0x009aed50
.byte 0x50, 0xed, 0x9a, 0x00, 0x38, 0xed, 0x9a, 0x00                                                               // [0x105d68] 0x008a9000 + 0x105d68 = 0x009aed68
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105d70] 0x008a9000 + 0x105d70 = 0x009aed70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x68, 0xed, 0x9a, 0x00               // [0x105d80] 0x008a9000 + 0x105d80 = 0x009aed80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xd5, 0xbe, 0x00               // [0x105d90] 0x008a9000 + 0x105d90 = 0x009aed90
.byte 0x80, 0xed, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00               // [0x105da0] 0x008a9000 + 0x105da0 = 0x009aeda0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105db0] 0x008a9000 + 0x105db0 = 0x009aedb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0xed, 0x9a, 0x00               // [0x105dc0] 0x008a9000 + 0x105dc0 = 0x009aedc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xd5, 0xbe, 0x00               // [0x105dd0] 0x008a9000 + 0x105dd0 = 0x009aedd0
.byte 0xc0, 0xed, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105de0] 0x008a9000 + 0x105de0 = 0x009aede0
RTTIBaseClassDescriptor RenderParticleGameObjectRef 4                                                              // [0x105de8] 0x008a9000 + 0x105de8 = 0x009aede8
RTTIBaseClassDescriptor RenderParticleGoldenShower 5                                                               // [0x105e00] 0x008a9000 + 0x105e00 = 0x009aee00
.byte 0x00, 0xee, 0x9a, 0x00, 0xe8, 0xed, 0x9a, 0x00                                                               // [0x105e18] 0x008a9000 + 0x105e18 = 0x009aee18
.byte 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x105e20] 0x008a9000 + 0x105e20 = 0x009aee20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105e30] 0x008a9000 + 0x105e30 = 0x009aee30
.byte 0x06, 0x00, 0x00, 0x00, 0x18, 0xee, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105e40] 0x008a9000 + 0x105e40 = 0x009aee40
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xd5, 0xbe, 0x00, 0x38, 0xee, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105e50] 0x008a9000 + 0x105e50 = 0x009aee50
RTTIBaseClassDescriptor Particle3DSprite 4                                                                         // [0x105e60] 0x008a9000 + 0x105e60 = 0x009aee60
.byte 0x60, 0xee, 0x9a, 0x00, 0x38, 0xed, 0x9a, 0x00                                                               // [0x105e78] 0x008a9000 + 0x105e78 = 0x009aee78
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105e80] 0x008a9000 + 0x105e80 = 0x009aee80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x78, 0xee, 0x9a, 0x00               // [0x105e90] 0x008a9000 + 0x105e90 = 0x009aee90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xd5, 0xbe, 0x00               // [0x105ea0] 0x008a9000 + 0x105ea0 = 0x009aeea0
.byte 0x90, 0xee, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x105eb0] 0x008a9000 + 0x105eb0 = 0x009aeeb0
RTTIBaseClassDescriptor ParticleChainJoint 4                                                                       // [0x105eb8] 0x008a9000 + 0x105eb8 = 0x009aeeb8
.byte 0xb8, 0xee, 0x9a, 0x00, 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x105ed0] 0x008a9000 + 0x105ed0 = 0x009aeed0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105ee0] 0x008a9000 + 0x105ee0 = 0x009aeee0
.byte 0x05, 0x00, 0x00, 0x00, 0xd0, 0xee, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105ef0] 0x008a9000 + 0x105ef0 = 0x009aeef0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0xbe, 0x00, 0xe8, 0xee, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105f00] 0x008a9000 + 0x105f00 = 0x009aef00
RTTIBaseClassDescriptor BaseAtomModifierData 3                                                                     // [0x105f10] 0x008a9000 + 0x105f10 = 0x009aef10
RTTIBaseClassDescriptor AtomData@UR_SimpleBeam 4                                                                   // [0x105f28] 0x008a9000 + 0x105f28 = 0x009aef28
.byte 0x28, 0xef, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x105f40] 0x008a9000 + 0x105f40 = 0x009aef40
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105f50] 0x008a9000 + 0x105f50 = 0x009aef50
.byte 0x05, 0x00, 0x00, 0x00, 0x40, 0xef, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105f60] 0x008a9000 + 0x105f60 = 0x009aef60
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xd6, 0xbe, 0x00, 0x58, 0xef, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105f70] 0x008a9000 + 0x105f70 = 0x009aef70
RTTIBaseClassDescriptor BaseCollectionModifierData 3                                                               // [0x105f80] 0x008a9000 + 0x105f80 = 0x009aef80
RTTIBaseClassDescriptor SubCollectionData@UR_SimpleBeam 4                                                          // [0x105f98] 0x008a9000 + 0x105f98 = 0x009aef98
.byte 0x98, 0xef, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x105fb0] 0x008a9000 + 0x105fb0 = 0x009aefb0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105fc0] 0x008a9000 + 0x105fc0 = 0x009aefc0
.byte 0x05, 0x00, 0x00, 0x00, 0xb0, 0xef, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105fd0] 0x008a9000 + 0x105fd0 = 0x009aefd0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xd6, 0xbe, 0x00, 0xc8, 0xef, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x105fe0] 0x008a9000 + 0x105fe0 = 0x009aefe0
.byte 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x105ff0] 0x008a9000 + 0x105ff0 = 0x009aeff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106000] 0x008a9000 + 0x106000 = 0x009af000
.byte 0x04, 0x00, 0x00, 0x00, 0xf0, 0xef, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106010] 0x008a9000 + 0x106010 = 0x009af010
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xd6, 0xbe, 0x00, 0x08, 0xf0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106020] 0x008a9000 + 0x106020 = 0x009af020
.byte 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x106030] 0x008a9000 + 0x106030 = 0x009af030
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106040] 0x008a9000 + 0x106040 = 0x009af040
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0xf0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106050] 0x008a9000 + 0x106050 = 0x009af050
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xd6, 0xbe, 0x00, 0x48, 0xf0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106060] 0x008a9000 + 0x106060 = 0x009af060
RTTIBaseClassDescriptor SubCollectionData@UR_Plasma 4                                                              // [0x106070] 0x008a9000 + 0x106070 = 0x009af070
.byte 0x70, 0xf0, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106088] 0x008a9000 + 0x106088 = 0x009af088
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106090] 0x008a9000 + 0x106090 = 0x009af090
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x88, 0xf0, 0x9a, 0x00               // [0x1060a0] 0x008a9000 + 0x1060a0 = 0x009af0a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xd6, 0xbe, 0x00               // [0x1060b0] 0x008a9000 + 0x1060b0 = 0x009af0b0
.byte 0xa0, 0xf0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1060c0] 0x008a9000 + 0x1060c0 = 0x009af0c0
RTTIBaseClassDescriptor AtomData@UR_Plasma 4                                                                       // [0x1060c8] 0x008a9000 + 0x1060c8 = 0x009af0c8
.byte 0xc8, 0xf0, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1060e0] 0x008a9000 + 0x1060e0 = 0x009af0e0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1060f0] 0x008a9000 + 0x1060f0 = 0x009af0f0
.byte 0x05, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106100] 0x008a9000 + 0x106100 = 0x009af100
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0xd7, 0xbe, 0x00, 0xf8, 0xf0, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106110] 0x008a9000 + 0x106110 = 0x009af110
RTTIBaseClassDescriptor SpellPointInf 3                                                                            // [0x106120] 0x008a9000 + 0x106120 = 0x009af120
.byte 0x20, 0xf1, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00                                                               // [0x106138] 0x008a9000 + 0x106138 = 0x009af138
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106140] 0x008a9000 + 0x106140 = 0x009af140
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0xf1, 0x9a, 0x00               // [0x106150] 0x008a9000 + 0x106150 = 0x009af150
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xd7, 0xbe, 0x00               // [0x106160] 0x008a9000 + 0x106160 = 0x009af160
.byte 0x50, 0xf1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106170] 0x008a9000 + 0x106170 = 0x009af170
RTTIBaseClassDescriptor AtomData@UR_ManaPathNew 4                                                                  // [0x106178] 0x008a9000 + 0x106178 = 0x009af178
.byte 0x78, 0xf1, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106190] 0x008a9000 + 0x106190 = 0x009af190
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1061a0] 0x008a9000 + 0x1061a0 = 0x009af1a0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0xf1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1061b0] 0x008a9000 + 0x1061b0 = 0x009af1b0
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xd7, 0xbe, 0x00, 0xa8, 0xf1, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1061c0] 0x008a9000 + 0x1061c0 = 0x009af1c0
RTTIBaseClassDescriptor AtomData@UR_BeliefSprite 4                                                                 // [0x1061d0] 0x008a9000 + 0x1061d0 = 0x009af1d0
.byte 0xd0, 0xf1, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x1061e8] 0x008a9000 + 0x1061e8 = 0x009af1e8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1061f0] 0x008a9000 + 0x1061f0 = 0x009af1f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe8, 0xf1, 0x9a, 0x00               // [0x106200] 0x008a9000 + 0x106200 = 0x009af200
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xd7, 0xbe, 0x00               // [0x106210] 0x008a9000 + 0x106210 = 0x009af210
.byte 0x00, 0xf2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106220] 0x008a9000 + 0x106220 = 0x009af220
RTTIBaseClassDescriptor CollectionData@UR_LightSheetOnObject 4                                                     // [0x106228] 0x008a9000 + 0x106228 = 0x009af228
.byte 0x28, 0xf2, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106240] 0x008a9000 + 0x106240 = 0x009af240
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106250] 0x008a9000 + 0x106250 = 0x009af250
.byte 0x05, 0x00, 0x00, 0x00, 0x40, 0xf2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106260] 0x008a9000 + 0x106260 = 0x009af260
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0xd7, 0xbe, 0x00, 0x58, 0xf2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106270] 0x008a9000 + 0x106270 = 0x009af270
RTTIBaseClassDescriptor AtomData@AR_FadeOutOnceConditionTrue 4                                                     // [0x106280] 0x008a9000 + 0x106280 = 0x009af280
.byte 0x80, 0xf2, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106298] 0x008a9000 + 0x106298 = 0x009af298
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1062a0] 0x008a9000 + 0x1062a0 = 0x009af2a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x98, 0xf2, 0x9a, 0x00               // [0x1062b0] 0x008a9000 + 0x1062b0 = 0x009af2b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xd7, 0xbe, 0x00               // [0x1062c0] 0x008a9000 + 0x1062c0 = 0x009af2c0
.byte 0xb0, 0xf2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1062d0] 0x008a9000 + 0x1062d0 = 0x009af2d0
RTTIBaseClassDescriptor AtomData@AddSoundToAtom 4                                                                  // [0x1062d8] 0x008a9000 + 0x1062d8 = 0x009af2d8
.byte 0xd8, 0xf2, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1062f0] 0x008a9000 + 0x1062f0 = 0x009af2f0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106300] 0x008a9000 + 0x106300 = 0x009af300
.byte 0x05, 0x00, 0x00, 0x00, 0xf0, 0xf2, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106310] 0x008a9000 + 0x106310 = 0x009af310
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xd8, 0xbe, 0x00, 0x08, 0xf3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106320] 0x008a9000 + 0x106320 = 0x009af320
RTTIBaseClassDescriptor AtomData@RemoveSoundFromAtom 4                                                             // [0x106330] 0x008a9000 + 0x106330 = 0x009af330
.byte 0x30, 0xf3, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106348] 0x008a9000 + 0x106348 = 0x009af348
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106350] 0x008a9000 + 0x106350 = 0x009af350
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x48, 0xf3, 0x9a, 0x00               // [0x106360] 0x008a9000 + 0x106360 = 0x009af360
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xd8, 0xbe, 0x00               // [0x106370] 0x008a9000 + 0x106370 = 0x009af370
.byte 0x60, 0xf3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106380] 0x008a9000 + 0x106380 = 0x009af380
RTTIBaseClassDescriptor AtomData@AttatchFireBallToAtom 4                                                           // [0x106388] 0x008a9000 + 0x106388 = 0x009af388
.byte 0x88, 0xf3, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1063a0] 0x008a9000 + 0x1063a0 = 0x009af3a0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1063b0] 0x008a9000 + 0x1063b0 = 0x009af3b0
.byte 0x05, 0x00, 0x00, 0x00, 0xa0, 0xf3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1063c0] 0x008a9000 + 0x1063c0 = 0x009af3c0
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xd8, 0xbe, 0x00, 0xb8, 0xf3, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1063d0] 0x008a9000 + 0x1063d0 = 0x009af3d0
RTTIBaseClassDescriptor AtomDataRipple@UpdateRuleGravityWithFloor 4                                                // [0x1063e0] 0x008a9000 + 0x1063e0 = 0x009af3e0
.byte 0xe0, 0xf3, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x1063f8] 0x008a9000 + 0x1063f8 = 0x009af3f8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106400] 0x008a9000 + 0x106400 = 0x009af400
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0xf3, 0x9a, 0x00               // [0x106410] 0x008a9000 + 0x106410 = 0x009af410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xd8, 0xbe, 0x00               // [0x106420] 0x008a9000 + 0x106420 = 0x009af420
.byte 0x10, 0xf4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106430] 0x008a9000 + 0x106430 = 0x009af430
RTTIBaseClassDescriptor AtomData@UR_BankedTurning 4                                                                // [0x106438] 0x008a9000 + 0x106438 = 0x009af438
.byte 0x38, 0xf4, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106450] 0x008a9000 + 0x106450 = 0x009af450
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106460] 0x008a9000 + 0x106460 = 0x009af460
.byte 0x05, 0x00, 0x00, 0x00, 0x50, 0xf4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106470] 0x008a9000 + 0x106470 = 0x009af470
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0xd8, 0xbe, 0x00, 0x68, 0xf4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106480] 0x008a9000 + 0x106480 = 0x009af480
RTTIBaseClassDescriptor CollectionData@UR_HandSprinkle 4                                                           // [0x106490] 0x008a9000 + 0x106490 = 0x009af490
.byte 0x90, 0xf4, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x1064a8] 0x008a9000 + 0x1064a8 = 0x009af4a8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1064b0] 0x008a9000 + 0x1064b0 = 0x009af4b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0xf4, 0x9a, 0x00               // [0x1064c0] 0x008a9000 + 0x1064c0 = 0x009af4c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xd8, 0xbe, 0x00               // [0x1064d0] 0x008a9000 + 0x1064d0 = 0x009af4d0
.byte 0xc0, 0xf4, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1064e0] 0x008a9000 + 0x1064e0 = 0x009af4e0
RTTIBaseClassDescriptor CollectionData@UR_AddDefensiveSphere 4                                                     // [0x1064e8] 0x008a9000 + 0x1064e8 = 0x009af4e8
.byte 0xe8, 0xf4, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106500] 0x008a9000 + 0x106500 = 0x009af500
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106510] 0x008a9000 + 0x106510 = 0x009af510
.byte 0x05, 0x00, 0x00, 0x00, 0x00, 0xf5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106520] 0x008a9000 + 0x106520 = 0x009af520
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xd9, 0xbe, 0x00, 0x18, 0xf5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106530] 0x008a9000 + 0x106530 = 0x009af530
RTTIBaseClassDescriptor AtomData@UpdateRuleShieldSpark 4                                                           // [0x106540] 0x008a9000 + 0x106540 = 0x009af540
.byte 0x40, 0xf5, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106558] 0x008a9000 + 0x106558 = 0x009af558
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106560] 0x008a9000 + 0x106560 = 0x009af560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0xf5, 0x9a, 0x00               // [0x106570] 0x008a9000 + 0x106570 = 0x009af570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xd9, 0xbe, 0x00               // [0x106580] 0x008a9000 + 0x106580 = 0x009af580
.byte 0x70, 0xf5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106590] 0x008a9000 + 0x106590 = 0x009af590
RTTIBaseClassDescriptor AtomData@UR_SphereSurfaceTracer 4                                                          // [0x106598] 0x008a9000 + 0x106598 = 0x009af598
.byte 0x98, 0xf5, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1065b0] 0x008a9000 + 0x1065b0 = 0x009af5b0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1065c0] 0x008a9000 + 0x1065c0 = 0x009af5c0
.byte 0x05, 0x00, 0x00, 0x00, 0xb0, 0xf5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1065d0] 0x008a9000 + 0x1065d0 = 0x009af5d0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xd9, 0xbe, 0x00, 0xc8, 0xf5, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1065e0] 0x008a9000 + 0x1065e0 = 0x009af5e0
RTTIBaseClassDescriptor AtomData@UR_ForestPath 4                                                                   // [0x1065f0] 0x008a9000 + 0x1065f0 = 0x009af5f0
.byte 0xf0, 0xf5, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106608] 0x008a9000 + 0x106608 = 0x009af608
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106610] 0x008a9000 + 0x106610 = 0x009af610
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0xf6, 0x9a, 0x00               // [0x106620] 0x008a9000 + 0x106620 = 0x009af620
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd9, 0xbe, 0x00               // [0x106630] 0x008a9000 + 0x106630 = 0x009af630
.byte 0x20, 0xf6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106640] 0x008a9000 + 0x106640 = 0x009af640
RTTIBaseClassDescriptor AtomData@UR_VapourEndEffect 4                                                              // [0x106648] 0x008a9000 + 0x106648 = 0x009af648
.byte 0x48, 0xf6, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106660] 0x008a9000 + 0x106660 = 0x009af660
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106670] 0x008a9000 + 0x106670 = 0x009af670
.byte 0x05, 0x00, 0x00, 0x00, 0x60, 0xf6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106680] 0x008a9000 + 0x106680 = 0x009af680
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xd9, 0xbe, 0x00, 0x78, 0xf6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106690] 0x008a9000 + 0x106690 = 0x009af690
RTTIBaseClassDescriptor AtomData@AddSubCollectionsToAtom 4                                                         // [0x1066a0] 0x008a9000 + 0x1066a0 = 0x009af6a0
.byte 0xa0, 0xf6, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x1066b8] 0x008a9000 + 0x1066b8 = 0x009af6b8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1066c0] 0x008a9000 + 0x1066c0 = 0x009af6c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xb8, 0xf6, 0x9a, 0x00               // [0x1066d0] 0x008a9000 + 0x1066d0 = 0x009af6d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xda, 0xbe, 0x00               // [0x1066e0] 0x008a9000 + 0x1066e0 = 0x009af6e0
.byte 0xd0, 0xf6, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1066f0] 0x008a9000 + 0x1066f0 = 0x009af6f0
RTTIBaseClassDescriptor AtomData@CreateNewBaseAtom 4                                                               // [0x1066f8] 0x008a9000 + 0x1066f8 = 0x009af6f8
.byte 0xf8, 0xf6, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106710] 0x008a9000 + 0x106710 = 0x009af710
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106720] 0x008a9000 + 0x106720 = 0x009af720
.byte 0x05, 0x00, 0x00, 0x00, 0x10, 0xf7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106730] 0x008a9000 + 0x106730 = 0x009af730
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xda, 0xbe, 0x00, 0x28, 0xf7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106740] 0x008a9000 + 0x106740 = 0x009af740
RTTIBaseClassDescriptor AtomData@CheckShieldDeflections 4                                                          // [0x106750] 0x008a9000 + 0x106750 = 0x009af750
.byte 0x50, 0xf7, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106768] 0x008a9000 + 0x106768 = 0x009af768
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106770] 0x008a9000 + 0x106770 = 0x009af770
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x68, 0xf7, 0x9a, 0x00               // [0x106780] 0x008a9000 + 0x106780 = 0x009af780
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xda, 0xbe, 0x00               // [0x106790] 0x008a9000 + 0x106790 = 0x009af790
.byte 0x80, 0xf7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1067a0] 0x008a9000 + 0x1067a0 = 0x009af7a0
RTTIBaseClassDescriptor CollectionData@EmitterRule 4                                                               // [0x1067a8] 0x008a9000 + 0x1067a8 = 0x009af7a8
.byte 0xa8, 0xf7, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1067c0] 0x008a9000 + 0x1067c0 = 0x009af7c0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1067d0] 0x008a9000 + 0x1067d0 = 0x009af7d0
.byte 0x05, 0x00, 0x00, 0x00, 0xc0, 0xf7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1067e0] 0x008a9000 + 0x1067e0 = 0x009af7e0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xda, 0xbe, 0x00, 0xd8, 0xf7, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1067f0] 0x008a9000 + 0x1067f0 = 0x009af7f0
RTTIBaseClassDescriptor CollectionData@EmitterRuleLightningSprite 4                                                // [0x106800] 0x008a9000 + 0x106800 = 0x009af800
.byte 0x00, 0xf8, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106818] 0x008a9000 + 0x106818 = 0x009af818
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106820] 0x008a9000 + 0x106820 = 0x009af820
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0xf8, 0x9a, 0x00               // [0x106830] 0x008a9000 + 0x106830 = 0x009af830
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xda, 0xbe, 0x00               // [0x106840] 0x008a9000 + 0x106840 = 0x009af840
.byte 0x30, 0xf8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106850] 0x008a9000 + 0x106850 = 0x009af850
RTTIBaseClassDescriptor CollectionData@UR_WillowWisp 4                                                             // [0x106858] 0x008a9000 + 0x106858 = 0x009af858
.byte 0x58, 0xf8, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106870] 0x008a9000 + 0x106870 = 0x009af870
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106880] 0x008a9000 + 0x106880 = 0x009af880
.byte 0x05, 0x00, 0x00, 0x00, 0x70, 0xf8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106890] 0x008a9000 + 0x106890 = 0x009af890
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xdb, 0xbe, 0x00, 0x88, 0xf8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1068a0] 0x008a9000 + 0x1068a0 = 0x009af8a0
RTTIBaseClassDescriptor CollectionData@ER_BurstFromParentAtom 4                                                    // [0x1068b0] 0x008a9000 + 0x1068b0 = 0x009af8b0
.byte 0xb0, 0xf8, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x1068c8] 0x008a9000 + 0x1068c8 = 0x009af8c8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1068d0] 0x008a9000 + 0x1068d0 = 0x009af8d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xc8, 0xf8, 0x9a, 0x00               // [0x1068e0] 0x008a9000 + 0x1068e0 = 0x009af8e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xdb, 0xbe, 0x00               // [0x1068f0] 0x008a9000 + 0x1068f0 = 0x009af8f0
.byte 0xe0, 0xf8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106900] 0x008a9000 + 0x106900 = 0x009af900
RTTIBaseClassDescriptor ParentAtomData@ER_GlintsOnTarget 4                                                         // [0x106908] 0x008a9000 + 0x106908 = 0x009af908
.byte 0x08, 0xf9, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106920] 0x008a9000 + 0x106920 = 0x009af920
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106930] 0x008a9000 + 0x106930 = 0x009af930
.byte 0x05, 0x00, 0x00, 0x00, 0x20, 0xf9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106940] 0x008a9000 + 0x106940 = 0x009af940
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xdb, 0xbe, 0x00, 0x38, 0xf9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106950] 0x008a9000 + 0x106950 = 0x009af950
RTTIBaseClassDescriptor AtomData@ER_GlintsOnTarget 4                                                               // [0x106960] 0x008a9000 + 0x106960 = 0x009af960
.byte 0x60, 0xf9, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106978] 0x008a9000 + 0x106978 = 0x009af978
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106980] 0x008a9000 + 0x106980 = 0x009af980
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x78, 0xf9, 0x9a, 0x00               // [0x106990] 0x008a9000 + 0x106990 = 0x009af990
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xdb, 0xbe, 0x00               // [0x1069a0] 0x008a9000 + 0x1069a0 = 0x009af9a0
.byte 0x90, 0xf9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1069b0] 0x008a9000 + 0x1069b0 = 0x009af9b0
RTTIBaseClassDescriptor CollectionData@ER_EmitFromParentAtom 4                                                     // [0x1069b8] 0x008a9000 + 0x1069b8 = 0x009af9b8
.byte 0xb8, 0xf9, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1069d0] 0x008a9000 + 0x1069d0 = 0x009af9d0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1069e0] 0x008a9000 + 0x1069e0 = 0x009af9e0
.byte 0x05, 0x00, 0x00, 0x00, 0xd0, 0xf9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1069f0] 0x008a9000 + 0x1069f0 = 0x009af9f0
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xdb, 0xbe, 0x00, 0xe8, 0xf9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106a00] 0x008a9000 + 0x106a00 = 0x009afa00
RTTIBaseClassDescriptor AtomData@UR_SideSpin 4                                                                     // [0x106a10] 0x008a9000 + 0x106a10 = 0x009afa10
.byte 0x10, 0xfa, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106a28] 0x008a9000 + 0x106a28 = 0x009afa28
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106a30] 0x008a9000 + 0x106a30 = 0x009afa30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x28, 0xfa, 0x9a, 0x00               // [0x106a40] 0x008a9000 + 0x106a40 = 0x009afa40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xdc, 0xbe, 0x00               // [0x106a50] 0x008a9000 + 0x106a50 = 0x009afa50
.byte 0x40, 0xfa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106a60] 0x008a9000 + 0x106a60 = 0x009afa60
RTTIBaseClassDescriptor AtomData@UR_InitialSpin 4                                                                  // [0x106a68] 0x008a9000 + 0x106a68 = 0x009afa68
.byte 0x68, 0xfa, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106a80] 0x008a9000 + 0x106a80 = 0x009afa80
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106a90] 0x008a9000 + 0x106a90 = 0x009afa90
.byte 0x05, 0x00, 0x00, 0x00, 0x80, 0xfa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106aa0] 0x008a9000 + 0x106aa0 = 0x009afaa0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xdc, 0xbe, 0x00, 0x98, 0xfa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106ab0] 0x008a9000 + 0x106ab0 = 0x009afab0
RTTIBaseClassDescriptor CollectionData@UR_FollowTargets 4                                                          // [0x106ac0] 0x008a9000 + 0x106ac0 = 0x009afac0
.byte 0xc0, 0xfa, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106ad8] 0x008a9000 + 0x106ad8 = 0x009afad8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106ae0] 0x008a9000 + 0x106ae0 = 0x009afae0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xd8, 0xfa, 0x9a, 0x00               // [0x106af0] 0x008a9000 + 0x106af0 = 0x009afaf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xdc, 0xbe, 0x00               // [0x106b00] 0x008a9000 + 0x106b00 = 0x009afb00
.byte 0xf0, 0xfa, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106b10] 0x008a9000 + 0x106b10 = 0x009afb10
RTTIBaseClassDescriptor AtomData@UR_FollowTargets 4                                                                // [0x106b18] 0x008a9000 + 0x106b18 = 0x009afb18
.byte 0x18, 0xfb, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106b30] 0x008a9000 + 0x106b30 = 0x009afb30
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106b40] 0x008a9000 + 0x106b40 = 0x009afb40
.byte 0x05, 0x00, 0x00, 0x00, 0x30, 0xfb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106b50] 0x008a9000 + 0x106b50 = 0x009afb50
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xdc, 0xbe, 0x00, 0x48, 0xfb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106b60] 0x008a9000 + 0x106b60 = 0x009afb60
RTTIBaseClassDescriptor CollectionData@UR_Trail 4                                                                  // [0x106b70] 0x008a9000 + 0x106b70 = 0x009afb70
.byte 0x70, 0xfb, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106b88] 0x008a9000 + 0x106b88 = 0x009afb88
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106b90] 0x008a9000 + 0x106b90 = 0x009afb90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x88, 0xfb, 0x9a, 0x00               // [0x106ba0] 0x008a9000 + 0x106ba0 = 0x009afba0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xdc, 0xbe, 0x00               // [0x106bb0] 0x008a9000 + 0x106bb0 = 0x009afbb0
.byte 0xa0, 0xfb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106bc0] 0x008a9000 + 0x106bc0 = 0x009afbc0
RTTIBaseClassDescriptor CollectionData@LightningForkFlicker 4                                                      // [0x106bc8] 0x008a9000 + 0x106bc8 = 0x009afbc8
.byte 0xc8, 0xfb, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106be0] 0x008a9000 + 0x106be0 = 0x009afbe0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106bf0] 0x008a9000 + 0x106bf0 = 0x009afbf0
.byte 0x05, 0x00, 0x00, 0x00, 0xe0, 0xfb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106c00] 0x008a9000 + 0x106c00 = 0x009afc00
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xdc, 0xbe, 0x00, 0xf8, 0xfb, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106c10] 0x008a9000 + 0x106c10 = 0x009afc10
RTTIBaseClassDescriptor AtomData@RemoveRuleAfterConditionTrue 4                                                    // [0x106c20] 0x008a9000 + 0x106c20 = 0x009afc20
.byte 0x20, 0xfc, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106c38] 0x008a9000 + 0x106c38 = 0x009afc38
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106c40] 0x008a9000 + 0x106c40 = 0x009afc40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0xfc, 0x9a, 0x00               // [0x106c50] 0x008a9000 + 0x106c50 = 0x009afc50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xdd, 0xbe, 0x00               // [0x106c60] 0x008a9000 + 0x106c60 = 0x009afc60
.byte 0x50, 0xfc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106c70] 0x008a9000 + 0x106c70 = 0x009afc70
RTTIBaseClassDescriptor AtomData@UR_OrientSpriteWithRandomAngle 4                                                  // [0x106c78] 0x008a9000 + 0x106c78 = 0x009afc78
.byte 0x78, 0xfc, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106c90] 0x008a9000 + 0x106c90 = 0x009afc90
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106ca0] 0x008a9000 + 0x106ca0 = 0x009afca0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0xfc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106cb0] 0x008a9000 + 0x106cb0 = 0x009afcb0
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xdd, 0xbe, 0x00, 0xa8, 0xfc, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106cc0] 0x008a9000 + 0x106cc0 = 0x009afcc0
RTTIBaseClassDescriptor AtomData@UR_OrientWithVelocity 4                                                           // [0x106cd0] 0x008a9000 + 0x106cd0 = 0x009afcd0
.byte 0xd0, 0xfc, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x106ce8] 0x008a9000 + 0x106ce8 = 0x009afce8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106cf0] 0x008a9000 + 0x106cf0 = 0x009afcf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe8, 0xfc, 0x9a, 0x00               // [0x106d00] 0x008a9000 + 0x106d00 = 0x009afd00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xdd, 0xbe, 0x00               // [0x106d10] 0x008a9000 + 0x106d10 = 0x009afd10
.byte 0x00, 0xfd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106d20] 0x008a9000 + 0x106d20 = 0x009afd20
RTTIBaseClassDescriptor CollectionData@UR_CreatureSpell 4                                                          // [0x106d28] 0x008a9000 + 0x106d28 = 0x009afd28
.byte 0x28, 0xfd, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106d40] 0x008a9000 + 0x106d40 = 0x009afd40
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106d50] 0x008a9000 + 0x106d50 = 0x009afd50
.byte 0x05, 0x00, 0x00, 0x00, 0x40, 0xfd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106d60] 0x008a9000 + 0x106d60 = 0x009afd60
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xdd, 0xbe, 0x00, 0x58, 0xfd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106d70] 0x008a9000 + 0x106d70 = 0x009afd70
RTTIBaseClassDescriptor CollectionData@UR_CreatureSpellItch 4                                                      // [0x106d80] 0x008a9000 + 0x106d80 = 0x009afd80
.byte 0x80, 0xfd, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106d98] 0x008a9000 + 0x106d98 = 0x009afd98
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106da0] 0x008a9000 + 0x106da0 = 0x009afda0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x98, 0xfd, 0x9a, 0x00               // [0x106db0] 0x008a9000 + 0x106db0 = 0x009afdb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xdd, 0xbe, 0x00               // [0x106dc0] 0x008a9000 + 0x106dc0 = 0x009afdc0
.byte 0xb0, 0xfd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106dd0] 0x008a9000 + 0x106dd0 = 0x009afdd0
RTTIBaseClassDescriptor CollectionData@UR_CreatureSpellFreeze 4                                                    // [0x106dd8] 0x008a9000 + 0x106dd8 = 0x009afdd8
.byte 0xd8, 0xfd, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106df0] 0x008a9000 + 0x106df0 = 0x009afdf0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106e00] 0x008a9000 + 0x106e00 = 0x009afe00
.byte 0x05, 0x00, 0x00, 0x00, 0xf0, 0xfd, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106e10] 0x008a9000 + 0x106e10 = 0x009afe10
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0xde, 0xbe, 0x00, 0x08, 0xfe, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106e20] 0x008a9000 + 0x106e20 = 0x009afe20
RTTIBaseClassDescriptor CollectionData@UR_CreatureSpellGeneric 4                                                   // [0x106e30] 0x008a9000 + 0x106e30 = 0x009afe30
.byte 0x30, 0xfe, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106e48] 0x008a9000 + 0x106e48 = 0x009afe48
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106e50] 0x008a9000 + 0x106e50 = 0x009afe50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x48, 0xfe, 0x9a, 0x00               // [0x106e60] 0x008a9000 + 0x106e60 = 0x009afe60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xde, 0xbe, 0x00               // [0x106e70] 0x008a9000 + 0x106e70 = 0x009afe70
.byte 0x60, 0xfe, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106e80] 0x008a9000 + 0x106e80 = 0x009afe80
RTTIBaseClassDescriptor AtomData@UR_CreatureSpellGeneric 4                                                         // [0x106e88] 0x008a9000 + 0x106e88 = 0x009afe88
.byte 0x88, 0xfe, 0x9a, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106ea0] 0x008a9000 + 0x106ea0 = 0x009afea0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106eb0] 0x008a9000 + 0x106eb0 = 0x009afeb0
.byte 0x05, 0x00, 0x00, 0x00, 0xa0, 0xfe, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106ec0] 0x008a9000 + 0x106ec0 = 0x009afec0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xde, 0xbe, 0x00, 0xb8, 0xfe, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106ed0] 0x008a9000 + 0x106ed0 = 0x009afed0
RTTIBaseClassDescriptor CollectionData@UR_CreatureSpellCompassion 4                                                // [0x106ee0] 0x008a9000 + 0x106ee0 = 0x009afee0
.byte 0xe0, 0xfe, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106ef8] 0x008a9000 + 0x106ef8 = 0x009afef8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106f00] 0x008a9000 + 0x106f00 = 0x009aff00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0xfe, 0x9a, 0x00               // [0x106f10] 0x008a9000 + 0x106f10 = 0x009aff10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xde, 0xbe, 0x00               // [0x106f20] 0x008a9000 + 0x106f20 = 0x009aff20
.byte 0x10, 0xff, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106f30] 0x008a9000 + 0x106f30 = 0x009aff30
RTTIBaseClassDescriptor CollectionData@UR_Tornado 4                                                                // [0x106f38] 0x008a9000 + 0x106f38 = 0x009aff38
.byte 0x38, 0xff, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x106f50] 0x008a9000 + 0x106f50 = 0x009aff50
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106f60] 0x008a9000 + 0x106f60 = 0x009aff60
.byte 0x05, 0x00, 0x00, 0x00, 0x50, 0xff, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106f70] 0x008a9000 + 0x106f70 = 0x009aff70
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0xde, 0xbe, 0x00, 0x68, 0xff, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106f80] 0x008a9000 + 0x106f80 = 0x009aff80
RTTIBaseClassDescriptor DebrisCollectionData@UR_Tornado 4                                                          // [0x106f90] 0x008a9000 + 0x106f90 = 0x009aff90
.byte 0x90, 0xff, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x106fa8] 0x008a9000 + 0x106fa8 = 0x009affa8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x106fb0] 0x008a9000 + 0x106fb0 = 0x009affb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0xff, 0x9a, 0x00               // [0x106fc0] 0x008a9000 + 0x106fc0 = 0x009affc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xdf, 0xbe, 0x00               // [0x106fd0] 0x008a9000 + 0x106fd0 = 0x009affd0
.byte 0xc0, 0xff, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x106fe0] 0x008a9000 + 0x106fe0 = 0x009affe0
RTTIBaseClassDescriptor FlyingCollectionData@UR_Tornado 4                                                          // [0x106fe8] 0x008a9000 + 0x106fe8 = 0x009affe8
.byte 0xe8, 0xff, 0x9a, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x107000] 0x008a9000 + 0x107000 = 0x009b0000
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107010] 0x008a9000 + 0x107010 = 0x009b0010
.byte 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107020] 0x008a9000 + 0x107020 = 0x009b0020
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xdf, 0xbe, 0x00, 0x18, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107030] 0x008a9000 + 0x107030 = 0x009b0030
RTTIBaseClassDescriptor FlyingAtomData@UR_Tornado 4                                                                // [0x107040] 0x008a9000 + 0x107040 = 0x009b0040
.byte 0x40, 0x00, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x107058] 0x008a9000 + 0x107058 = 0x009b0058
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107060] 0x008a9000 + 0x107060 = 0x009b0060
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0x00, 0x9b, 0x00               // [0x107070] 0x008a9000 + 0x107070 = 0x009b0070
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xdf, 0xbe, 0x00               // [0x107080] 0x008a9000 + 0x107080 = 0x009b0080
.byte 0x70, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107090] 0x008a9000 + 0x107090 = 0x009b0090
RTTIBaseClassDescriptor CollectionData@UR_CloudGather 4                                                            // [0x107098] 0x008a9000 + 0x107098 = 0x009b0098
.byte 0x98, 0x00, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1070b0] 0x008a9000 + 0x1070b0 = 0x009b00b0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1070c0] 0x008a9000 + 0x1070c0 = 0x009b00c0
.byte 0x05, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1070d0] 0x008a9000 + 0x1070d0 = 0x009b00d0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xdf, 0xbe, 0x00, 0xc8, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1070e0] 0x008a9000 + 0x1070e0 = 0x009b00e0
RTTIBaseClassDescriptor AtomData@UR_CloudGather 4                                                                  // [0x1070f0] 0x008a9000 + 0x1070f0 = 0x009b00f0
.byte 0xf0, 0x00, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x107108] 0x008a9000 + 0x107108 = 0x009b0108
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107110] 0x008a9000 + 0x107110 = 0x009b0110
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x01, 0x9b, 0x00               // [0x107120] 0x008a9000 + 0x107120 = 0x009b0120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xdf, 0xbe, 0x00               // [0x107130] 0x008a9000 + 0x107130 = 0x009b0130
.byte 0x20, 0x01, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107140] 0x008a9000 + 0x107140 = 0x009b0140
RTTIBaseClassDescriptor CollectionData@UR_CloudMoverNew 4                                                          // [0x107148] 0x008a9000 + 0x107148 = 0x009b0148
.byte 0x48, 0x01, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x107160] 0x008a9000 + 0x107160 = 0x009b0160
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107170] 0x008a9000 + 0x107170 = 0x009b0170
.byte 0x05, 0x00, 0x00, 0x00, 0x60, 0x01, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107180] 0x008a9000 + 0x107180 = 0x009b0180
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xbe, 0x00, 0x78, 0x01, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107190] 0x008a9000 + 0x107190 = 0x009b0190
RTTIBaseClassDescriptor AtomData@UR_VortexAttract 4                                                                // [0x1071a0] 0x008a9000 + 0x1071a0 = 0x009b01a0
.byte 0xa0, 0x01, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x1071b8] 0x008a9000 + 0x1071b8 = 0x009b01b8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1071c0] 0x008a9000 + 0x1071c0 = 0x009b01c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xb8, 0x01, 0x9b, 0x00               // [0x1071d0] 0x008a9000 + 0x1071d0 = 0x009b01d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe0, 0xbe, 0x00               // [0x1071e0] 0x008a9000 + 0x1071e0 = 0x009b01e0
.byte 0xd0, 0x01, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1071f0] 0x008a9000 + 0x1071f0 = 0x009b01f0
RTTIBaseClassDescriptor AtomData@UR_Explosion 4                                                                    // [0x1071f8] 0x008a9000 + 0x1071f8 = 0x009b01f8
.byte 0xf8, 0x01, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x107210] 0x008a9000 + 0x107210 = 0x009b0210
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107220] 0x008a9000 + 0x107220 = 0x009b0220
.byte 0x05, 0x00, 0x00, 0x00, 0x10, 0x02, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107230] 0x008a9000 + 0x107230 = 0x009b0230
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xe0, 0xbe, 0x00, 0x28, 0x02, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107240] 0x008a9000 + 0x107240 = 0x009b0240
RTTIBaseClassDescriptor AtomData@UR_OrientSpriteWithVelocity 4                                                     // [0x107250] 0x008a9000 + 0x107250 = 0x009b0250
.byte 0x50, 0x02, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x107268] 0x008a9000 + 0x107268 = 0x009b0268
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107270] 0x008a9000 + 0x107270 = 0x009b0270
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x68, 0x02, 0x9b, 0x00               // [0x107280] 0x008a9000 + 0x107280 = 0x009b0280
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe0, 0xbe, 0x00               // [0x107290] 0x008a9000 + 0x107290 = 0x009b0290
.byte 0x80, 0x02, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1072a0] 0x008a9000 + 0x1072a0 = 0x009b02a0
RTTIBaseClassDescriptor CollectionData@UR_AtomsAtEPTarget 4                                                        // [0x1072a8] 0x008a9000 + 0x1072a8 = 0x009b02a8
.byte 0xa8, 0x02, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1072c0] 0x008a9000 + 0x1072c0 = 0x009b02c0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1072d0] 0x008a9000 + 0x1072d0 = 0x009b02d0
.byte 0x05, 0x00, 0x00, 0x00, 0xc0, 0x02, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1072e0] 0x008a9000 + 0x1072e0 = 0x009b02e0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xe0, 0xbe, 0x00, 0xd8, 0x02, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1072f0] 0x008a9000 + 0x1072f0 = 0x009b02f0
RTTIBaseClassDescriptor CollectionData@UR_Flocking 4                                                               // [0x107300] 0x008a9000 + 0x107300 = 0x009b0300
.byte 0x00, 0x03, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x107318] 0x008a9000 + 0x107318 = 0x009b0318
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107320] 0x008a9000 + 0x107320 = 0x009b0320
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x03, 0x9b, 0x00               // [0x107330] 0x008a9000 + 0x107330 = 0x009b0330
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xe0, 0xbe, 0x00               // [0x107340] 0x008a9000 + 0x107340 = 0x009b0340
.byte 0x30, 0x03, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107350] 0x008a9000 + 0x107350 = 0x009b0350
RTTIBaseClassDescriptor Whale 6                                                                                    // [0x107358] 0x008a9000 + 0x107358 = 0x009b0358
.byte 0x58, 0x03, 0x9b, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x107370] 0x008a9000 + 0x107370 = 0x009b0370
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107380] 0x008a9000 + 0x107380 = 0x009b0380
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0x03, 0x9b, 0x00               // [0x107390] 0x008a9000 + 0x107390 = 0x009b0390
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xe1, 0xbe, 0x00               // [0x1073a0] 0x008a9000 + 0x1073a0 = 0x009b03a0
.byte 0x90, 0x03, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1073b0] 0x008a9000 + 0x1073b0 = 0x009b03b0
RTTIBaseClassDescriptor PuzzleMobileObject 6                                                                       // [0x1073b8] 0x008a9000 + 0x1073b8 = 0x009b03b8
.byte 0xb8, 0x03, 0x9b, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x1073d0] 0x008a9000 + 0x1073d0 = 0x009b03d0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1073e0] 0x008a9000 + 0x1073e0 = 0x009b03e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd0, 0x03, 0x9b, 0x00               // [0x1073f0] 0x008a9000 + 0x1073f0 = 0x009b03f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xe2, 0xbe, 0x00               // [0x107400] 0x008a9000 + 0x107400 = 0x009b0400
.byte 0xf0, 0x03, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107410] 0x008a9000 + 0x107410 = 0x009b0410
RTTIBaseClassDescriptor GComputerPlayerQueue 2                                                                     // [0x107418] 0x008a9000 + 0x107418 = 0x009b0418
.byte 0x18, 0x04, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107430] 0x008a9000 + 0x107430 = 0x009b0430
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x04, 0x9b, 0x00               // [0x107440] 0x008a9000 + 0x107440 = 0x009b0440
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xe2, 0xbe, 0x00               // [0x107450] 0x008a9000 + 0x107450 = 0x009b0450
.byte 0x40, 0x04, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107460] 0x008a9000 + 0x107460 = 0x009b0460
RTTIBaseClassDescriptor GameStats 2                                                                                // [0x107468] 0x008a9000 + 0x107468 = 0x009b0468
.byte 0x68, 0x04, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107480] 0x008a9000 + 0x107480 = 0x009b0480
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x80, 0x04, 0x9b, 0x00               // [0x107490] 0x008a9000 + 0x107490 = 0x009b0490
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe5, 0xbe, 0x00               // [0x1074a0] 0x008a9000 + 0x1074a0 = 0x009b04a0
.byte 0x90, 0x04, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1074b0] 0x008a9000 + 0x1074b0 = 0x009b04b0
RTTIBaseClassDescriptorStruct SetupHSBarGraph 3                                                                    // [0x1074b8] 0x008a9000 + 0x1074b8 = 0x009b04b8
.byte 0xb8, 0x04, 0x9b, 0x00, 0xe8, 0x67, 0x9a, 0x00, 0xb8, 0x65, 0x9a, 0x00, 0x70, 0x65, 0x9a, 0x00               // [0x1074d0] 0x008a9000 + 0x1074d0 = 0x009b04d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1074e0] 0x008a9000 + 0x1074e0 = 0x009b04e0
.byte 0x04, 0x00, 0x00, 0x00, 0xd0, 0x04, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1074f0] 0x008a9000 + 0x1074f0 = 0x009b04f0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xf0, 0xbe, 0x00, 0xe8, 0x04, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107500] 0x008a9000 + 0x107500 = 0x009b0500
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107510] 0x008a9000 + 0x107510 = 0x009b0510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x05, 0x9b, 0x00               // [0x107520] 0x008a9000 + 0x107520 = 0x009b0520
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x7f, 0x9c, 0x00               // [0x107530] 0x008a9000 + 0x107530 = 0x009b0530
.byte 0x20, 0x05, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107540] 0x008a9000 + 0x107540 = 0x009b0540
RTTIBaseClassDescriptorStruct SetupMP3Button 2                                                                     // [0x107548] 0x008a9000 + 0x107548 = 0x009b0548
.byte 0x48, 0x05, 0x9b, 0x00, 0xb8, 0x65, 0x9a, 0x00, 0x70, 0x65, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107560] 0x008a9000 + 0x107560 = 0x009b0560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0x05, 0x9b, 0x00               // [0x107570] 0x008a9000 + 0x107570 = 0x009b0570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xf1, 0xbe, 0x00               // [0x107580] 0x008a9000 + 0x107580 = 0x009b0580
.byte 0x70, 0x05, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107590] 0x008a9000 + 0x107590 = 0x009b0590
RTTIBaseClassDescriptorStruct SetupStaticTextNoHit 2                                                               // [0x107598] 0x008a9000 + 0x107598 = 0x009b0598
.byte 0x98, 0x05, 0x9b, 0x00, 0x78, 0x69, 0x9a, 0x00, 0x70, 0x65, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1075b0] 0x008a9000 + 0x1075b0 = 0x009b05b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xb0, 0x05, 0x9b, 0x00               // [0x1075c0] 0x008a9000 + 0x1075c0 = 0x009b05c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf1, 0xbe, 0x00               // [0x1075d0] 0x008a9000 + 0x1075d0 = 0x009b05d0
.byte 0xc0, 0x05, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1075e0] 0x008a9000 + 0x1075e0 = 0x009b05e0
.byte 0x68, 0xf6, 0xbe, 0x00, 0x02, 0x00, 0x00, 0x00                                                               // [0x1075e8] 0x008a9000 + 0x1075e8 = 0x009b05e8
.byte 0x08, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x1075f0] 0x008a9000 + 0x1075f0 = 0x009b05f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1075f8] 0x008a9000 + 0x1075f8 = 0x009b05f8
.byte 0x08, 0xf8, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107600] 0x008a9000 + 0x107600 = 0x009b0600
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xf8, 0xbe, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x107610] 0x008a9000 + 0x107610 = 0x009b0610
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00               // [0x107620] 0x008a9000 + 0x107620 = 0x009b0620
RTTIBaseClassDescriptor ?$basic_istream@DU?$char_traits@D@std@@@std 2                                              // [0x107630] 0x008a9000 + 0x107630 = 0x009b0630
RTTIBaseClassDescriptor ?$basic_iostream@DU?$char_traits@D@std@@@std 6                                             // [0x107648] 0x008a9000 + 0x107648 = 0x009b0648
RTTIBaseClassDescriptor ?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std 7                        // [0x107660] 0x008a9000 + 0x107660 = 0x009b0660
.byte 0x60, 0x06, 0x9b, 0x00, 0x48, 0x06, 0x9b, 0x00                                                               // [0x107678] 0x008a9000 + 0x107678 = 0x009b0678
.byte 0x30, 0x06, 0x9b, 0x00, 0x18, 0x06, 0x9b, 0x00, 0x00, 0x06, 0x9b, 0x00, 0xe8, 0x05, 0x9b, 0x00               // [0x107680] 0x008a9000 + 0x107680 = 0x009b0680
.byte 0x18, 0x06, 0x9b, 0x00, 0x00, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107690] 0x008a9000 + 0x107690 = 0x009b0690
.byte 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x78, 0x06, 0x9b, 0x00               // [0x1076a0] 0x008a9000 + 0x1076a0 = 0x009b06a0
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xf7, 0xbe, 0x00               // [0x1076b0] 0x008a9000 + 0x1076b0 = 0x009b06b0
.byte 0xa0, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1076c0] 0x008a9000 + 0x1076c0 = 0x009b06c0
RTTIBaseClassDescriptor ?$basic_streambuf@DU?$char_traits@D@std@@@std 0                                            // [0x1076c8] 0x008a9000 + 0x1076c8 = 0x009b06c8
RTTIBaseClassDescriptor ?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std 1                           // [0x1076e0] 0x008a9000 + 0x1076e0 = 0x009b06e0
.byte 0xe0, 0x06, 0x9b, 0x00, 0xc8, 0x06, 0x9b, 0x00                                                               // [0x1076f8] 0x008a9000 + 0x1076f8 = 0x009b06f8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107700] 0x008a9000 + 0x107700 = 0x009b0700
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107710] 0x008a9000 + 0x107710 = 0x009b0710
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xf7, 0xbe, 0x00, 0x08, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107720] 0x008a9000 + 0x107720 = 0x009b0720
RTTIBaseClassDescriptor ios_base@std 0                                                                             // [0x107730] 0x008a9000 + 0x107730 = 0x009b0730
RTTIBaseClassDescriptor ?$basic_ios@DU?$char_traits@D@std@@@std 1                                                  // [0x107748] 0x008a9000 + 0x107748 = 0x009b0748
.byte 0x48, 0x07, 0x9b, 0x00, 0x30, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107760] 0x008a9000 + 0x107760 = 0x009b0760
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x07, 0x9b, 0x00               // [0x107770] 0x008a9000 + 0x107770 = 0x009b0770
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xf8, 0xbe, 0x00               // [0x107780] 0x008a9000 + 0x107780 = 0x009b0780
.byte 0x70, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107790] 0x008a9000 + 0x107790 = 0x009b0790
RTTIBaseClassDescriptor Persistent 0                                                                               // [0x107798] 0x008a9000 + 0x107798 = 0x009b0798
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1077b0] 0x008a9000 + 0x1077b0 = 0x009b07b0
.byte 0x01, 0x00, 0x00, 0x00, 0xb0, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1077c0] 0x008a9000 + 0x1077c0 = 0x009b07c0
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0xf8, 0xbe, 0x00, 0xb8, 0x07, 0x9b, 0x00, 0x30, 0x07, 0x9b, 0x00               // [0x1077d0] 0x008a9000 + 0x1077d0 = 0x009b07d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1077e0] 0x008a9000 + 0x1077e0 = 0x009b07e0
.byte 0x01, 0x00, 0x00, 0x00, 0xdc, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1077f0] 0x008a9000 + 0x1077f0 = 0x009b07f0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0xf8, 0xbe, 0x00, 0xe8, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107800] 0x008a9000 + 0x107800 = 0x009b0800
RTTIBaseClassDescriptor exception 0                                                                                // [0x107810] 0x008a9000 + 0x107810 = 0x009b0810
RTTIBaseClassDescriptor bad_cast@std 1                                                                             // [0x107828] 0x008a9000 + 0x107828 = 0x009b0828
.byte 0x28, 0x08, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107840] 0x008a9000 + 0x107840 = 0x009b0840
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x08, 0x9b, 0x00               // [0x107850] 0x008a9000 + 0x107850 = 0x009b0850
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0xbe, 0x00               // [0x107860] 0x008a9000 + 0x107860 = 0x009b0860
.byte 0x50, 0x08, 0x9b, 0x00, 0xc8, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107870] 0x008a9000 + 0x107870 = 0x009b0870
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x74, 0x08, 0x9b, 0x00               // [0x107880] 0x008a9000 + 0x107880 = 0x009b0880
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xf7, 0xbe, 0x00               // [0x107890] 0x008a9000 + 0x107890 = 0x009b0890
.byte 0x80, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x06, 0x9b, 0x00, 0x30, 0x06, 0x9b, 0x00               // [0x1078a0] 0x008a9000 + 0x1078a0 = 0x009b08a0
.byte 0x18, 0x06, 0x9b, 0x00, 0x00, 0x06, 0x9b, 0x00, 0xe8, 0x05, 0x9b, 0x00, 0x18, 0x06, 0x9b, 0x00               // [0x1078b0] 0x008a9000 + 0x1078b0 = 0x009b08b0
.byte 0x00, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00               // [0x1078c0] 0x008a9000 + 0x1078c0 = 0x009b08c0
.byte 0x07, 0x00, 0x00, 0x00, 0xa8, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00               // [0x1078d0] 0x008a9000 + 0x1078d0 = 0x009b08d0
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0xf6, 0xbe, 0x00, 0xc8, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1078e0] 0x008a9000 + 0x1078e0 = 0x009b08e0
RTTIBaseClassDescriptor ?$basic_ostream@DU?$char_traits@D@std@@@std 2                                              // [0x1078f0] 0x008a9000 + 0x1078f0 = 0x009b08f0
.byte 0xf0, 0x08, 0x9b, 0x00, 0x18, 0x06, 0x9b, 0x00                                                               // [0x107908] 0x008a9000 + 0x107908 = 0x009b0908
.byte 0x00, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107910] 0x008a9000 + 0x107910 = 0x009b0910
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00               // [0x107920] 0x008a9000 + 0x107920 = 0x009b0920
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xf6, 0xbe, 0x00, 0x18, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107930] 0x008a9000 + 0x107930 = 0x009b0930
.byte 0x30, 0x06, 0x9b, 0x00, 0x18, 0x06, 0x9b, 0x00, 0x00, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107940] 0x008a9000 + 0x107940 = 0x009b0940
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x09, 0x9b, 0x00               // [0x107950] 0x008a9000 + 0x107950 = 0x009b0950
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xf6, 0xbe, 0x00               // [0x107960] 0x008a9000 + 0x107960 = 0x009b0960
.byte 0x50, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107970] 0x008a9000 + 0x107970 = 0x009b0970
RTTIBaseClassDescriptor facet@locale@std 0                                                                         // [0x107978] 0x008a9000 + 0x107978 = 0x009b0978
RTTIBaseClassDescriptor ?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std 1                      // [0x107990] 0x008a9000 + 0x107990 = 0x009b0990
.byte 0x90, 0x09, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00                                                               // [0x1079a8] 0x008a9000 + 0x1079a8 = 0x009b09a8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1079b0] 0x008a9000 + 0x1079b0 = 0x009b09b0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1079c0] 0x008a9000 + 0x1079c0 = 0x009b09c0
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xf9, 0xbe, 0x00, 0xb8, 0x09, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00               // [0x1079d0] 0x008a9000 + 0x1079d0 = 0x009b09d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1079e0] 0x008a9000 + 0x1079e0 = 0x009b09e0
.byte 0x01, 0x00, 0x00, 0x00, 0xdc, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1079f0] 0x008a9000 + 0x1079f0 = 0x009b09f0
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xf9, 0xbe, 0x00, 0xe8, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107a00] 0x008a9000 + 0x107a00 = 0x009b0a00
RTTIBaseClassDescriptor ?$numpunct@D@std 1                                                                         // [0x107a10] 0x008a9000 + 0x107a10 = 0x009b0a10
.byte 0x10, 0x0a, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00                                                               // [0x107a28] 0x008a9000 + 0x107a28 = 0x009b0a28
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107a30] 0x008a9000 + 0x107a30 = 0x009b0a30
.byte 0x02, 0x00, 0x00, 0x00, 0x28, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107a40] 0x008a9000 + 0x107a40 = 0x009b0a40
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xf9, 0xbe, 0x00, 0x38, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107a50] 0x008a9000 + 0x107a50 = 0x009b0a50
RTTIBaseClassDescriptor Property 0                                                                                 // [0x107a60] 0x008a9000 + 0x107a60 = 0x009b0a60
RTTIBaseClassDescriptor FloatProperty 1                                                                            // [0x107a78] 0x008a9000 + 0x107a78 = 0x009b0a78
RTTIBaseClassDescriptor FloatValueProperty 2                                                                       // [0x107a90] 0x008a9000 + 0x107a90 = 0x009b0a90
.byte 0x90, 0x0a, 0x9b, 0x00, 0x78, 0x0a, 0x9b, 0x00                                                               // [0x107aa8] 0x008a9000 + 0x107aa8 = 0x009b0aa8
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107ab0] 0x008a9000 + 0x107ab0 = 0x009b0ab0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107ac0] 0x008a9000 + 0x107ac0 = 0x009b0ac0
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0xfa, 0xbe, 0x00, 0xb8, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107ad0] 0x008a9000 + 0x107ad0 = 0x009b0ad0
RTTIBaseClassDescriptor IntegerProperty 1                                                                          // [0x107ae0] 0x008a9000 + 0x107ae0 = 0x009b0ae0
RTTIBaseClassDescriptor IntegerValueProperty 2                                                                     // [0x107af8] 0x008a9000 + 0x107af8 = 0x009b0af8
.byte 0xf8, 0x0a, 0x9b, 0x00, 0xe0, 0x0a, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107b10] 0x008a9000 + 0x107b10 = 0x009b0b10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x0b, 0x9b, 0x00               // [0x107b20] 0x008a9000 + 0x107b20 = 0x009b0b20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xfa, 0xbe, 0x00               // [0x107b30] 0x008a9000 + 0x107b30 = 0x009b0b30
.byte 0x20, 0x0b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107b40] 0x008a9000 + 0x107b40 = 0x009b0b40
RTTIBaseClassDescriptor SoundActionProperty 1                                                                      // [0x107b48] 0x008a9000 + 0x107b48 = 0x009b0b48
.byte 0x48, 0x0b, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107b60] 0x008a9000 + 0x107b60 = 0x009b0b60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x0b, 0x9b, 0x00               // [0x107b70] 0x008a9000 + 0x107b70 = 0x009b0b70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfa, 0xbe, 0x00               // [0x107b80] 0x008a9000 + 0x107b80 = 0x009b0b80
.byte 0x70, 0x0b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107b90] 0x008a9000 + 0x107b90 = 0x009b0b90
RTTIBaseClassDescriptor StringProperty 1                                                                           // [0x107b98] 0x008a9000 + 0x107b98 = 0x009b0b98
.byte 0x98, 0x0b, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107bb0] 0x008a9000 + 0x107bb0 = 0x009b0bb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb0, 0x0b, 0x9b, 0x00               // [0x107bc0] 0x008a9000 + 0x107bc0 = 0x009b0bc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xfa, 0xbe, 0x00               // [0x107bd0] 0x008a9000 + 0x107bd0 = 0x009b0bd0
.byte 0xc0, 0x0b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107be0] 0x008a9000 + 0x107be0 = 0x009b0be0
RTTIBaseClassDescriptor FileNameProperty 2                                                                         // [0x107be8] 0x008a9000 + 0x107be8 = 0x009b0be8
.byte 0xe8, 0x0b, 0x9b, 0x00, 0x98, 0x0b, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107c00] 0x008a9000 + 0x107c00 = 0x009b0c00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x9b, 0x00               // [0x107c10] 0x008a9000 + 0x107c10 = 0x009b0c10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xfb, 0xbe, 0x00               // [0x107c20] 0x008a9000 + 0x107c20 = 0x009b0c20
.byte 0x10, 0x0c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107c30] 0x008a9000 + 0x107c30 = 0x009b0c30
RTTIBaseClassDescriptor BoolProperty 1                                                                             // [0x107c38] 0x008a9000 + 0x107c38 = 0x009b0c38
.byte 0x38, 0x0c, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107c50] 0x008a9000 + 0x107c50 = 0x009b0c50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x0c, 0x9b, 0x00               // [0x107c60] 0x008a9000 + 0x107c60 = 0x009b0c60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xfb, 0xbe, 0x00               // [0x107c70] 0x008a9000 + 0x107c70 = 0x009b0c70
.byte 0x60, 0x0c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107c80] 0x008a9000 + 0x107c80 = 0x009b0c80
RTTIBaseClassDescriptor EnumProperty 1                                                                             // [0x107c88] 0x008a9000 + 0x107c88 = 0x009b0c88
RTTIBaseClassDescriptor MeshEnumProperty 2                                                                         // [0x107ca0] 0x008a9000 + 0x107ca0 = 0x009b0ca0
.byte 0xa0, 0x0c, 0x9b, 0x00, 0x88, 0x0c, 0x9b, 0x00                                                               // [0x107cb8] 0x008a9000 + 0x107cb8 = 0x009b0cb8
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107cc0] 0x008a9000 + 0x107cc0 = 0x009b0cc0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0x0c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107cd0] 0x008a9000 + 0x107cd0 = 0x009b0cd0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0xfb, 0xbe, 0x00, 0xc8, 0x0c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107ce0] 0x008a9000 + 0x107ce0 = 0x009b0ce0
RTTIBaseClassDescriptor AnimEnumProperty 2                                                                         // [0x107cf0] 0x008a9000 + 0x107cf0 = 0x009b0cf0
.byte 0xf0, 0x0c, 0x9b, 0x00, 0x88, 0x0c, 0x9b, 0x00                                                               // [0x107d08] 0x008a9000 + 0x107d08 = 0x009b0d08
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107d10] 0x008a9000 + 0x107d10 = 0x009b0d10
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0x0d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107d20] 0x008a9000 + 0x107d20 = 0x009b0d20
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xfb, 0xbe, 0x00, 0x18, 0x0d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107d30] 0x008a9000 + 0x107d30 = 0x009b0d30
RTTIBaseClassDescriptorStruct ctype_base@std 1                                                                     // [0x107d40] 0x008a9000 + 0x107d40 = 0x009b0d40
RTTIBaseClassDescriptor ?$ctype@D@std 2                                                                            // [0x107d58] 0x008a9000 + 0x107d58 = 0x009b0d58
.byte 0x58, 0x0d, 0x9b, 0x00, 0x40, 0x0d, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107d70] 0x008a9000 + 0x107d70 = 0x009b0d70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0x0d, 0x9b, 0x00               // [0x107d80] 0x008a9000 + 0x107d80 = 0x009b0d80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xfd, 0xbe, 0x00               // [0x107d90] 0x008a9000 + 0x107d90 = 0x009b0d90
.byte 0x80, 0x0d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107da0] 0x008a9000 + 0x107da0 = 0x009b0da0
RTTIBaseClassDescriptor ?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std 1                      // [0x107da8] 0x008a9000 + 0x107da8 = 0x009b0da8
.byte 0xa8, 0x0d, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107dc0] 0x008a9000 + 0x107dc0 = 0x009b0dc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc0, 0x0d, 0x9b, 0x00               // [0x107dd0] 0x008a9000 + 0x107dd0 = 0x009b0dd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xfd, 0xbe, 0x00               // [0x107de0] 0x008a9000 + 0x107de0 = 0x009b0de0
.byte 0xd0, 0x0d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107df0] 0x008a9000 + 0x107df0 = 0x009b0df0
RTTIBaseClassDescriptor DancePathInfo 2                                                                            // [0x107df8] 0x008a9000 + 0x107df8 = 0x009b0df8
.byte 0xf8, 0x0d, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107e10] 0x008a9000 + 0x107e10 = 0x009b0e10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x0e, 0x9b, 0x00               // [0x107e20] 0x008a9000 + 0x107e20 = 0x009b0e20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xff, 0xbe, 0x00               // [0x107e30] 0x008a9000 + 0x107e30 = 0x009b0e30
.byte 0x20, 0x0e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xb5, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x107e40] 0x008a9000 + 0x107e40 = 0x009b0e40
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107e50] 0x008a9000 + 0x107e50 = 0x009b0e50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x0e, 0x9b, 0x00               // [0x107e60] 0x008a9000 + 0x107e60 = 0x009b0e60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x67, 0xbe, 0x00               // [0x107e70] 0x008a9000 + 0x107e70 = 0x009b0e70
.byte 0x60, 0x0e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107e80] 0x008a9000 + 0x107e80 = 0x009b0e80
RTTIBaseClassDescriptor HandStateCamera 1                                                                          // [0x107e88] 0x008a9000 + 0x107e88 = 0x009b0e88
.byte 0x88, 0x0e, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107ea0] 0x008a9000 + 0x107ea0 = 0x009b0ea0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0x0e, 0x9b, 0x00               // [0x107eb0] 0x008a9000 + 0x107eb0 = 0x009b0eb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0xbf, 0x00               // [0x107ec0] 0x008a9000 + 0x107ec0 = 0x009b0ec0
.byte 0xb0, 0x0e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107ed0] 0x008a9000 + 0x107ed0 = 0x009b0ed0
RTTIBaseClassDescriptor HandStateCitadel 1                                                                         // [0x107ed8] 0x008a9000 + 0x107ed8 = 0x009b0ed8
.byte 0xd8, 0x0e, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107ef0] 0x008a9000 + 0x107ef0 = 0x009b0ef0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0x0e, 0x9b, 0x00               // [0x107f00] 0x008a9000 + 0x107f00 = 0x009b0f00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0xbf, 0x00               // [0x107f10] 0x008a9000 + 0x107f10 = 0x009b0f10
.byte 0x00, 0x0f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107f20] 0x008a9000 + 0x107f20 = 0x009b0f20
RTTIBaseClassDescriptor HandStateCreature 1                                                                        // [0x107f28] 0x008a9000 + 0x107f28 = 0x009b0f28
.byte 0x28, 0x0f, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107f40] 0x008a9000 + 0x107f40 = 0x009b0f40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x0f, 0x9b, 0x00               // [0x107f50] 0x008a9000 + 0x107f50 = 0x009b0f50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x8e, 0xbe, 0x00               // [0x107f60] 0x008a9000 + 0x107f60 = 0x009b0f60
.byte 0x50, 0x0f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x107f70] 0x008a9000 + 0x107f70 = 0x009b0f70
RTTIBaseClassDescriptor HandStateHolding 1                                                                         // [0x107f78] 0x008a9000 + 0x107f78 = 0x009b0f78
RTTIBaseClassDescriptor HandStateGrain 2                                                                           // [0x107f90] 0x008a9000 + 0x107f90 = 0x009b0f90
.byte 0x90, 0x0f, 0x9b, 0x00, 0x78, 0x0f, 0x9b, 0x00                                                               // [0x107fa8] 0x008a9000 + 0x107fa8 = 0x009b0fa8
.byte 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107fb0] 0x008a9000 + 0x107fb0 = 0x009b0fb0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0x0f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107fc0] 0x008a9000 + 0x107fc0 = 0x009b0fc0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x01, 0xbf, 0x00, 0xb8, 0x0f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107fd0] 0x008a9000 + 0x107fd0 = 0x009b0fd0
.byte 0x78, 0x0f, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x107fe0] 0x008a9000 + 0x107fe0 = 0x009b0fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x9b, 0x00               // [0x107ff0] 0x008a9000 + 0x107ff0 = 0x009b0ff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xbf, 0x00               // [0x108000] 0x008a9000 + 0x108000 = 0x009b1000
.byte 0xf0, 0x0f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108010] 0x008a9000 + 0x108010 = 0x009b1010
RTTIBaseClassDescriptor HandStateMultiPickUp 1                                                                     // [0x108018] 0x008a9000 + 0x108018 = 0x009b1018
.byte 0x18, 0x10, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108030] 0x008a9000 + 0x108030 = 0x009b1030
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x30, 0x10, 0x9b, 0x00               // [0x108040] 0x008a9000 + 0x108040 = 0x009b1040
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x01, 0xbf, 0x00               // [0x108050] 0x008a9000 + 0x108050 = 0x009b1050
.byte 0x40, 0x10, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108060] 0x008a9000 + 0x108060 = 0x009b1060
RTTIBaseClassDescriptor HandStateNormal 1                                                                          // [0x108068] 0x008a9000 + 0x108068 = 0x009b1068
.byte 0x68, 0x10, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108080] 0x008a9000 + 0x108080 = 0x009b1080
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x10, 0x9b, 0x00               // [0x108090] 0x008a9000 + 0x108090 = 0x009b1090
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01, 0xbf, 0x00               // [0x1080a0] 0x008a9000 + 0x1080a0 = 0x009b10a0
.byte 0x90, 0x10, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1080b0] 0x008a9000 + 0x1080b0 = 0x009b10b0
RTTIBaseClassDescriptor HandStatePlayAnim 1                                                                        // [0x1080b8] 0x008a9000 + 0x1080b8 = 0x009b10b8
.byte 0xb8, 0x10, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1080d0] 0x008a9000 + 0x1080d0 = 0x009b10d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd0, 0x10, 0x9b, 0x00               // [0x1080e0] 0x008a9000 + 0x1080e0 = 0x009b10e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02, 0xbf, 0x00               // [0x1080f0] 0x008a9000 + 0x1080f0 = 0x009b10f0
.byte 0xe0, 0x10, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108100] 0x008a9000 + 0x108100 = 0x009b1100
RTTIBaseClassDescriptor HandStateTotem 1                                                                           // [0x108108] 0x008a9000 + 0x108108 = 0x009b1108
.byte 0x08, 0x11, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108120] 0x008a9000 + 0x108120 = 0x009b1120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x11, 0x9b, 0x00               // [0x108130] 0x008a9000 + 0x108130 = 0x009b1130
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x02, 0xbf, 0x00               // [0x108140] 0x008a9000 + 0x108140 = 0x009b1140
.byte 0x30, 0x11, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108150] 0x008a9000 + 0x108150 = 0x009b1150
RTTIBaseClassDescriptor HandStateTug 1                                                                             // [0x108158] 0x008a9000 + 0x108158 = 0x009b1158
.byte 0x58, 0x11, 0x9b, 0x00, 0xf0, 0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108170] 0x008a9000 + 0x108170 = 0x009b1170
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x70, 0x11, 0x9b, 0x00               // [0x108180] 0x008a9000 + 0x108180 = 0x009b1180
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x02, 0xbf, 0x00               // [0x108190] 0x008a9000 + 0x108190 = 0x009b1190
.byte 0x80, 0x11, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x11, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1081a0] 0x008a9000 + 0x1081a0 = 0x009b11a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1081b0] 0x008a9000 + 0x1081b0 = 0x009b11b0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0x11, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1081c0] 0x008a9000 + 0x1081c0 = 0x009b11c0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0x07, 0xbf, 0x00, 0xb8, 0x11, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1081d0] 0x008a9000 + 0x1081d0 = 0x009b11d0
RTTIBaseClassDescriptor LocalBase 1                                                                                // [0x1081e0] 0x008a9000 + 0x1081e0 = 0x009b11e0
RTTIBaseClassDescriptorStruct HelpDude 2                                                                           // [0x1081f8] 0x008a9000 + 0x1081f8 = 0x009b11f8
.byte 0xf8, 0x11, 0x9b, 0x00, 0xe0, 0x11, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108210] 0x008a9000 + 0x108210 = 0x009b1210
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x12, 0x9b, 0x00               // [0x108220] 0x008a9000 + 0x108220 = 0x009b1220
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x07, 0xbf, 0x00               // [0x108230] 0x008a9000 + 0x108230 = 0x009b1230
.byte 0x20, 0x12, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108240] 0x008a9000 + 0x108240 = 0x009b1240
RTTIBaseClassDescriptor HelpProfile 1                                                                              // [0x108248] 0x008a9000 + 0x108248 = 0x009b1248
.byte 0x48, 0x12, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108260] 0x008a9000 + 0x108260 = 0x009b1260
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x12, 0x9b, 0x00               // [0x108270] 0x008a9000 + 0x108270 = 0x009b1270
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x0b, 0xbf, 0x00               // [0x108280] 0x008a9000 + 0x108280 = 0x009b1280
.byte 0x70, 0x12, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108290] 0x008a9000 + 0x108290 = 0x009b1290
RTTIBaseClassDescriptor HelpSpiritInfo 6                                                                           // [0x108298] 0x008a9000 + 0x108298 = 0x009b1298
.byte 0x98, 0x12, 0x9b, 0x00, 0x20, 0x6b, 0x9a, 0x00, 0x08, 0x6b, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00               // [0x1082b0] 0x008a9000 + 0x1082b0 = 0x009b12b0
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1082c0] 0x008a9000 + 0x1082c0 = 0x009b12c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, 0x12, 0x9b, 0x00               // [0x1082d0] 0x008a9000 + 0x1082d0 = 0x009b12d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x0b, 0xbf, 0x00               // [0x1082e0] 0x008a9000 + 0x1082e0 = 0x009b12e0
.byte 0xd0, 0x12, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1082f0] 0x008a9000 + 0x1082f0 = 0x009b12f0
RTTIBaseClassDescriptor HelpSpirit 4                                                                               // [0x1082f8] 0x008a9000 + 0x1082f8 = 0x009b12f8
.byte 0xf8, 0x12, 0x9b, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x108310] 0x008a9000 + 0x108310 = 0x009b1310
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108320] 0x008a9000 + 0x108320 = 0x009b1320
.byte 0x05, 0x00, 0x00, 0x00, 0x10, 0x13, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108330] 0x008a9000 + 0x108330 = 0x009b1330
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x0c, 0xbf, 0x00, 0x28, 0x13, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108340] 0x008a9000 + 0x108340 = 0x009b1340
RTTIBaseClassDescriptor HelpSystemInfo 2                                                                           // [0x108350] 0x008a9000 + 0x108350 = 0x009b1350
.byte 0x50, 0x13, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x108368] 0x008a9000 + 0x108368 = 0x009b1368
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108370] 0x008a9000 + 0x108370 = 0x009b1370
.byte 0x03, 0x00, 0x00, 0x00, 0x68, 0x13, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108380] 0x008a9000 + 0x108380 = 0x009b1380
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0x0c, 0xbf, 0x00, 0x78, 0x13, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108390] 0x008a9000 + 0x108390 = 0x009b1390
RTTIBaseClassDescriptor HelpSystem 1                                                                               // [0x1083a0] 0x008a9000 + 0x1083a0 = 0x009b13a0
.byte 0xa0, 0x13, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x1083b8] 0x008a9000 + 0x1083b8 = 0x009b13b8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1083c0] 0x008a9000 + 0x1083c0 = 0x009b13c0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0x13, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1083d0] 0x008a9000 + 0x1083d0 = 0x009b13d0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x0c, 0xbf, 0x00, 0xc8, 0x13, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1083e0] 0x008a9000 + 0x1083e0 = 0x009b13e0
RTTIBaseClassDescriptor GToolTipsInfo 2                                                                            // [0x1083f0] 0x008a9000 + 0x1083f0 = 0x009b13f0
.byte 0xf0, 0x13, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x108408] 0x008a9000 + 0x108408 = 0x009b1408
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108410] 0x008a9000 + 0x108410 = 0x009b1410
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0x14, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108420] 0x008a9000 + 0x108420 = 0x009b1420
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0x19, 0xbf, 0x00, 0x18, 0x14, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108430] 0x008a9000 + 0x108430 = 0x009b1430
RTTIBaseClassDescriptor HelpText 1                                                                                 // [0x108440] 0x008a9000 + 0x108440 = 0x009b1440
.byte 0x40, 0x14, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x108458] 0x008a9000 + 0x108458 = 0x009b1458
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108460] 0x008a9000 + 0x108460 = 0x009b1460
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0x14, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108470] 0x008a9000 + 0x108470 = 0x009b1470
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x1a, 0xbf, 0x00, 0x68, 0x14, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108480] 0x008a9000 + 0x108480 = 0x009b1480
RTTIBaseClassDescriptor GInfluenceInfo 2                                                                           // [0x108490] 0x008a9000 + 0x108490 = 0x009b1490
.byte 0x90, 0x14, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x1084a8] 0x008a9000 + 0x1084a8 = 0x009b14a8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1084b0] 0x008a9000 + 0x1084b0 = 0x009b14b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0x14, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1084c0] 0x008a9000 + 0x1084c0 = 0x009b14c0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x1a, 0xbf, 0x00, 0xb8, 0x14, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1084d0] 0x008a9000 + 0x1084d0 = 0x009b14d0
RTTIBaseClassDescriptor GInterface 3                                                                               // [0x1084e0] 0x008a9000 + 0x1084e0 = 0x009b14e0
.byte 0xe0, 0x14, 0x9b, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x1084f8] 0x008a9000 + 0x1084f8 = 0x009b14f8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108500] 0x008a9000 + 0x108500 = 0x009b1500
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x14, 0x9b, 0x00               // [0x108510] 0x008a9000 + 0x108510 = 0x009b1510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0xbf, 0x00               // [0x108520] 0x008a9000 + 0x108520 = 0x009b1520
.byte 0x10, 0x15, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108530] 0x008a9000 + 0x108530 = 0x009b1530
RTTIBaseClassDescriptor GInterfaceFlags 1                                                                          // [0x108538] 0x008a9000 + 0x108538 = 0x009b1538
.byte 0x38, 0x15, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108550] 0x008a9000 + 0x108550 = 0x009b1550
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x15, 0x9b, 0x00               // [0x108560] 0x008a9000 + 0x108560 = 0x009b1560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x1b, 0xbf, 0x00               // [0x108570] 0x008a9000 + 0x108570 = 0x009b1570
.byte 0x60, 0x15, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108580] 0x008a9000 + 0x108580 = 0x009b1580
RTTIBaseClassDescriptor GInterfaceCollide 1                                                                        // [0x108588] 0x008a9000 + 0x108588 = 0x009b1588
.byte 0x88, 0x15, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1085a0] 0x008a9000 + 0x1085a0 = 0x009b15a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0x15, 0x9b, 0x00               // [0x1085b0] 0x008a9000 + 0x1085b0 = 0x009b15b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1b, 0xbf, 0x00               // [0x1085c0] 0x008a9000 + 0x1085c0 = 0x009b15c0
.byte 0xb0, 0x15, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1085d0] 0x008a9000 + 0x1085d0 = 0x009b15d0
RTTIBaseClassDescriptor InterfaceHandState 1                                                                       // [0x1085d8] 0x008a9000 + 0x1085d8 = 0x009b15d8
.byte 0xd8, 0x15, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1085f0] 0x008a9000 + 0x1085f0 = 0x009b15f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0x15, 0x9b, 0x00               // [0x108600] 0x008a9000 + 0x108600 = 0x009b1600
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x1b, 0xbf, 0x00               // [0x108610] 0x008a9000 + 0x108610 = 0x009b1610
.byte 0x00, 0x16, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108620] 0x008a9000 + 0x108620 = 0x009b1620
RTTIBaseClassDescriptor GInterfaceMessageBuffer 1                                                                  // [0x108628] 0x008a9000 + 0x108628 = 0x009b1628
.byte 0x28, 0x16, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108640] 0x008a9000 + 0x108640 = 0x009b1640
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x16, 0x9b, 0x00               // [0x108650] 0x008a9000 + 0x108650 = 0x009b1650
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x1b, 0xbf, 0x00               // [0x108660] 0x008a9000 + 0x108660 = 0x009b1660
.byte 0x50, 0x16, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108670] 0x008a9000 + 0x108670 = 0x009b1670
RTTIBaseClassDescriptor CImmDevice 0                                                                               // [0x108678] 0x008a9000 + 0x108678 = 0x009b1678
RTTIBaseClassDescriptor CImmMouse 1                                                                                // [0x108690] 0x008a9000 + 0x108690 = 0x009b1690
.byte 0x90, 0x16, 0x9b, 0x00, 0x78, 0x16, 0x9b, 0x00                                                               // [0x1086a8] 0x008a9000 + 0x1086a8 = 0x009b16a8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1086b0] 0x008a9000 + 0x1086b0 = 0x009b16b0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0x16, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1086c0] 0x008a9000 + 0x1086c0 = 0x009b16c0
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x29, 0xbf, 0x00, 0xb8, 0x16, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1086d0] 0x008a9000 + 0x1086d0 = 0x009b16d0
RTTIBaseClassDescriptor GInterfaceStatus 3                                                                         // [0x1086e0] 0x008a9000 + 0x1086e0 = 0x009b16e0
.byte 0xe0, 0x16, 0x9b, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x1086f8] 0x008a9000 + 0x1086f8 = 0x009b16f8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108700] 0x008a9000 + 0x108700 = 0x009b1700
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x16, 0x9b, 0x00               // [0x108710] 0x008a9000 + 0x108710 = 0x009b1710
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x03, 0xbe, 0x00               // [0x108720] 0x008a9000 + 0x108720 = 0x009b1720
.byte 0x10, 0x17, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108730] 0x008a9000 + 0x108730 = 0x009b1730
RTTIBaseClassDescriptor GLeashStatus 2                                                                             // [0x108738] 0x008a9000 + 0x108738 = 0x009b1738
.byte 0x38, 0x17, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108750] 0x008a9000 + 0x108750 = 0x009b1750
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0x17, 0x9b, 0x00               // [0x108760] 0x008a9000 + 0x108760 = 0x009b1760
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x2a, 0xbf, 0x00               // [0x108770] 0x008a9000 + 0x108770 = 0x009b1770
.byte 0x60, 0x17, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108780] 0x008a9000 + 0x108780 = 0x009b1780
RTTIBaseClassDescriptor IPSpecialDialog 1                                                                          // [0x108788] 0x008a9000 + 0x108788 = 0x009b1788
.byte 0x88, 0x17, 0x9b, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1087a0] 0x008a9000 + 0x1087a0 = 0x009b17a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0x17, 0x9b, 0x00               // [0x1087b0] 0x008a9000 + 0x1087b0 = 0x009b17b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x2a, 0xbf, 0x00               // [0x1087c0] 0x008a9000 + 0x1087c0 = 0x009b17c0
.byte 0xb0, 0x17, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1087d0] 0x008a9000 + 0x1087d0 = 0x009b17d0
RTTIBaseClassDescriptor GJobInfo 2                                                                                 // [0x1087d8] 0x008a9000 + 0x1087d8 = 0x009b17d8
.byte 0xd8, 0x17, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1087f0] 0x008a9000 + 0x1087f0 = 0x009b17f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x17, 0x9b, 0x00               // [0x108800] 0x008a9000 + 0x108800 = 0x009b1800
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x33, 0xbf, 0x00               // [0x108810] 0x008a9000 + 0x108810 = 0x009b1810
.byte 0x00, 0x18, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108820] 0x008a9000 + 0x108820 = 0x009b1820
RTTIBaseClassDescriptor GKeyInput 1                                                                                // [0x108828] 0x008a9000 + 0x108828 = 0x009b1828
.byte 0x28, 0x18, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108840] 0x008a9000 + 0x108840 = 0x009b1840
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x18, 0x9b, 0x00               // [0x108850] 0x008a9000 + 0x108850 = 0x009b1850
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x33, 0xbf, 0x00               // [0x108860] 0x008a9000 + 0x108860 = 0x009b1860
.byte 0x50, 0x18, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108870] 0x008a9000 + 0x108870 = 0x009b1870
RTTIBaseClassDescriptor GLanguage 1                                                                                // [0x108878] 0x008a9000 + 0x108878 = 0x009b1878
.byte 0x78, 0x18, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108890] 0x008a9000 + 0x108890 = 0x009b1890
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0x18, 0x9b, 0x00               // [0x1088a0] 0x008a9000 + 0x1088a0 = 0x009b18a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0xbf, 0x00               // [0x1088b0] 0x008a9000 + 0x1088b0 = 0x009b18b0
.byte 0xa0, 0x18, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1088c0] 0x008a9000 + 0x1088c0 = 0x009b18c0
RTTIBaseClassDescriptor LevelOfDetail 1                                                                            // [0x1088c8] 0x008a9000 + 0x1088c8 = 0x009b18c8
.byte 0xc8, 0x18, 0x9b, 0x00, 0x40, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1088e0] 0x008a9000 + 0x1088e0 = 0x009b18e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe0, 0x18, 0x9b, 0x00               // [0x1088f0] 0x008a9000 + 0x1088f0 = 0x009b18f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x36, 0xbf, 0x00               // [0x108900] 0x008a9000 + 0x108900 = 0x009b1900
.byte 0xf0, 0x18, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108910] 0x008a9000 + 0x108910 = 0x009b1910
RTTIBaseClassDescriptor LHConnection 0                                                                             // [0x108918] 0x008a9000 + 0x108918 = 0x009b1918
RTTIBaseClassDescriptor LHLobby 1                                                                                  // [0x108930] 0x008a9000 + 0x108930 = 0x009b1930
.byte 0x30, 0x19, 0x9b, 0x00, 0x18, 0x19, 0x9b, 0x00                                                               // [0x108948] 0x008a9000 + 0x108948 = 0x009b1948
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108950] 0x008a9000 + 0x108950 = 0x009b1950
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0x19, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108960] 0x008a9000 + 0x108960 = 0x009b1960
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x3a, 0xbf, 0x00, 0x58, 0x19, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108970] 0x008a9000 + 0x108970 = 0x009b1970
RTTIBaseClassDescriptor LHSession 1                                                                                // [0x108980] 0x008a9000 + 0x108980 = 0x009b1980
.byte 0x80, 0x19, 0x9b, 0x00, 0x18, 0x19, 0x9b, 0x00                                                               // [0x108998] 0x008a9000 + 0x108998 = 0x009b1998
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1089a0] 0x008a9000 + 0x1089a0 = 0x009b19a0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0x19, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1089b0] 0x008a9000 + 0x1089b0 = 0x009b19b0
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x3a, 0xbf, 0x00, 0xa8, 0x19, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1089c0] 0x008a9000 + 0x1089c0 = 0x009b19c0
RTTIBaseClassDescriptor DataPath 2                                                                                 // [0x1089d0] 0x008a9000 + 0x1089d0 = 0x009b19d0
.byte 0xd0, 0x19, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x1089e8] 0x008a9000 + 0x1089e8 = 0x009b19e8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1089f0] 0x008a9000 + 0x1089f0 = 0x009b19f0
.byte 0x03, 0x00, 0x00, 0x00, 0xe8, 0x19, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108a00] 0x008a9000 + 0x108a00 = 0x009b1a00
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x3a, 0xbf, 0x00, 0xf8, 0x19, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108a10] 0x008a9000 + 0x108a10 = 0x009b1a10
RTTIBaseClassDescriptor DataForScriptRemind 2                                                                      // [0x108a20] 0x008a9000 + 0x108a20 = 0x009b1a20
.byte 0x20, 0x1a, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x108a38] 0x008a9000 + 0x108a38 = 0x009b1a38
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108a40] 0x008a9000 + 0x108a40 = 0x009b1a40
.byte 0x03, 0x00, 0x00, 0x00, 0x38, 0x1a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108a50] 0x008a9000 + 0x108a50 = 0x009b1a50
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x3a, 0xbf, 0x00, 0x48, 0x1a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108a60] 0x008a9000 + 0x108a60 = 0x009b1a60
RTTIBaseClassDescriptor MagicFood 10                                                                               // [0x108a70] 0x008a9000 + 0x108a70 = 0x009b1a70
.byte 0x70, 0x1a, 0x9b, 0x00, 0xe0, 0xd5, 0x9a, 0x00                                                               // [0x108a88] 0x008a9000 + 0x108a88 = 0x009b1a88
.byte 0xf0, 0xdb, 0x9a, 0x00, 0xd8, 0xdb, 0x9a, 0x00, 0xc0, 0xdb, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00               // [0x108a90] 0x008a9000 + 0x108a90 = 0x009b1a90
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x108aa0] 0x008a9000 + 0x108aa0 = 0x009b1aa0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ab0] 0x008a9000 + 0x108ab0 = 0x009b1ab0
.byte 0x0b, 0x00, 0x00, 0x00, 0x88, 0x1a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ac0] 0x008a9000 + 0x108ac0 = 0x009b1ac0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x67, 0xbe, 0x00, 0xb8, 0x1a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ad0] 0x008a9000 + 0x108ad0 = 0x009b1ad0
RTTIBaseClassDescriptor GMagicHand 2                                                                               // [0x108ae0] 0x008a9000 + 0x108ae0 = 0x009b1ae0
.byte 0xe0, 0x1a, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x108af8] 0x008a9000 + 0x108af8 = 0x009b1af8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108b00] 0x008a9000 + 0x108b00 = 0x009b1b00
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0x1a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108b10] 0x008a9000 + 0x108b10 = 0x009b1b10
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0x3e, 0xbf, 0x00, 0x08, 0x1b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108b20] 0x008a9000 + 0x108b20 = 0x009b1b20
RTTIBaseClassDescriptor GMagicLivingInfo 6                                                                         // [0x108b30] 0x008a9000 + 0x108b30 = 0x009b1b30
.byte 0x30, 0x1b, 0x9b, 0x00, 0x20, 0x6b, 0x9a, 0x00                                                               // [0x108b48] 0x008a9000 + 0x108b48 = 0x009b1b48
.byte 0x08, 0x6b, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x108b50] 0x008a9000 + 0x108b50 = 0x009b1b50
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108b60] 0x008a9000 + 0x108b60 = 0x009b1b60
.byte 0x07, 0x00, 0x00, 0x00, 0x48, 0x1b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108b70] 0x008a9000 + 0x108b70 = 0x009b1b70
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0x3e, 0xbf, 0x00, 0x68, 0x1b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108b80] 0x008a9000 + 0x108b80 = 0x009b1b80
RTTIBaseClassDescriptor MagicTeleport 7                                                                            // [0x108b90] 0x008a9000 + 0x108b90 = 0x009b1b90
.byte 0x90, 0x1b, 0x9b, 0x00, 0xf8, 0x84, 0x9a, 0x00                                                               // [0x108ba8] 0x008a9000 + 0x108ba8 = 0x009b1ba8
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x108bb0] 0x008a9000 + 0x108bb0 = 0x009b1bb0
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108bc0] 0x008a9000 + 0x108bc0 = 0x009b1bc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa8, 0x1b, 0x9b, 0x00               // [0x108bd0] 0x008a9000 + 0x108bd0 = 0x009b1bd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x03, 0xbe, 0x00               // [0x108be0] 0x008a9000 + 0x108be0 = 0x009b1be0
.byte 0xd0, 0x1b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108bf0] 0x008a9000 + 0x108bf0 = 0x009b1bf0
RTTIBaseClassDescriptor MagicTree 7                                                                                // [0x108bf8] 0x008a9000 + 0x108bf8 = 0x009b1bf8
.byte 0xf8, 0x1b, 0x9b, 0x00, 0x70, 0xd4, 0x9a, 0x00, 0x80, 0xc4, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x108c10] 0x008a9000 + 0x108c10 = 0x009b1c10
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x108c20] 0x008a9000 + 0x108c20 = 0x009b1c20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108c30] 0x008a9000 + 0x108c30 = 0x009b1c30
.byte 0x08, 0x00, 0x00, 0x00, 0x10, 0x1c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108c40] 0x008a9000 + 0x108c40 = 0x009b1c40
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0x3f, 0xbf, 0x00, 0x38, 0x1c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108c50] 0x008a9000 + 0x108c50 = 0x009b1c50
RTTIBaseClassDescriptor GVortexInfo 2                                                                              // [0x108c60] 0x008a9000 + 0x108c60 = 0x009b1c60
.byte 0x60, 0x1c, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x108c78] 0x008a9000 + 0x108c78 = 0x009b1c78
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108c80] 0x008a9000 + 0x108c80 = 0x009b1c80
.byte 0x03, 0x00, 0x00, 0x00, 0x78, 0x1c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108c90] 0x008a9000 + 0x108c90 = 0x009b1c90
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0xbf, 0x00, 0x88, 0x1c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ca0] 0x008a9000 + 0x108ca0 = 0x009b1ca0
.byte 0x40, 0xd2, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108cb0] 0x008a9000 + 0x108cb0 = 0x009b1cb0
.byte 0x88, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x108cb8] 0x008a9000 + 0x108cb8 = 0x009b1cb8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108cc0] 0x008a9000 + 0x108cc0 = 0x009b1cc0
RTTIBaseClassDescriptor LandscapeVortex 8                                                                          // [0x108cc8] 0x008a9000 + 0x108cc8 = 0x009b1cc8
RTTIBaseClassDescriptor LandscapeVortexVolc 9                                                                      // [0x108ce0] 0x008a9000 + 0x108ce0 = 0x009b1ce0
.byte 0xe0, 0x1c, 0x9b, 0x00, 0xc8, 0x1c, 0x9b, 0x00                                                               // [0x108cf8] 0x008a9000 + 0x108cf8 = 0x009b1cf8
.byte 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x108d00] 0x008a9000 + 0x108d00 = 0x009b1d00
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0xb0, 0x1c, 0x9b, 0x00               // [0x108d10] 0x008a9000 + 0x108d10 = 0x009b1d10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x108d20] 0x008a9000 + 0x108d20 = 0x009b1d20
.byte 0x0a, 0x00, 0x00, 0x00, 0xf8, 0x1c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108d30] 0x008a9000 + 0x108d30 = 0x009b1d30
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x40, 0xbf, 0x00, 0x28, 0x1d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108d40] 0x008a9000 + 0x108d40 = 0x009b1d40
RTTIBaseClassDescriptor LandscapeVortexIn 9                                                                        // [0x108d50] 0x008a9000 + 0x108d50 = 0x009b1d50
.byte 0x50, 0x1d, 0x9b, 0x00, 0xc8, 0x1c, 0x9b, 0x00                                                               // [0x108d68] 0x008a9000 + 0x108d68 = 0x009b1d68
.byte 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x108d70] 0x008a9000 + 0x108d70 = 0x009b1d70
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0xb0, 0x1c, 0x9b, 0x00               // [0x108d80] 0x008a9000 + 0x108d80 = 0x009b1d80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x108d90] 0x008a9000 + 0x108d90 = 0x009b1d90
.byte 0x0a, 0x00, 0x00, 0x00, 0x68, 0x1d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108da0] 0x008a9000 + 0x108da0 = 0x009b1da0
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x40, 0xbf, 0x00, 0x98, 0x1d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108db0] 0x008a9000 + 0x108db0 = 0x009b1db0
RTTIBaseClassDescriptor LandscapeVortexOut 9                                                                       // [0x108dc0] 0x008a9000 + 0x108dc0 = 0x009b1dc0
.byte 0xc0, 0x1d, 0x9b, 0x00, 0xc8, 0x1c, 0x9b, 0x00                                                               // [0x108dd8] 0x008a9000 + 0x108dd8 = 0x009b1dd8
.byte 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x108de0] 0x008a9000 + 0x108de0 = 0x009b1de0
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0xb0, 0x1c, 0x9b, 0x00               // [0x108df0] 0x008a9000 + 0x108df0 = 0x009b1df0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x108e00] 0x008a9000 + 0x108e00 = 0x009b1e00
.byte 0x0a, 0x00, 0x00, 0x00, 0xd8, 0x1d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108e10] 0x008a9000 + 0x108e10 = 0x009b1e10
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x40, 0xbf, 0x00, 0x08, 0x1e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108e20] 0x008a9000 + 0x108e20 = 0x009b1e20
.byte 0xc8, 0x1c, 0x9b, 0x00, 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x108e30] 0x008a9000 + 0x108e30 = 0x009b1e30
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x108e40] 0x008a9000 + 0x108e40 = 0x009b1e40
.byte 0xb0, 0x1c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x108e50] 0x008a9000 + 0x108e50 = 0x009b1e50
.byte 0x09, 0x00, 0x00, 0x00, 0x30, 0x1e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108e60] 0x008a9000 + 0x108e60 = 0x009b1e60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xbf, 0x00, 0x58, 0x1e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108e70] 0x008a9000 + 0x108e70 = 0x009b1e70
RTTIBaseClassDescriptor MagicWood 10                                                                               // [0x108e80] 0x008a9000 + 0x108e80 = 0x009b1e80
.byte 0x80, 0x1e, 0x9b, 0x00, 0x08, 0xdc, 0x9a, 0x00                                                               // [0x108e98] 0x008a9000 + 0x108e98 = 0x009b1e98
.byte 0xf0, 0xdb, 0x9a, 0x00, 0xd8, 0xdb, 0x9a, 0x00, 0xc0, 0xdb, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00               // [0x108ea0] 0x008a9000 + 0x108ea0 = 0x009b1ea0
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x108eb0] 0x008a9000 + 0x108eb0 = 0x009b1eb0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ec0] 0x008a9000 + 0x108ec0 = 0x009b1ec0
.byte 0x0b, 0x00, 0x00, 0x00, 0x98, 0x1e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ed0] 0x008a9000 + 0x108ed0 = 0x009b1ed0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x41, 0xbf, 0x00, 0xc8, 0x1e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ee0] 0x008a9000 + 0x108ee0 = 0x009b1ee0
RTTIBaseClassDescriptor GMap 1                                                                                     // [0x108ef0] 0x008a9000 + 0x108ef0 = 0x009b1ef0
.byte 0xf0, 0x1e, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x108f08] 0x008a9000 + 0x108f08 = 0x009b1f08
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108f10] 0x008a9000 + 0x108f10 = 0x009b1f10
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0x1f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108f20] 0x008a9000 + 0x108f20 = 0x009b1f20
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x41, 0xbf, 0x00, 0x18, 0x1f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108f30] 0x008a9000 + 0x108f30 = 0x009b1f30
RTTIBaseClassDescriptor Meeting 3                                                                                  // [0x108f40] 0x008a9000 + 0x108f40 = 0x009b1f40
.byte 0x40, 0x1f, 0x9b, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x108f58] 0x008a9000 + 0x108f58 = 0x009b1f58
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108f60] 0x008a9000 + 0x108f60 = 0x009b1f60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x1f, 0x9b, 0x00               // [0x108f70] 0x008a9000 + 0x108f70 = 0x009b1f70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x41, 0xbf, 0x00               // [0x108f80] 0x008a9000 + 0x108f80 = 0x009b1f80
.byte 0x70, 0x1f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x108f90] 0x008a9000 + 0x108f90 = 0x009b1f90
RTTIBaseClassDescriptor GSpeedThreshold 2                                                                          // [0x108f98] 0x008a9000 + 0x108f98 = 0x009b1f98
.byte 0x98, 0x1f, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108fb0] 0x008a9000 + 0x108fb0 = 0x009b1fb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xb0, 0x1f, 0x9b, 0x00               // [0x108fc0] 0x008a9000 + 0x108fc0 = 0x009b1fc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x42, 0xbf, 0x00               // [0x108fd0] 0x008a9000 + 0x108fd0 = 0x009b1fd0
.byte 0xc0, 0x1f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x7a, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00               // [0x108fe0] 0x008a9000 + 0x108fe0 = 0x009b1fe0
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x108ff0] 0x008a9000 + 0x108ff0 = 0x009b1ff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe8, 0x1f, 0x9b, 0x00               // [0x109000] 0x008a9000 + 0x109000 = 0x009b2000
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x96, 0x9c, 0x00               // [0x109010] 0x008a9000 + 0x109010 = 0x009b2010
.byte 0x00, 0x20, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109020] 0x008a9000 + 0x109020 = 0x009b2020
RTTIBaseClassDescriptor GMobileStaticInfo 4                                                                        // [0x109028] 0x008a9000 + 0x109028 = 0x009b2028
.byte 0x28, 0x20, 0x9b, 0x00, 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x109040] 0x008a9000 + 0x109040 = 0x009b2040
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109050] 0x008a9000 + 0x109050 = 0x009b2050
.byte 0x05, 0x00, 0x00, 0x00, 0x40, 0x20, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109060] 0x008a9000 + 0x109060 = 0x009b2060
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x42, 0xbf, 0x00, 0x58, 0x20, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109070] 0x008a9000 + 0x109070 = 0x009b2070
RTTIBaseClassDescriptor MPFEDownloads 0                                                                            // [0x109080] 0x008a9000 + 0x109080 = 0x009b2080
RTTIBaseClassDescriptor MPFEThumbDownload 1                                                                        // [0x109098] 0x008a9000 + 0x109098 = 0x009b2098
.byte 0x98, 0x20, 0x9b, 0x00, 0x80, 0x20, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1090b0] 0x008a9000 + 0x1090b0 = 0x009b20b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb0, 0x20, 0x9b, 0x00               // [0x1090c0] 0x008a9000 + 0x1090c0 = 0x009b20c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x46, 0xbf, 0x00               // [0x1090d0] 0x008a9000 + 0x1090d0 = 0x009b20d0
.byte 0xc0, 0x20, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1090e0] 0x008a9000 + 0x1090e0 = 0x009b20e0
RTTIBaseClassDescriptor MPFEPublicChatMessage 1                                                                    // [0x1090e8] 0x008a9000 + 0x1090e8 = 0x009b20e8
.byte 0xe8, 0x20, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109100] 0x008a9000 + 0x109100 = 0x009b2100
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x21, 0x9b, 0x00               // [0x109110] 0x008a9000 + 0x109110 = 0x009b2110
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x47, 0xbf, 0x00               // [0x109120] 0x008a9000 + 0x109120 = 0x009b2120
.byte 0x10, 0x21, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109130] 0x008a9000 + 0x109130 = 0x009b2130
RTTIBaseClassDescriptor MPFEPrivateChatMessage 1                                                                   // [0x109138] 0x008a9000 + 0x109138 = 0x009b2138
.byte 0x38, 0x21, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109150] 0x008a9000 + 0x109150 = 0x009b2150
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x21, 0x9b, 0x00               // [0x109160] 0x008a9000 + 0x109160 = 0x009b2160
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x47, 0xbf, 0x00               // [0x109170] 0x008a9000 + 0x109170 = 0x009b2170
.byte 0x60, 0x21, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109180] 0x008a9000 + 0x109180 = 0x009b2180
RTTIBaseClassDescriptor MPFEAskJoinMessage 1                                                                       // [0x109188] 0x008a9000 + 0x109188 = 0x009b2188
.byte 0x88, 0x21, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1091a0] 0x008a9000 + 0x1091a0 = 0x009b21a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0x21, 0x9b, 0x00               // [0x1091b0] 0x008a9000 + 0x1091b0 = 0x009b21b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x47, 0xbf, 0x00               // [0x1091c0] 0x008a9000 + 0x1091c0 = 0x009b21c0
.byte 0xb0, 0x21, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1091d0] 0x008a9000 + 0x1091d0 = 0x009b21d0
RTTIBaseClassDescriptor MPFEReplyToJoinMessage 1                                                                   // [0x1091d8] 0x008a9000 + 0x1091d8 = 0x009b21d8
.byte 0xd8, 0x21, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1091f0] 0x008a9000 + 0x1091f0 = 0x009b21f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0x21, 0x9b, 0x00               // [0x109200] 0x008a9000 + 0x109200 = 0x009b2200
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x48, 0xbf, 0x00               // [0x109210] 0x008a9000 + 0x109210 = 0x009b2210
.byte 0x00, 0x22, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109220] 0x008a9000 + 0x109220 = 0x009b2220
RTTIBaseClassDescriptor MPFEInviteToTeamMessage 1                                                                  // [0x109228] 0x008a9000 + 0x109228 = 0x009b2228
.byte 0x28, 0x22, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109240] 0x008a9000 + 0x109240 = 0x009b2240
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x22, 0x9b, 0x00               // [0x109250] 0x008a9000 + 0x109250 = 0x009b2250
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x48, 0xbf, 0x00               // [0x109260] 0x008a9000 + 0x109260 = 0x009b2260
.byte 0x50, 0x22, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109270] 0x008a9000 + 0x109270 = 0x009b2270
RTTIBaseClassDescriptor MPFEReplyToInviteMessage 1                                                                 // [0x109278] 0x008a9000 + 0x109278 = 0x009b2278
.byte 0x78, 0x22, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109290] 0x008a9000 + 0x109290 = 0x009b2290
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0x22, 0x9b, 0x00               // [0x1092a0] 0x008a9000 + 0x1092a0 = 0x009b22a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x48, 0xbf, 0x00               // [0x1092b0] 0x008a9000 + 0x1092b0 = 0x009b22b0
.byte 0xa0, 0x22, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1092c0] 0x008a9000 + 0x1092c0 = 0x009b22c0
RTTIBaseClassDescriptor MPFECancelStartMessage 1                                                                   // [0x1092c8] 0x008a9000 + 0x1092c8 = 0x009b22c8
.byte 0xc8, 0x22, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1092e0] 0x008a9000 + 0x1092e0 = 0x009b22e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe0, 0x22, 0x9b, 0x00               // [0x1092f0] 0x008a9000 + 0x1092f0 = 0x009b22f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x48, 0xbf, 0x00               // [0x109300] 0x008a9000 + 0x109300 = 0x009b2300
.byte 0xf0, 0x22, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109310] 0x008a9000 + 0x109310 = 0x009b2310
RTTIBaseClassDescriptor MPFEKickMessageRequest 1                                                                   // [0x109318] 0x008a9000 + 0x109318 = 0x009b2318
.byte 0x18, 0x23, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109330] 0x008a9000 + 0x109330 = 0x009b2330
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x30, 0x23, 0x9b, 0x00               // [0x109340] 0x008a9000 + 0x109340 = 0x009b2340
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0xbf, 0x00               // [0x109350] 0x008a9000 + 0x109350 = 0x009b2350
.byte 0x40, 0x23, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109360] 0x008a9000 + 0x109360 = 0x009b2360
RTTIBaseClassDescriptor MPFEKickMessage 1                                                                          // [0x109368] 0x008a9000 + 0x109368 = 0x009b2368
.byte 0x68, 0x23, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109380] 0x008a9000 + 0x109380 = 0x009b2380
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x23, 0x9b, 0x00               // [0x109390] 0x008a9000 + 0x109390 = 0x009b2390
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x49, 0xbf, 0x00               // [0x1093a0] 0x008a9000 + 0x1093a0 = 0x009b23a0
.byte 0x90, 0x23, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1093b0] 0x008a9000 + 0x1093b0 = 0x009b23b0
RTTIBaseClassDescriptor MPFEDatabaseID 1                                                                           // [0x1093b8] 0x008a9000 + 0x1093b8 = 0x009b23b8
.byte 0xb8, 0x23, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1093d0] 0x008a9000 + 0x1093d0 = 0x009b23d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd0, 0x23, 0x9b, 0x00               // [0x1093e0] 0x008a9000 + 0x1093e0 = 0x009b23e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x49, 0xbf, 0x00               // [0x1093f0] 0x008a9000 + 0x1093f0 = 0x009b23f0
.byte 0xe0, 0x23, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109400] 0x008a9000 + 0x109400 = 0x009b2400
RTTIBaseClassDescriptor MPFEReadyMessage 1                                                                         // [0x109408] 0x008a9000 + 0x109408 = 0x009b2408
.byte 0x08, 0x24, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109420] 0x008a9000 + 0x109420 = 0x009b2420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x24, 0x9b, 0x00               // [0x109430] 0x008a9000 + 0x109430 = 0x009b2430
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x49, 0xbf, 0x00               // [0x109440] 0x008a9000 + 0x109440 = 0x009b2440
.byte 0x30, 0x24, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109450] 0x008a9000 + 0x109450 = 0x009b2450
RTTIBaseClassDescriptor MPFETeamsReadyList 1                                                                       // [0x109458] 0x008a9000 + 0x109458 = 0x009b2458
.byte 0x58, 0x24, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109470] 0x008a9000 + 0x109470 = 0x009b2470
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x70, 0x24, 0x9b, 0x00               // [0x109480] 0x008a9000 + 0x109480 = 0x009b2480
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x49, 0xbf, 0x00               // [0x109490] 0x008a9000 + 0x109490 = 0x009b2490
.byte 0x80, 0x24, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1094a0] 0x008a9000 + 0x1094a0 = 0x009b24a0
RTTIBaseClassDescriptor MPFEHasCreature 1                                                                          // [0x1094a8] 0x008a9000 + 0x1094a8 = 0x009b24a8
.byte 0xa8, 0x24, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1094c0] 0x008a9000 + 0x1094c0 = 0x009b24c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc0, 0x24, 0x9b, 0x00               // [0x1094d0] 0x008a9000 + 0x1094d0 = 0x009b24d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4a, 0xbf, 0x00               // [0x1094e0] 0x008a9000 + 0x1094e0 = 0x009b24e0
.byte 0xd0, 0x24, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1094f0] 0x008a9000 + 0x1094f0 = 0x009b24f0
RTTIBaseClassDescriptor MPFEChannelSelector 1                                                                      // [0x1094f8] 0x008a9000 + 0x1094f8 = 0x009b24f8
.byte 0xf8, 0x24, 0x9b, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109510] 0x008a9000 + 0x109510 = 0x009b2510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x25, 0x9b, 0x00               // [0x109520] 0x008a9000 + 0x109520 = 0x009b2520
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x4a, 0xbf, 0x00               // [0x109530] 0x008a9000 + 0x109530 = 0x009b2530
.byte 0x20, 0x25, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109540] 0x008a9000 + 0x109540 = 0x009b2540
RTTIBaseClassDescriptor MPFECreateGame 1                                                                           // [0x109548] 0x008a9000 + 0x109548 = 0x009b2548
.byte 0x48, 0x25, 0x9b, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109560] 0x008a9000 + 0x109560 = 0x009b2560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x25, 0x9b, 0x00               // [0x109570] 0x008a9000 + 0x109570 = 0x009b2570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x4a, 0xbf, 0x00               // [0x109580] 0x008a9000 + 0x109580 = 0x009b2580
.byte 0x70, 0x25, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109590] 0x008a9000 + 0x109590 = 0x009b2590
RTTIBaseClassDescriptor MPFEChooseConnection 1                                                                     // [0x109598] 0x008a9000 + 0x109598 = 0x009b2598
.byte 0x98, 0x25, 0x9b, 0x00, 0xc8, 0xb8, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1095b0] 0x008a9000 + 0x1095b0 = 0x009b25b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb0, 0x25, 0x9b, 0x00               // [0x1095c0] 0x008a9000 + 0x1095c0 = 0x009b25c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b, 0xbf, 0x00               // [0x1095d0] 0x008a9000 + 0x1095d0 = 0x009b25d0
.byte 0xc0, 0x25, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1095e0] 0x008a9000 + 0x1095e0 = 0x009b25e0
RTTIBaseClassDescriptor MPFEClanList 1                                                                             // [0x1095e8] 0x008a9000 + 0x1095e8 = 0x009b25e8
.byte 0xe8, 0x25, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109600] 0x008a9000 + 0x109600 = 0x009b2600
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x26, 0x9b, 0x00               // [0x109610] 0x008a9000 + 0x109610 = 0x009b2610
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x4b, 0xbf, 0x00               // [0x109620] 0x008a9000 + 0x109620 = 0x009b2620
.byte 0x10, 0x26, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109630] 0x008a9000 + 0x109630 = 0x009b2630
RTTIBaseClassDescriptor MPFEChangeClanRequest 1                                                                    // [0x109638] 0x008a9000 + 0x109638 = 0x009b2638
.byte 0x38, 0x26, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109650] 0x008a9000 + 0x109650 = 0x009b2650
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x26, 0x9b, 0x00               // [0x109660] 0x008a9000 + 0x109660 = 0x009b2660
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4c, 0xbf, 0x00               // [0x109670] 0x008a9000 + 0x109670 = 0x009b2670
.byte 0x60, 0x26, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109680] 0x008a9000 + 0x109680 = 0x009b2680
RTTIBaseClassDescriptor MPFEResetClan 1                                                                            // [0x109688] 0x008a9000 + 0x109688 = 0x009b2688
.byte 0x88, 0x26, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1096a0] 0x008a9000 + 0x1096a0 = 0x009b26a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0x26, 0x9b, 0x00               // [0x1096b0] 0x008a9000 + 0x1096b0 = 0x009b26b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x4c, 0xbf, 0x00               // [0x1096c0] 0x008a9000 + 0x1096c0 = 0x009b26c0
.byte 0xb0, 0x26, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1096d0] 0x008a9000 + 0x1096d0 = 0x009b26d0
RTTIBaseClassDescriptor MPFECondtionUpdateMessage 1                                                                // [0x1096d8] 0x008a9000 + 0x1096d8 = 0x009b26d8
.byte 0xd8, 0x26, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1096f0] 0x008a9000 + 0x1096f0 = 0x009b26f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0x26, 0x9b, 0x00               // [0x109700] 0x008a9000 + 0x109700 = 0x009b2700
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x4c, 0xbf, 0x00               // [0x109710] 0x008a9000 + 0x109710 = 0x009b2710
.byte 0x00, 0x27, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109720] 0x008a9000 + 0x109720 = 0x009b2720
RTTIBaseClassDescriptor MPFEAllConditions 1                                                                        // [0x109728] 0x008a9000 + 0x109728 = 0x009b2728
.byte 0x28, 0x27, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109740] 0x008a9000 + 0x109740 = 0x009b2740
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x27, 0x9b, 0x00               // [0x109750] 0x008a9000 + 0x109750 = 0x009b2750
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, 0xbf, 0x00               // [0x109760] 0x008a9000 + 0x109760 = 0x009b2760
.byte 0x50, 0x27, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109770] 0x008a9000 + 0x109770 = 0x009b2770
RTTIBaseClassDescriptor MPFEDatabase 0                                                                             // [0x109778] 0x008a9000 + 0x109778 = 0x009b2778
.byte 0x78, 0x27, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109790] 0x008a9000 + 0x109790 = 0x009b2790
.byte 0x01, 0x00, 0x00, 0x00, 0x90, 0x27, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1097a0] 0x008a9000 + 0x1097a0 = 0x009b27a0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xd8, 0xbf, 0x00, 0x98, 0x27, 0x9b, 0x00, 0x80, 0x20, 0x9b, 0x00               // [0x1097b0] 0x008a9000 + 0x1097b0 = 0x009b27b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1097c0] 0x008a9000 + 0x1097c0 = 0x009b27c0
.byte 0x01, 0x00, 0x00, 0x00, 0xbc, 0x27, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1097d0] 0x008a9000 + 0x1097d0 = 0x009b27d0
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x46, 0xbf, 0x00, 0xc8, 0x27, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1097e0] 0x008a9000 + 0x1097e0 = 0x009b27e0
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0xd8, 0xbf, 0x00               // [0x1097f0] 0x008a9000 + 0x1097f0 = 0x009b27f0
.byte 0x48, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109800] 0x008a9000 + 0x109800 = 0x009b2800
.byte 0x10, 0xd8, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109808] 0x008a9000 + 0x109808 = 0x009b2808
.byte 0x80, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x109810] 0x008a9000 + 0x109810 = 0x009b2810
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109818] 0x008a9000 + 0x109818 = 0x009b2818
RTTIBaseClassDescriptor MPFEMapDownload 2                                                                          // [0x109820] 0x008a9000 + 0x109820 = 0x009b2820
.byte 0x20, 0x28, 0x9b, 0x00, 0x80, 0x20, 0x9b, 0x00                                                               // [0x109838] 0x008a9000 + 0x109838 = 0x009b2838
.byte 0x08, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x109840] 0x008a9000 + 0x109840 = 0x009b2840
.byte 0x03, 0x00, 0x00, 0x00, 0x38, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109850] 0x008a9000 + 0x109850 = 0x009b2850
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xd8, 0xbf, 0x00, 0x48, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109860] 0x008a9000 + 0x109860 = 0x009b2860
RTTIBaseClassDescriptor MPFEFileTransferMessage 1                                                                  // [0x109870] 0x008a9000 + 0x109870 = 0x009b2870
.byte 0x70, 0x28, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109888] 0x008a9000 + 0x109888 = 0x009b2888
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109890] 0x008a9000 + 0x109890 = 0x009b2890
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1098a0] 0x008a9000 + 0x1098a0 = 0x009b28a0
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0xd8, 0xbf, 0x00, 0x98, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1098b0] 0x008a9000 + 0x1098b0 = 0x009b28b0
RTTIBaseClassDescriptor MPFEFindGame 1                                                                             // [0x1098c0] 0x008a9000 + 0x1098c0 = 0x009b28c0
.byte 0xc0, 0x28, 0x9b, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x1098d8] 0x008a9000 + 0x1098d8 = 0x009b28d8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1098e0] 0x008a9000 + 0x1098e0 = 0x009b28e0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1098f0] 0x008a9000 + 0x1098f0 = 0x009b28f0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0xd8, 0xbf, 0x00, 0xe8, 0x28, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109900] 0x008a9000 + 0x109900 = 0x009b2900
RTTIBaseClassDescriptor MPFEStartGameOkayToStartMessage 1                                                          // [0x109910] 0x008a9000 + 0x109910 = 0x009b2910
.byte 0x10, 0x29, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109928] 0x008a9000 + 0x109928 = 0x009b2928
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109930] 0x008a9000 + 0x109930 = 0x009b2930
.byte 0x02, 0x00, 0x00, 0x00, 0x28, 0x29, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109940] 0x008a9000 + 0x109940 = 0x009b2940
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xd9, 0xbf, 0x00, 0x38, 0x29, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109950] 0x008a9000 + 0x109950 = 0x009b2950
RTTIBaseClassDescriptor MPFEStartGameReadyMessage 1                                                                // [0x109960] 0x008a9000 + 0x109960 = 0x009b2960
.byte 0x60, 0x29, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109978] 0x008a9000 + 0x109978 = 0x009b2978
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109980] 0x008a9000 + 0x109980 = 0x009b2980
.byte 0x02, 0x00, 0x00, 0x00, 0x78, 0x29, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109990] 0x008a9000 + 0x109990 = 0x009b2990
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0xd9, 0xbf, 0x00, 0x88, 0x29, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1099a0] 0x008a9000 + 0x1099a0 = 0x009b29a0
RTTIBaseClassDescriptor MPFEStartGameTransferFilesMessage 1                                                        // [0x1099b0] 0x008a9000 + 0x1099b0 = 0x009b29b0
.byte 0xb0, 0x29, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x1099c8] 0x008a9000 + 0x1099c8 = 0x009b29c8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1099d0] 0x008a9000 + 0x1099d0 = 0x009b29d0
.byte 0x02, 0x00, 0x00, 0x00, 0xc8, 0x29, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1099e0] 0x008a9000 + 0x1099e0 = 0x009b29e0
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0xd9, 0xbf, 0x00, 0xd8, 0x29, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1099f0] 0x008a9000 + 0x1099f0 = 0x009b29f0
RTTIBaseClassDescriptor MPFEStartGameNowMessage 1                                                                  // [0x109a00] 0x008a9000 + 0x109a00 = 0x009b2a00
.byte 0x00, 0x2a, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109a18] 0x008a9000 + 0x109a18 = 0x009b2a18
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109a20] 0x008a9000 + 0x109a20 = 0x009b2a20
.byte 0x02, 0x00, 0x00, 0x00, 0x18, 0x2a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109a30] 0x008a9000 + 0x109a30 = 0x009b2a30
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0xda, 0xbf, 0x00, 0x28, 0x2a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109a40] 0x008a9000 + 0x109a40 = 0x009b2a40
RTTIBaseClassDescriptor MPFEDisconnectNowMessage 1                                                                 // [0x109a50] 0x008a9000 + 0x109a50 = 0x009b2a50
.byte 0x50, 0x2a, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109a68] 0x008a9000 + 0x109a68 = 0x009b2a68
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109a70] 0x008a9000 + 0x109a70 = 0x009b2a70
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0x2a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109a80] 0x008a9000 + 0x109a80 = 0x009b2a80
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0xda, 0xbf, 0x00, 0x78, 0x2a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109a90] 0x008a9000 + 0x109a90 = 0x009b2a90
RTTIBaseClassDescriptor MPFEStopGameStartMessage 1                                                                 // [0x109aa0] 0x008a9000 + 0x109aa0 = 0x009b2aa0
.byte 0xa0, 0x2a, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109ab8] 0x008a9000 + 0x109ab8 = 0x009b2ab8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109ac0] 0x008a9000 + 0x109ac0 = 0x009b2ac0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0x2a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109ad0] 0x008a9000 + 0x109ad0 = 0x009b2ad0
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xda, 0xbf, 0x00, 0xc8, 0x2a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109ae0] 0x008a9000 + 0x109ae0 = 0x009b2ae0
RTTIBaseClassDescriptor MPFELogin 1                                                                                // [0x109af0] 0x008a9000 + 0x109af0 = 0x009b2af0
.byte 0xf0, 0x2a, 0x9b, 0x00, 0xc8, 0xb8, 0x9a, 0x00                                                               // [0x109b08] 0x008a9000 + 0x109b08 = 0x009b2b08
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109b10] 0x008a9000 + 0x109b10 = 0x009b2b10
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0x2b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109b20] 0x008a9000 + 0x109b20 = 0x009b2b20
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0xda, 0xbf, 0x00, 0x18, 0x2b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109b30] 0x008a9000 + 0x109b30 = 0x009b2b30
RTTIBaseClassDescriptor MPFELoginDatabase 1                                                                        // [0x109b40] 0x008a9000 + 0x109b40 = 0x009b2b40
.byte 0x40, 0x2b, 0x9b, 0x00, 0x78, 0x27, 0x9b, 0x00                                                               // [0x109b58] 0x008a9000 + 0x109b58 = 0x009b2b58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109b60] 0x008a9000 + 0x109b60 = 0x009b2b60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0x2b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109b70] 0x008a9000 + 0x109b70 = 0x009b2b70
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xdb, 0xbf, 0x00, 0x68, 0x2b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109b80] 0x008a9000 + 0x109b80 = 0x009b2b80
RTTIBaseClassDescriptor MPFEChangedMapMessage 1                                                                    // [0x109b90] 0x008a9000 + 0x109b90 = 0x009b2b90
.byte 0x90, 0x2b, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109ba8] 0x008a9000 + 0x109ba8 = 0x009b2ba8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109bb0] 0x008a9000 + 0x109bb0 = 0x009b2bb0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0x2b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109bc0] 0x008a9000 + 0x109bc0 = 0x009b2bc0
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xdb, 0xbf, 0x00, 0xb8, 0x2b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109bd0] 0x008a9000 + 0x109bd0 = 0x009b2bd0
RTTIBaseClassDescriptor MPFEMapErrorMessage 1                                                                      // [0x109be0] 0x008a9000 + 0x109be0 = 0x009b2be0
.byte 0xe0, 0x2b, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109bf8] 0x008a9000 + 0x109bf8 = 0x009b2bf8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109c00] 0x008a9000 + 0x109c00 = 0x009b2c00
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0x2b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109c10] 0x008a9000 + 0x109c10 = 0x009b2c10
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0xdb, 0xbf, 0x00, 0x08, 0x2c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109c20] 0x008a9000 + 0x109c20 = 0x009b2c20
RTTIBaseClassDescriptor MPFEChangedTeamRequestMessage 1                                                            // [0x109c30] 0x008a9000 + 0x109c30 = 0x009b2c30
.byte 0x30, 0x2c, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109c48] 0x008a9000 + 0x109c48 = 0x009b2c48
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109c50] 0x008a9000 + 0x109c50 = 0x009b2c50
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0x2c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109c60] 0x008a9000 + 0x109c60 = 0x009b2c60
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0xdc, 0xbf, 0x00, 0x58, 0x2c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109c70] 0x008a9000 + 0x109c70 = 0x009b2c70
RTTIBaseClassDescriptor MPFEUserTeamList 1                                                                         // [0x109c80] 0x008a9000 + 0x109c80 = 0x009b2c80
.byte 0x80, 0x2c, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109c98] 0x008a9000 + 0x109c98 = 0x009b2c98
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109ca0] 0x008a9000 + 0x109ca0 = 0x009b2ca0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0x2c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109cb0] 0x008a9000 + 0x109cb0 = 0x009b2cb0
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0xdc, 0xbf, 0x00, 0xa8, 0x2c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109cc0] 0x008a9000 + 0x109cc0 = 0x009b2cc0
RTTIBaseClassDescriptor MPFEAskForTeamDetailsMessage 1                                                             // [0x109cd0] 0x008a9000 + 0x109cd0 = 0x009b2cd0
.byte 0xd0, 0x2c, 0x9b, 0x00, 0x50, 0x87, 0x9a, 0x00                                                               // [0x109ce8] 0x008a9000 + 0x109ce8 = 0x009b2ce8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109cf0] 0x008a9000 + 0x109cf0 = 0x009b2cf0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0x2c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109d00] 0x008a9000 + 0x109d00 = 0x009b2d00
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xdd, 0xbf, 0x00, 0xf8, 0x2c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109d10] 0x008a9000 + 0x109d10 = 0x009b2d10
RTTIBaseClassDescriptor MultiplayerDatabase 0                                                                      // [0x109d20] 0x008a9000 + 0x109d20 = 0x009b2d20
.byte 0x20, 0x2d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109d38] 0x008a9000 + 0x109d38 = 0x009b2d38
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x2d, 0x9b, 0x00               // [0x109d40] 0x008a9000 + 0x109d40 = 0x009b2d40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0xdd, 0xbf, 0x00               // [0x109d50] 0x008a9000 + 0x109d50 = 0x009b2d50
.byte 0x40, 0x2d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109d60] 0x008a9000 + 0x109d60 = 0x009b2d60
RTTIBaseClassDescriptor CreatureDatabase 1                                                                         // [0x109d68] 0x008a9000 + 0x109d68 = 0x009b2d68
.byte 0x68, 0x2d, 0x9b, 0x00, 0x20, 0x2d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109d80] 0x008a9000 + 0x109d80 = 0x009b2d80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x2d, 0x9b, 0x00               // [0x109d90] 0x008a9000 + 0x109d90 = 0x009b2d90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xdd, 0xbf, 0x00               // [0x109da0] 0x008a9000 + 0x109da0 = 0x009b2da0
.byte 0x90, 0x2d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x109db0] 0x008a9000 + 0x109db0 = 0x009b2db0
RTTIBaseClassDescriptor StatsDatabase 1                                                                            // [0x109db8] 0x008a9000 + 0x109db8 = 0x009b2db8
.byte 0xb8, 0x2d, 0x9b, 0x00, 0x20, 0x2d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109dd0] 0x008a9000 + 0x109dd0 = 0x009b2dd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd0, 0x2d, 0x9b, 0x00               // [0x109de0] 0x008a9000 + 0x109de0 = 0x009b2de0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xdd, 0xbf, 0x00               // [0x109df0] 0x008a9000 + 0x109df0 = 0x009b2df0
.byte 0xe0, 0x2d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x109e00] 0x008a9000 + 0x109e00 = 0x009b2e00
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109e10] 0x008a9000 + 0x109e10 = 0x009b2e10
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0x2e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109e20] 0x008a9000 + 0x109e20 = 0x009b2e20
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x7e, 0x9c, 0x00, 0x18, 0x2e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109e30] 0x008a9000 + 0x109e30 = 0x009b2e30
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x109e40] 0x008a9000 + 0x109e40 = 0x009b2e40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109e50] 0x008a9000 + 0x109e50 = 0x009b2e50
.byte 0x04, 0x00, 0x00, 0x00, 0x40, 0x2e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109e60] 0x008a9000 + 0x109e60 = 0x009b2e60
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x7f, 0x9c, 0x00, 0x58, 0x2e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109e70] 0x008a9000 + 0x109e70 = 0x009b2e70
RTTIBaseClassDescriptor GSpotVisualInfo 2                                                                          // [0x109e80] 0x008a9000 + 0x109e80 = 0x009b2e80
.byte 0x80, 0x2e, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x109e98] 0x008a9000 + 0x109e98 = 0x009b2e98
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109ea0] 0x008a9000 + 0x109ea0 = 0x009b2ea0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0x2e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109eb0] 0x008a9000 + 0x109eb0 = 0x009b2eb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xbf, 0x00, 0xa8, 0x2e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109ec0] 0x008a9000 + 0x109ec0 = 0x009b2ec0
RTTIBaseClassDescriptor GPBallInfo 5                                                                               // [0x109ed0] 0x008a9000 + 0x109ed0 = 0x009b2ed0
.byte 0xd0, 0x2e, 0x9b, 0x00, 0xe8, 0x7a, 0x9a, 0x00                                                               // [0x109ee8] 0x008a9000 + 0x109ee8 = 0x009b2ee8
.byte 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x109ef0] 0x008a9000 + 0x109ef0 = 0x009b2ef0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109f00] 0x008a9000 + 0x109f00 = 0x009b2f00
.byte 0x06, 0x00, 0x00, 0x00, 0xe8, 0x2e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109f10] 0x008a9000 + 0x109f10 = 0x009b2f10
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0xe0, 0xbf, 0x00, 0x08, 0x2f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109f20] 0x008a9000 + 0x109f20 = 0x009b2f20
RTTIBaseClassDescriptor PBall 6                                                                                    // [0x109f30] 0x008a9000 + 0x109f30 = 0x009b2f30
.byte 0x30, 0x2f, 0x9b, 0x00, 0x60, 0x7b, 0x9a, 0x00                                                               // [0x109f48] 0x008a9000 + 0x109f48 = 0x009b2f48
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x109f50] 0x008a9000 + 0x109f50 = 0x009b2f50
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109f60] 0x008a9000 + 0x109f60 = 0x009b2f60
.byte 0x07, 0x00, 0x00, 0x00, 0x48, 0x2f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109f70] 0x008a9000 + 0x109f70 = 0x009b2f70
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xe0, 0xbf, 0x00, 0x68, 0x2f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109f80] 0x008a9000 + 0x109f80 = 0x009b2f80
RTTIBaseClassDescriptor HeapWithPools 1                                                                            // [0x109f90] 0x008a9000 + 0x109f90 = 0x009b2f90
RTTIBaseClassDescriptor UniqueKeyHeap 2                                                                            // [0x109fa8] 0x008a9000 + 0x109fa8 = 0x009b2fa8
RTTIBaseClassDescriptor HeapStore 3                                                                                // [0x109fc0] 0x008a9000 + 0x109fc0 = 0x009b2fc0
.byte 0xc0, 0x2f, 0x9b, 0x00, 0xa8, 0x2f, 0x9b, 0x00                                                               // [0x109fd8] 0x008a9000 + 0x109fd8 = 0x009b2fd8
.byte 0x90, 0x2f, 0x9b, 0x00, 0x18, 0x30, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x109fe0] 0x008a9000 + 0x109fe0 = 0x009b2fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0x2f, 0x9b, 0x00               // [0x109ff0] 0x008a9000 + 0x109ff0 = 0x009b2ff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xec, 0xbf, 0x00               // [0x10a000] 0x008a9000 + 0x10a000 = 0x009b3000
.byte 0xf0, 0x2f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a010] 0x008a9000 + 0x10a010 = 0x009b3010
RTTIBaseClassDescriptor Heap 0                                                                                     // [0x10a018] 0x008a9000 + 0x10a018 = 0x009b3018
.byte 0x18, 0x30, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a030] 0x008a9000 + 0x10a030 = 0x009b3030
.byte 0x01, 0x00, 0x00, 0x00, 0x30, 0x30, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a040] 0x008a9000 + 0x10a040 = 0x009b3040
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xec, 0xbf, 0x00, 0x38, 0x30, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a050] 0x008a9000 + 0x10a050 = 0x009b3050
RTTIBaseClassDescriptor GPFootballInfo 4                                                                           // [0x10a060] 0x008a9000 + 0x10a060 = 0x009b3060
.byte 0x60, 0x30, 0x9b, 0x00, 0x50, 0x63, 0x9a, 0x00                                                               // [0x10a078] 0x008a9000 + 0x10a078 = 0x009b3078
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a080] 0x008a9000 + 0x10a080 = 0x009b3080
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x78, 0x30, 0x9b, 0x00               // [0x10a090] 0x008a9000 + 0x10a090 = 0x009b3090
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xed, 0xbf, 0x00               // [0x10a0a0] 0x008a9000 + 0x10a0a0 = 0x009b30a0
.byte 0x90, 0x30, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a0b0] 0x008a9000 + 0x10a0b0 = 0x009b30b0
RTTIBaseClassDescriptor GPFootballPositionInfo 2                                                                   // [0x10a0b8] 0x008a9000 + 0x10a0b8 = 0x009b30b8
.byte 0xb8, 0x30, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a0d0] 0x008a9000 + 0x10a0d0 = 0x009b30d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xd0, 0x30, 0x9b, 0x00               // [0x10a0e0] 0x008a9000 + 0x10a0e0 = 0x009b30e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xed, 0xbf, 0x00               // [0x10a0f0] 0x008a9000 + 0x10a0f0 = 0x009b30f0
.byte 0xe0, 0x30, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a100] 0x008a9000 + 0x10a100 = 0x009b3100
RTTIBaseClassDescriptor PPlannedFootball 4                                                                         // [0x10a108] 0x008a9000 + 0x10a108 = 0x009b3108
.byte 0x08, 0x31, 0x9b, 0x00, 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10a120] 0x008a9000 + 0x10a120 = 0x009b3120
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a130] 0x008a9000 + 0x10a130 = 0x009b3130
.byte 0x05, 0x00, 0x00, 0x00, 0x20, 0x31, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a140] 0x008a9000 + 0x10a140 = 0x009b3140
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0xed, 0xbf, 0x00, 0x38, 0x31, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a150] 0x008a9000 + 0x10a150 = 0x009b3150
RTTIBaseClassDescriptor PFootball 6                                                                                // [0x10a160] 0x008a9000 + 0x10a160 = 0x009b3160
.byte 0x60, 0x31, 0x9b, 0x00, 0x20, 0x64, 0x9a, 0x00                                                               // [0x10a178] 0x008a9000 + 0x10a178 = 0x009b3178
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10a180] 0x008a9000 + 0x10a180 = 0x009b3180
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a190] 0x008a9000 + 0x10a190 = 0x009b3190
.byte 0x07, 0x00, 0x00, 0x00, 0x78, 0x31, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a1a0] 0x008a9000 + 0x10a1a0 = 0x009b31a0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xed, 0xbf, 0x00, 0x98, 0x31, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a1b0] 0x008a9000 + 0x10a1b0 = 0x009b31b0
RTTIBaseClassDescriptor PhysicsObject 1                                                                            // [0x10a1c0] 0x008a9000 + 0x10a1c0 = 0x009b31c0
.byte 0xc0, 0x31, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x10a1d8] 0x008a9000 + 0x10a1d8 = 0x009b31d8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a1e0] 0x008a9000 + 0x10a1e0 = 0x009b31e0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0x31, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a1f0] 0x008a9000 + 0x10a1f0 = 0x009b31f0
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xee, 0xbf, 0x00, 0xe8, 0x31, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a200] 0x008a9000 + 0x10a200 = 0x009b3200
RTTIBaseClassDescriptor GPlayer 2                                                                                  // [0x10a210] 0x008a9000 + 0x10a210 = 0x009b3210
.byte 0x10, 0x32, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x10a228] 0x008a9000 + 0x10a228 = 0x009b3228
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a230] 0x008a9000 + 0x10a230 = 0x009b3230
.byte 0x03, 0x00, 0x00, 0x00, 0x28, 0x32, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a240] 0x008a9000 + 0x10a240 = 0x009b3240
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0xf1, 0xbf, 0x00, 0x38, 0x32, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a250] 0x008a9000 + 0x10a250 = 0x009b3250
RTTIBaseClassDescriptor CPDesireNodeInfo 0                                                                         // [0x10a260] 0x008a9000 + 0x10a260 = 0x009b3260
.byte 0x60, 0x32, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a278] 0x008a9000 + 0x10a278 = 0x009b3278
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x78, 0x32, 0x9b, 0x00               // [0x10a280] 0x008a9000 + 0x10a280 = 0x009b3280
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0b, 0xc0, 0x00               // [0x10a290] 0x008a9000 + 0x10a290 = 0x009b3290
.byte 0x80, 0x32, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a2a0] 0x008a9000 + 0x10a2a0 = 0x009b32a0
RTTIBaseClassDescriptor PlayerMessage 1                                                                            // [0x10a2a8] 0x008a9000 + 0x10a2a8 = 0x009b32a8
.byte 0xa8, 0x32, 0x9b, 0x00, 0x40, 0x88, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a2c0] 0x008a9000 + 0x10a2c0 = 0x009b32c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc0, 0x32, 0x9b, 0x00               // [0x10a2d0] 0x008a9000 + 0x10a2d0 = 0x009b32d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x1e, 0xc0, 0x00               // [0x10a2e0] 0x008a9000 + 0x10a2e0 = 0x009b32e0
.byte 0xd0, 0x32, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a2f0] 0x008a9000 + 0x10a2f0 = 0x009b32f0
RTTIBaseClassDescriptor GPlaytimeInfo 2                                                                            // [0x10a2f8] 0x008a9000 + 0x10a2f8 = 0x009b32f8
.byte 0xf8, 0x32, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a310] 0x008a9000 + 0x10a310 = 0x009b3310
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x33, 0x9b, 0x00               // [0x10a320] 0x008a9000 + 0x10a320 = 0x009b3320
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x1f, 0xc0, 0x00               // [0x10a330] 0x008a9000 + 0x10a330 = 0x009b3330
.byte 0x20, 0x33, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a340] 0x008a9000 + 0x10a340 = 0x009b3340
RTTIBaseClassDescriptor Playtime 2                                                                                 // [0x10a348] 0x008a9000 + 0x10a348 = 0x009b3348
.byte 0x48, 0x33, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a360] 0x008a9000 + 0x10a360 = 0x009b3360
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0x33, 0x9b, 0x00               // [0x10a370] 0x008a9000 + 0x10a370 = 0x009b3370
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x1f, 0xc0, 0x00               // [0x10a380] 0x008a9000 + 0x10a380 = 0x009b3380
.byte 0x70, 0x33, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a390] 0x008a9000 + 0x10a390 = 0x009b3390
RTTIBaseClassDescriptor PlaytimeElement 2                                                                          // [0x10a398] 0x008a9000 + 0x10a398 = 0x009b3398
.byte 0x98, 0x33, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a3b0] 0x008a9000 + 0x10a3b0 = 0x009b33b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xb0, 0x33, 0x9b, 0x00               // [0x10a3c0] 0x008a9000 + 0x10a3c0 = 0x009b33c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x1f, 0xc0, 0x00               // [0x10a3d0] 0x008a9000 + 0x10a3d0 = 0x009b33d0
.byte 0xc0, 0x33, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a3e0] 0x008a9000 + 0x10a3e0 = 0x009b33e0
RTTIBaseClassDescriptor GPotInfo 5                                                                                 // [0x10a3e8] 0x008a9000 + 0x10a3e8 = 0x009b33e8
.byte 0xe8, 0x33, 0x9b, 0x00, 0xe8, 0x7a, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00               // [0x10a400] 0x008a9000 + 0x10a400 = 0x009b3400
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a410] 0x008a9000 + 0x10a410 = 0x009b3410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x34, 0x9b, 0x00               // [0x10a420] 0x008a9000 + 0x10a420 = 0x009b3420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x20, 0xc0, 0x00               // [0x10a430] 0x008a9000 + 0x10a430 = 0x009b3430
.byte 0x20, 0x34, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xd5, 0x9a, 0x00, 0xf0, 0xdb, 0x9a, 0x00               // [0x10a440] 0x008a9000 + 0x10a440 = 0x009b3440
.byte 0xd8, 0xdb, 0x9a, 0x00, 0xc0, 0xdb, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0x10a450] 0x008a9000 + 0x10a450 = 0x009b3450
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10a460] 0x008a9000 + 0x10a460 = 0x009b3460
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a470] 0x008a9000 + 0x10a470 = 0x009b3470
.byte 0x0a, 0x00, 0x00, 0x00, 0x48, 0x34, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a480] 0x008a9000 + 0x10a480 = 0x009b3480
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0xca, 0xbe, 0x00, 0x78, 0x34, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a490] 0x008a9000 + 0x10a490 = 0x009b3490
.byte 0xf0, 0xdb, 0x9a, 0x00, 0xd8, 0xdb, 0x9a, 0x00, 0xc0, 0xdb, 0x9a, 0x00, 0x60, 0x7b, 0x9a, 0x00               // [0x10a4a0] 0x008a9000 + 0x10a4a0 = 0x009b34a0
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10a4b0] 0x008a9000 + 0x10a4b0 = 0x009b34b0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a4c0] 0x008a9000 + 0x10a4c0 = 0x009b34c0
.byte 0x09, 0x00, 0x00, 0x00, 0xa0, 0x34, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a4d0] 0x008a9000 + 0x10a4d0 = 0x009b34d0
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0xcb, 0xbe, 0x00, 0xc8, 0x34, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a4e0] 0x008a9000 + 0x10a4e0 = 0x009b34e0
RTTIBaseClassDescriptor PowerSpin 1                                                                                // [0x10a4f0] 0x008a9000 + 0x10a4f0 = 0x009b34f0
RTTIBaseClassDescriptor PowerSpinRunner 2                                                                          // [0x10a508] 0x008a9000 + 0x10a508 = 0x009b3508
.byte 0x08, 0x35, 0x9b, 0x00, 0xf0, 0x34, 0x9b, 0x00, 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a520] 0x008a9000 + 0x10a520 = 0x009b3520
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x35, 0x9b, 0x00               // [0x10a530] 0x008a9000 + 0x10a530 = 0x009b3530
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x20, 0xc0, 0x00               // [0x10a540] 0x008a9000 + 0x10a540 = 0x009b3540
.byte 0x30, 0x35, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a550] 0x008a9000 + 0x10a550 = 0x009b3550
RTTIBaseClassDescriptor GPrayerSiteInfo 4                                                                          // [0x10a558] 0x008a9000 + 0x10a558 = 0x009b3558
.byte 0x58, 0x35, 0x9b, 0x00, 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x10a570] 0x008a9000 + 0x10a570 = 0x009b3570
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a580] 0x008a9000 + 0x10a580 = 0x009b3580
.byte 0x05, 0x00, 0x00, 0x00, 0x70, 0x35, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a590] 0x008a9000 + 0x10a590 = 0x009b3590
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0x20, 0xc0, 0x00, 0x88, 0x35, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a5a0] 0x008a9000 + 0x10a5a0 = 0x009b35a0
RTTIBaseClassDescriptor GPrayerIconInfo 4                                                                          // [0x10a5b0] 0x008a9000 + 0x10a5b0 = 0x009b35b0
.byte 0xb0, 0x35, 0x9b, 0x00, 0xa0, 0xc3, 0x9a, 0x00                                                               // [0x10a5c8] 0x008a9000 + 0x10a5c8 = 0x009b35c8
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a5d0] 0x008a9000 + 0x10a5d0 = 0x009b35d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xc8, 0x35, 0x9b, 0x00               // [0x10a5e0] 0x008a9000 + 0x10a5e0 = 0x009b35e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x20, 0xc0, 0x00               // [0x10a5f0] 0x008a9000 + 0x10a5f0 = 0x009b35f0
.byte 0xe0, 0x35, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a600] 0x008a9000 + 0x10a600 = 0x009b3600
RTTIBaseClassDescriptor PrayerSite 6                                                                               // [0x10a608] 0x008a9000 + 0x10a608 = 0x009b3608
.byte 0x08, 0x36, 0x9b, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x10a620] 0x008a9000 + 0x10a620 = 0x009b3620
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a630] 0x008a9000 + 0x10a630 = 0x009b3630
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x36, 0x9b, 0x00               // [0x10a640] 0x008a9000 + 0x10a640 = 0x009b3640
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xc0, 0x00               // [0x10a650] 0x008a9000 + 0x10a650 = 0x009b3650
.byte 0x40, 0x36, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a660] 0x008a9000 + 0x10a660 = 0x009b3660
RTTIBaseClassDescriptor PrayerIcon 6                                                                               // [0x10a668] 0x008a9000 + 0x10a668 = 0x009b3668
.byte 0x68, 0x36, 0x9b, 0x00, 0x80, 0xc4, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x10a680] 0x008a9000 + 0x10a680 = 0x009b3680
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a690] 0x008a9000 + 0x10a690 = 0x009b3690
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x80, 0x36, 0x9b, 0x00               // [0x10a6a0] 0x008a9000 + 0x10a6a0 = 0x009b36a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x21, 0xc0, 0x00               // [0x10a6b0] 0x008a9000 + 0x10a6b0 = 0x009b36b0
.byte 0xa0, 0x36, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10a6c0] 0x008a9000 + 0x10a6c0 = 0x009b36c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a6d0] 0x008a9000 + 0x10a6d0 = 0x009b36d0
.byte 0x02, 0x00, 0x00, 0x00, 0xc8, 0x36, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a6e0] 0x008a9000 + 0x10a6e0 = 0x009b36e0
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0xf8, 0xbe, 0x00, 0xd8, 0x36, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a6f0] 0x008a9000 + 0x10a6f0 = 0x009b36f0
RTTIBaseClassDescriptor PersistentOwner 1                                                                          // [0x10a700] 0x008a9000 + 0x10a700 = 0x009b3700
RTTIBaseClassDescriptor PSysFileData 2                                                                             // [0x10a718] 0x008a9000 + 0x10a718 = 0x009b3718
.byte 0x18, 0x37, 0x9b, 0x00, 0x00, 0x37, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a730] 0x008a9000 + 0x10a730 = 0x009b3730
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x37, 0x9b, 0x00               // [0x10a740] 0x008a9000 + 0x10a740 = 0x009b3740
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf8, 0xbe, 0x00               // [0x10a750] 0x008a9000 + 0x10a750 = 0x009b3750
.byte 0x40, 0x37, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a760] 0x008a9000 + 0x10a760 = 0x009b3760
RTTIBaseClassDescriptor PSysManager 3                                                                              // [0x10a768] 0x008a9000 + 0x10a768 = 0x009b3768
.byte 0x68, 0x37, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10a780] 0x008a9000 + 0x10a780 = 0x009b3780
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a790] 0x008a9000 + 0x10a790 = 0x009b3790
.byte 0x04, 0x00, 0x00, 0x00, 0x80, 0x37, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a7a0] 0x008a9000 + 0x10a7a0 = 0x009b37a0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x22, 0xc0, 0x00, 0x98, 0x37, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a7b0] 0x008a9000 + 0x10a7b0 = 0x009b37b0
RTTIBaseClassDescriptor AtomCore 3                                                                                 // [0x10a7c0] 0x008a9000 + 0x10a7c0 = 0x009b37c0
.byte 0xc0, 0x37, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00                                                               // [0x10a7d8] 0x008a9000 + 0x10a7d8 = 0x009b37d8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a7e0] 0x008a9000 + 0x10a7e0 = 0x009b37e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0x37, 0x9b, 0x00               // [0x10a7f0] 0x008a9000 + 0x10a7f0 = 0x009b37f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x22, 0xc0, 0x00               // [0x10a800] 0x008a9000 + 0x10a800 = 0x009b3800
.byte 0xf0, 0x37, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10a810] 0x008a9000 + 0x10a810 = 0x009b3810
RTTIBaseClassDescriptor AtomCollection 3                                                                           // [0x10a818] 0x008a9000 + 0x10a818 = 0x009b3818
.byte 0x18, 0x38, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10a830] 0x008a9000 + 0x10a830 = 0x009b3830
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a840] 0x008a9000 + 0x10a840 = 0x009b3840
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0x38, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a850] 0x008a9000 + 0x10a850 = 0x009b3850
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x22, 0xc0, 0x00, 0x48, 0x38, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a860] 0x008a9000 + 0x10a860 = 0x009b3860
RTTIBaseClassDescriptor AtomCollectionModifier 1                                                                   // [0x10a870] 0x008a9000 + 0x10a870 = 0x009b3870
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00                                                               // [0x10a888] 0x008a9000 + 0x10a888 = 0x009b3888
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a890] 0x008a9000 + 0x10a890 = 0x009b3890
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0x38, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a8a0] 0x008a9000 + 0x10a8a0 = 0x009b38a0
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0x21, 0xc0, 0x00, 0x98, 0x38, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a8b0] 0x008a9000 + 0x10a8b0 = 0x009b38b0
RTTIBaseClassDescriptor AtomCreateRule 2                                                                           // [0x10a8c0] 0x008a9000 + 0x10a8c0 = 0x009b38c0
RTTIBaseClassDescriptor UR_SimpleBeam 3                                                                            // [0x10a8d8] 0x008a9000 + 0x10a8d8 = 0x009b38d8
.byte 0xd8, 0x38, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10a8f0] 0x008a9000 + 0x10a8f0 = 0x009b38f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a900] 0x008a9000 + 0x10a900 = 0x009b3900
.byte 0x04, 0x00, 0x00, 0x00, 0xf0, 0x38, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a910] 0x008a9000 + 0x10a910 = 0x009b3910
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0x22, 0xc0, 0x00, 0x08, 0x39, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a920] 0x008a9000 + 0x10a920 = 0x009b3920
RTTIBaseClassDescriptor UR_Plasma 3                                                                                // [0x10a930] 0x008a9000 + 0x10a930 = 0x009b3930
.byte 0x30, 0x39, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10a948] 0x008a9000 + 0x10a948 = 0x009b3948
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a950] 0x008a9000 + 0x10a950 = 0x009b3950
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x39, 0x9b, 0x00               // [0x10a960] 0x008a9000 + 0x10a960 = 0x009b3960
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x22, 0xc0, 0x00               // [0x10a970] 0x008a9000 + 0x10a970 = 0x009b3970
.byte 0x60, 0x39, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10a980] 0x008a9000 + 0x10a980 = 0x009b3980
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a990] 0x008a9000 + 0x10a990 = 0x009b3990
.byte 0x03, 0x00, 0x00, 0x00, 0x88, 0x39, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a9a0] 0x008a9000 + 0x10a9a0 = 0x009b39a0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x22, 0xc0, 0x00, 0x98, 0x39, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a9b0] 0x008a9000 + 0x10a9b0 = 0x009b39b0
RTTIBaseClassDescriptor UR_CreatureSpell 3                                                                         // [0x10a9c0] 0x008a9000 + 0x10a9c0 = 0x009b39c0
.byte 0xc0, 0x39, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10a9d8] 0x008a9000 + 0x10a9d8 = 0x009b39d8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10a9e0] 0x008a9000 + 0x10a9e0 = 0x009b39e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0x39, 0x9b, 0x00               // [0x10a9f0] 0x008a9000 + 0x10a9f0 = 0x009b39f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x23, 0xc0, 0x00               // [0x10aa00] 0x008a9000 + 0x10aa00 = 0x009b3a00
.byte 0xf0, 0x39, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10aa10] 0x008a9000 + 0x10aa10 = 0x009b3a10
RTTIBaseClassDescriptor UR_Explosion 3                                                                             // [0x10aa18] 0x008a9000 + 0x10aa18 = 0x009b3a18
.byte 0x18, 0x3a, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10aa30] 0x008a9000 + 0x10aa30 = 0x009b3a30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10aa40] 0x008a9000 + 0x10aa40 = 0x009b3a40
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0x3a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10aa50] 0x008a9000 + 0x10aa50 = 0x009b3a50
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x23, 0xc0, 0x00, 0x48, 0x3a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10aa60] 0x008a9000 + 0x10aa60 = 0x009b3a60
RTTIBaseClassDescriptor CollectionData@UR_Explosion 4                                                              // [0x10aa70] 0x008a9000 + 0x10aa70 = 0x009b3a70
.byte 0x70, 0x3a, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x10aa88] 0x008a9000 + 0x10aa88 = 0x009b3a88
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10aa90] 0x008a9000 + 0x10aa90 = 0x009b3a90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x88, 0x3a, 0x9b, 0x00               // [0x10aaa0] 0x008a9000 + 0x10aaa0 = 0x009b3aa0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x23, 0xc0, 0x00               // [0x10aab0] 0x008a9000 + 0x10aab0 = 0x009b3ab0
.byte 0xa0, 0x3a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10aac0] 0x008a9000 + 0x10aac0 = 0x009b3ac0
RTTIBaseClassDescriptor GMagicFireBallInfo 3                                                                       // [0x10aac8] 0x008a9000 + 0x10aac8 = 0x009b3ac8
.byte 0xc8, 0x3a, 0x9b, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10aae0] 0x008a9000 + 0x10aae0 = 0x009b3ae0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10aaf0] 0x008a9000 + 0x10aaf0 = 0x009b3af0
.byte 0x04, 0x00, 0x00, 0x00, 0xe0, 0x3a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ab00] 0x008a9000 + 0x10ab00 = 0x009b3b00
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0x23, 0xc0, 0x00, 0xf8, 0x3a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ab10] 0x008a9000 + 0x10ab10 = 0x009b3b10
RTTIBaseClassDescriptor MagicFireBall 4                                                                            // [0x10ab20] 0x008a9000 + 0x10ab20 = 0x009b3b20
.byte 0x20, 0x3b, 0x9b, 0x00, 0xf0, 0x63, 0x9a, 0x00                                                               // [0x10ab38] 0x008a9000 + 0x10ab38 = 0x009b3b38
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ab40] 0x008a9000 + 0x10ab40 = 0x009b3b40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x3b, 0x9b, 0x00               // [0x10ab50] 0x008a9000 + 0x10ab50 = 0x009b3b50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x24, 0xc0, 0x00               // [0x10ab60] 0x008a9000 + 0x10ab60 = 0x009b3b60
.byte 0x50, 0x3b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ab70] 0x008a9000 + 0x10ab70 = 0x009b3b70
RTTIBaseClassDescriptor UpdateRule 2                                                                               // [0x10ab78] 0x008a9000 + 0x10ab78 = 0x009b3b78
RTTIBaseClassDescriptor UR_Flocking 3                                                                              // [0x10ab90] 0x008a9000 + 0x10ab90 = 0x009b3b90
.byte 0x90, 0x3b, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10aba8] 0x008a9000 + 0x10aba8 = 0x009b3ba8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10abb0] 0x008a9000 + 0x10abb0 = 0x009b3bb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0x3b, 0x9b, 0x00               // [0x10abc0] 0x008a9000 + 0x10abc0 = 0x009b3bc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x24, 0xc0, 0x00               // [0x10abd0] 0x008a9000 + 0x10abd0 = 0x009b3bd0
.byte 0xc0, 0x3b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10abe0] 0x008a9000 + 0x10abe0 = 0x009b3be0
RTTIBaseClassDescriptor CollectionData@UR_Rope 4                                                                   // [0x10abe8] 0x008a9000 + 0x10abe8 = 0x009b3be8
.byte 0xe8, 0x3b, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10ac00] 0x008a9000 + 0x10ac00 = 0x009b3c00
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ac10] 0x008a9000 + 0x10ac10 = 0x009b3c10
.byte 0x05, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ac20] 0x008a9000 + 0x10ac20 = 0x009b3c20
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x24, 0xc0, 0x00, 0x18, 0x3c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ac30] 0x008a9000 + 0x10ac30 = 0x009b3c30
RTTIBaseClassDescriptor CollectionData@UR_Articulate 4                                                             // [0x10ac40] 0x008a9000 + 0x10ac40 = 0x009b3c40
.byte 0x40, 0x3c, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x10ac58] 0x008a9000 + 0x10ac58 = 0x009b3c58
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ac60] 0x008a9000 + 0x10ac60 = 0x009b3c60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0x3c, 0x9b, 0x00               // [0x10ac70] 0x008a9000 + 0x10ac70 = 0x009b3c70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x24, 0xc0, 0x00               // [0x10ac80] 0x008a9000 + 0x10ac80 = 0x009b3c80
.byte 0x70, 0x3c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ac90] 0x008a9000 + 0x10ac90 = 0x009b3c90
RTTIBaseClassDescriptor AtomData@UR_Articulate 4                                                                   // [0x10ac98] 0x008a9000 + 0x10ac98 = 0x009b3c98
.byte 0x98, 0x3c, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10acb0] 0x008a9000 + 0x10acb0 = 0x009b3cb0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10acc0] 0x008a9000 + 0x10acc0 = 0x009b3cc0
.byte 0x05, 0x00, 0x00, 0x00, 0xb0, 0x3c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10acd0] 0x008a9000 + 0x10acd0 = 0x009b3cd0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0x24, 0xc0, 0x00, 0xc8, 0x3c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ace0] 0x008a9000 + 0x10ace0 = 0x009b3ce0
RTTIBaseClassDescriptor CollectionData@ZR_SurfRevol 4                                                              // [0x10acf0] 0x008a9000 + 0x10acf0 = 0x009b3cf0
.byte 0xf0, 0x3c, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x10ad08] 0x008a9000 + 0x10ad08 = 0x009b3d08
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ad10] 0x008a9000 + 0x10ad10 = 0x009b3d10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x3d, 0x9b, 0x00               // [0x10ad20] 0x008a9000 + 0x10ad20 = 0x009b3d20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x25, 0xc0, 0x00               // [0x10ad30] 0x008a9000 + 0x10ad30 = 0x009b3d30
.byte 0x20, 0x3d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ad40] 0x008a9000 + 0x10ad40 = 0x009b3d40
RTTIBaseClassDescriptor ZR_SurfRevol 3                                                                             // [0x10ad48] 0x008a9000 + 0x10ad48 = 0x009b3d48
.byte 0x48, 0x3d, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10ad60] 0x008a9000 + 0x10ad60 = 0x009b3d60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ad70] 0x008a9000 + 0x10ad70 = 0x009b3d70
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0x3d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ad80] 0x008a9000 + 0x10ad80 = 0x009b3d80
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0x25, 0xc0, 0x00, 0x78, 0x3d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ad90] 0x008a9000 + 0x10ad90 = 0x009b3d90
RTTIBaseClassDescriptor TestFunnelSpout 1                                                                          // [0x10ada0] 0x008a9000 + 0x10ada0 = 0x009b3da0
.byte 0xa0, 0x3d, 0x9b, 0x00, 0x90, 0x3e, 0x9b, 0x00                                                               // [0x10adb8] 0x008a9000 + 0x10adb8 = 0x009b3db8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10adc0] 0x008a9000 + 0x10adc0 = 0x009b3dc0
.byte 0x02, 0x00, 0x00, 0x00, 0xb8, 0x3d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10add0] 0x008a9000 + 0x10add0 = 0x009b3dd0
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x25, 0xc0, 0x00, 0xc8, 0x3d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ade0] 0x008a9000 + 0x10ade0 = 0x009b3de0
RTTIBaseClassDescriptor TestFunnelParab 1                                                                          // [0x10adf0] 0x008a9000 + 0x10adf0 = 0x009b3df0
.byte 0xf0, 0x3d, 0x9b, 0x00, 0x90, 0x3e, 0x9b, 0x00                                                               // [0x10ae08] 0x008a9000 + 0x10ae08 = 0x009b3e08
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ae10] 0x008a9000 + 0x10ae10 = 0x009b3e10
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0x3e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ae20] 0x008a9000 + 0x10ae20 = 0x009b3e20
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0x25, 0xc0, 0x00, 0x18, 0x3e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ae30] 0x008a9000 + 0x10ae30 = 0x009b3e30
RTTIBaseClassDescriptor TestFunnel 1                                                                               // [0x10ae40] 0x008a9000 + 0x10ae40 = 0x009b3e40
.byte 0x40, 0x3e, 0x9b, 0x00, 0x90, 0x3e, 0x9b, 0x00                                                               // [0x10ae58] 0x008a9000 + 0x10ae58 = 0x009b3e58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ae60] 0x008a9000 + 0x10ae60 = 0x009b3e60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0x3e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ae70] 0x008a9000 + 0x10ae70 = 0x009b3e70
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x25, 0xc0, 0x00, 0x68, 0x3e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ae80] 0x008a9000 + 0x10ae80 = 0x009b3e80
RTTIBaseClassDescriptor FuncT 0                                                                                    // [0x10ae90] 0x008a9000 + 0x10ae90 = 0x009b3e90
RTTIBaseClassDescriptor TestDisk 1                                                                                 // [0x10aea8] 0x008a9000 + 0x10aea8 = 0x009b3ea8
.byte 0xa8, 0x3e, 0x9b, 0x00, 0x90, 0x3e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10aec0] 0x008a9000 + 0x10aec0 = 0x009b3ec0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x9b, 0x00               // [0x10aed0] 0x008a9000 + 0x10aed0 = 0x009b3ed0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x25, 0xc0, 0x00               // [0x10aee0] 0x008a9000 + 0x10aee0 = 0x009b3ee0
.byte 0xd0, 0x3e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10aef0] 0x008a9000 + 0x10aef0 = 0x009b3ef0
RTTIBaseClassDescriptor CollectionData@UR_RingSpin 4                                                               // [0x10aef8] 0x008a9000 + 0x10aef8 = 0x009b3ef8
.byte 0xf8, 0x3e, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10af10] 0x008a9000 + 0x10af10 = 0x009b3f10
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10af20] 0x008a9000 + 0x10af20 = 0x009b3f20
.byte 0x05, 0x00, 0x00, 0x00, 0x10, 0x3f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10af30] 0x008a9000 + 0x10af30 = 0x009b3f30
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0x26, 0xc0, 0x00, 0x28, 0x3f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10af40] 0x008a9000 + 0x10af40 = 0x009b3f40
RTTIBaseClassDescriptor AtomData@UR_GesturingRecognised 4                                                          // [0x10af50] 0x008a9000 + 0x10af50 = 0x009b3f50
.byte 0x50, 0x3f, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x10af68] 0x008a9000 + 0x10af68 = 0x009b3f68
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10af70] 0x008a9000 + 0x10af70 = 0x009b3f70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x68, 0x3f, 0x9b, 0x00               // [0x10af80] 0x008a9000 + 0x10af80 = 0x009b3f80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x27, 0xc0, 0x00               // [0x10af90] 0x008a9000 + 0x10af90 = 0x009b3f90
.byte 0x80, 0x3f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10afa0] 0x008a9000 + 0x10afa0 = 0x009b3fa0
RTTIBaseClassDescriptor UR_GesturingRecognised 3                                                                   // [0x10afa8] 0x008a9000 + 0x10afa8 = 0x009b3fa8
.byte 0xa8, 0x3f, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10afc0] 0x008a9000 + 0x10afc0 = 0x009b3fc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10afd0] 0x008a9000 + 0x10afd0 = 0x009b3fd0
.byte 0x04, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10afe0] 0x008a9000 + 0x10afe0 = 0x009b3fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0x27, 0xc0, 0x00, 0xd8, 0x3f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10aff0] 0x008a9000 + 0x10aff0 = 0x009b3ff0
RTTIBaseClassDescriptor ZR_ChainGesture 3                                                                          // [0x10b000] 0x008a9000 + 0x10b000 = 0x009b4000
.byte 0x00, 0x40, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10b018] 0x008a9000 + 0x10b018 = 0x009b4018
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b020] 0x008a9000 + 0x10b020 = 0x009b4020
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x40, 0x9b, 0x00               // [0x10b030] 0x008a9000 + 0x10b030 = 0x009b4030
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x27, 0xc0, 0x00               // [0x10b040] 0x008a9000 + 0x10b040 = 0x009b4040
.byte 0x30, 0x40, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b050] 0x008a9000 + 0x10b050 = 0x009b4050
RTTIBaseClassDescriptor ParentCollectionData@ZR_ChainGesture 4                                                     // [0x10b058] 0x008a9000 + 0x10b058 = 0x009b4058
.byte 0x58, 0x40, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10b070] 0x008a9000 + 0x10b070 = 0x009b4070
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b080] 0x008a9000 + 0x10b080 = 0x009b4080
.byte 0x05, 0x00, 0x00, 0x00, 0x70, 0x40, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b090] 0x008a9000 + 0x10b090 = 0x009b4090
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x27, 0xc0, 0x00, 0x88, 0x40, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b0a0] 0x008a9000 + 0x10b0a0 = 0x009b40a0
RTTIBaseClassDescriptor AtomData@ZR_ChainGesture 4                                                                 // [0x10b0b0] 0x008a9000 + 0x10b0b0 = 0x009b40b0
.byte 0xb0, 0x40, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x10b0c8] 0x008a9000 + 0x10b0c8 = 0x009b40c8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b0d0] 0x008a9000 + 0x10b0d0 = 0x009b40d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xc8, 0x40, 0x9b, 0x00               // [0x10b0e0] 0x008a9000 + 0x10b0e0 = 0x009b40e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x28, 0xc0, 0x00               // [0x10b0f0] 0x008a9000 + 0x10b0f0 = 0x009b40f0
.byte 0xe0, 0x40, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b100] 0x008a9000 + 0x10b100 = 0x009b4100
RTTIBaseClassDescriptor Band@PHandFX 3                                                                             // [0x10b108] 0x008a9000 + 0x10b108 = 0x009b4108
.byte 0x08, 0x41, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10b120] 0x008a9000 + 0x10b120 = 0x009b4120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b130] 0x008a9000 + 0x10b130 = 0x009b4130
.byte 0x04, 0x00, 0x00, 0x00, 0x20, 0x41, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b140] 0x008a9000 + 0x10b140 = 0x009b4140
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x28, 0xc0, 0x00, 0x38, 0x41, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b150] 0x008a9000 + 0x10b150 = 0x009b4150
RTTIBaseClassDescriptor PSysHandFX 0                                                                               // [0x10b160] 0x008a9000 + 0x10b160 = 0x009b4160
RTTIBaseClassDescriptor PHandFX 1                                                                                  // [0x10b178] 0x008a9000 + 0x10b178 = 0x009b4178
.byte 0x78, 0x41, 0x9b, 0x00, 0x60, 0x41, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b190] 0x008a9000 + 0x10b190 = 0x009b4190
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0x41, 0x9b, 0x00               // [0x10b1a0] 0x008a9000 + 0x10b1a0 = 0x009b41a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x29, 0xc0, 0x00               // [0x10b1b0] 0x008a9000 + 0x10b1b0 = 0x009b41b0
.byte 0xa0, 0x41, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b1c0] 0x008a9000 + 0x10b1c0 = 0x009b41c0
RTTIBaseClassDescriptor UR_Lightning_CollectionData 4                                                              // [0x10b1c8] 0x008a9000 + 0x10b1c8 = 0x009b41c8
.byte 0xc8, 0x41, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10b1e0] 0x008a9000 + 0x10b1e0 = 0x009b41e0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b1f0] 0x008a9000 + 0x10b1f0 = 0x009b41f0
.byte 0x05, 0x00, 0x00, 0x00, 0xe0, 0x41, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b200] 0x008a9000 + 0x10b200 = 0x009b4200
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x42, 0xc0, 0x00, 0xf8, 0x41, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b210] 0x008a9000 + 0x10b210 = 0x009b4210
RTTIBaseClassDescriptor UR_Lightning 3                                                                             // [0x10b220] 0x008a9000 + 0x10b220 = 0x009b4220
.byte 0x20, 0x42, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10b238] 0x008a9000 + 0x10b238 = 0x009b4238
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b240] 0x008a9000 + 0x10b240 = 0x009b4240
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x42, 0x9b, 0x00               // [0x10b250] 0x008a9000 + 0x10b250 = 0x009b4250
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x42, 0xc0, 0x00               // [0x10b260] 0x008a9000 + 0x10b260 = 0x009b4260
.byte 0x50, 0x42, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b270] 0x008a9000 + 0x10b270 = 0x009b4270
RTTIBaseClassDescriptor AtomData@UR_ObjectArcer 4                                                                  // [0x10b278] 0x008a9000 + 0x10b278 = 0x009b4278
.byte 0x78, 0x42, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10b290] 0x008a9000 + 0x10b290 = 0x009b4290
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b2a0] 0x008a9000 + 0x10b2a0 = 0x009b42a0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0x42, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b2b0] 0x008a9000 + 0x10b2b0 = 0x009b42b0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0x42, 0xc0, 0x00, 0xa8, 0x42, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b2c0] 0x008a9000 + 0x10b2c0 = 0x009b42c0
RTTIBaseClassDescriptor UR_LightningStrike 3                                                                       // [0x10b2d0] 0x008a9000 + 0x10b2d0 = 0x009b42d0
.byte 0xd0, 0x42, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10b2e8] 0x008a9000 + 0x10b2e8 = 0x009b42e8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b2f0] 0x008a9000 + 0x10b2f0 = 0x009b42f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x42, 0x9b, 0x00               // [0x10b300] 0x008a9000 + 0x10b300 = 0x009b4300
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x43, 0xc0, 0x00               // [0x10b310] 0x008a9000 + 0x10b310 = 0x009b4310
.byte 0x00, 0x43, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b320] 0x008a9000 + 0x10b320 = 0x009b4320
RTTIBaseClassDescriptor AtomData@UR_LightningStrike 4                                                              // [0x10b328] 0x008a9000 + 0x10b328 = 0x009b4328
.byte 0x28, 0x43, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10b340] 0x008a9000 + 0x10b340 = 0x009b4340
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b350] 0x008a9000 + 0x10b350 = 0x009b4350
.byte 0x05, 0x00, 0x00, 0x00, 0x40, 0x43, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b360] 0x008a9000 + 0x10b360 = 0x009b4360
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x43, 0xc0, 0x00, 0x58, 0x43, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b370] 0x008a9000 + 0x10b370 = 0x009b4370
RTTIBaseClassDescriptor CollectionData@UR_TownCentreBelief 4                                                       // [0x10b380] 0x008a9000 + 0x10b380 = 0x009b4380
.byte 0x80, 0x43, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00                                                               // [0x10b398] 0x008a9000 + 0x10b398 = 0x009b4398
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b3a0] 0x008a9000 + 0x10b3a0 = 0x009b43a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x98, 0x43, 0x9b, 0x00               // [0x10b3b0] 0x008a9000 + 0x10b3b0 = 0x009b43b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x43, 0xc0, 0x00               // [0x10b3c0] 0x008a9000 + 0x10b3c0 = 0x009b43c0
.byte 0xb0, 0x43, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b3d0] 0x008a9000 + 0x10b3d0 = 0x009b43d0
RTTIBaseClassDescriptor AtomData@UR_TownCentreBelief 4                                                             // [0x10b3d8] 0x008a9000 + 0x10b3d8 = 0x009b43d8
.byte 0xd8, 0x43, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10b3f0] 0x008a9000 + 0x10b3f0 = 0x009b43f0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b400] 0x008a9000 + 0x10b400 = 0x009b4400
.byte 0x05, 0x00, 0x00, 0x00, 0xf0, 0x43, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b410] 0x008a9000 + 0x10b410 = 0x009b4410
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0x43, 0xc0, 0x00, 0x08, 0x44, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b420] 0x008a9000 + 0x10b420 = 0x009b4420
RTTIBaseClassDescriptor AtomData@UR_LightSheetOnObject 4                                                           // [0x10b430] 0x008a9000 + 0x10b430 = 0x009b4430
.byte 0x30, 0x44, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x10b448] 0x008a9000 + 0x10b448 = 0x009b4448
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b450] 0x008a9000 + 0x10b450 = 0x009b4450
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x48, 0x44, 0x9b, 0x00               // [0x10b460] 0x008a9000 + 0x10b460 = 0x009b4460
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x44, 0xc0, 0x00               // [0x10b470] 0x008a9000 + 0x10b470 = 0x009b4470
.byte 0x60, 0x44, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b480] 0x008a9000 + 0x10b480 = 0x009b4480
RTTIBaseClassDescriptor UR_LightSheetOnObject 3                                                                    // [0x10b488] 0x008a9000 + 0x10b488 = 0x009b4488
.byte 0x88, 0x44, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10b4a0] 0x008a9000 + 0x10b4a0 = 0x009b44a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b4b0] 0x008a9000 + 0x10b4b0 = 0x009b44b0
.byte 0x04, 0x00, 0x00, 0x00, 0xa0, 0x44, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b4c0] 0x008a9000 + 0x10b4c0 = 0x009b44c0
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0x44, 0xc0, 0x00, 0xb8, 0x44, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b4d0] 0x008a9000 + 0x10b4d0 = 0x009b44d0
RTTIBaseClassDescriptor AtomData@UR_VolFXOnObject 4                                                                // [0x10b4e0] 0x008a9000 + 0x10b4e0 = 0x009b44e0
.byte 0xe0, 0x44, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x10b4f8] 0x008a9000 + 0x10b4f8 = 0x009b44f8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b500] 0x008a9000 + 0x10b500 = 0x009b4500
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0x44, 0x9b, 0x00               // [0x10b510] 0x008a9000 + 0x10b510 = 0x009b4510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x44, 0xc0, 0x00               // [0x10b520] 0x008a9000 + 0x10b520 = 0x009b4520
.byte 0x10, 0x45, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b530] 0x008a9000 + 0x10b530 = 0x009b4530
RTTIBaseClassDescriptor UR_VolFXOnObject 3                                                                         // [0x10b538] 0x008a9000 + 0x10b538 = 0x009b4538
.byte 0x38, 0x45, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10b550] 0x008a9000 + 0x10b550 = 0x009b4550
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b560] 0x008a9000 + 0x10b560 = 0x009b4560
.byte 0x04, 0x00, 0x00, 0x00, 0x50, 0x45, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b570] 0x008a9000 + 0x10b570 = 0x009b4570
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x44, 0xc0, 0x00, 0x68, 0x45, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b580] 0x008a9000 + 0x10b580 = 0x009b4580
.byte 0x80, 0x7e, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x10b590] 0x008a9000 + 0x10b590 = 0x009b4590
.byte 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x18, 0x7f, 0x9c, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x10b5a0] 0x008a9000 + 0x10b5a0 = 0x009b45a0
.byte 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00               // [0x10b5b0] 0x008a9000 + 0x10b5b0 = 0x009b45b0
.byte 0x90, 0xea, 0x9c, 0x00, 0x02, 0x00, 0x00, 0x00                                                               // [0x10b5c0] 0x008a9000 + 0x10b5c0 = 0x009b45c0
.byte 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x10b5c8] 0x008a9000 + 0x10b5c8 = 0x009b45c8
.byte 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00                                                               // [0x10b5d0] 0x008a9000 + 0x10b5d0 = 0x009b45d0
RTTIBaseClassDescriptor GJAnimVolFX 3                                                                              // [0x10b5d8] 0x008a9000 + 0x10b5d8 = 0x009b45d8
.byte 0xd8, 0x45, 0x9b, 0x00, 0xc0, 0x45, 0x9b, 0x00, 0xa8, 0x45, 0x9b, 0x00, 0x90, 0x45, 0x9b, 0x00               // [0x10b5f0] 0x008a9000 + 0x10b5f0 = 0x009b45f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b600] 0x008a9000 + 0x10b600 = 0x009b4600
.byte 0x04, 0x00, 0x00, 0x00, 0xf0, 0x45, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b610] 0x008a9000 + 0x10b610 = 0x009b4610
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x44, 0xc0, 0x00, 0x08, 0x46, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b620] 0x008a9000 + 0x10b620 = 0x009b4620
.byte 0x70, 0x46, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10b630] 0x008a9000 + 0x10b630 = 0x009b4630
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b640] 0x008a9000 + 0x10b640 = 0x009b4640
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0x46, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b650] 0x008a9000 + 0x10b650 = 0x009b4650
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0x44, 0xc0, 0x00, 0x48, 0x46, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b660] 0x008a9000 + 0x10b660 = 0x009b4660
RTTIBaseClassDescriptor OnceOnlyCreateRule 3                                                                       // [0x10b670] 0x008a9000 + 0x10b670 = 0x009b4670
RTTIBaseClassDescriptor CreateWithInitialDirection 4                                                               // [0x10b688] 0x008a9000 + 0x10b688 = 0x009b4688
.byte 0x88, 0x46, 0x9b, 0x00, 0x70, 0x46, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10b6a0] 0x008a9000 + 0x10b6a0 = 0x009b46a0
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b6b0] 0x008a9000 + 0x10b6b0 = 0x009b46b0
.byte 0x05, 0x00, 0x00, 0x00, 0xa0, 0x46, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b6c0] 0x008a9000 + 0x10b6c0 = 0x009b46c0
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0x45, 0xc0, 0x00, 0xb8, 0x46, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b6d0] 0x008a9000 + 0x10b6d0 = 0x009b46d0
RTTIBaseClassDescriptor CreateRuleAnAtom 4                                                                         // [0x10b6e0] 0x008a9000 + 0x10b6e0 = 0x009b46e0
.byte 0xe0, 0x46, 0x9b, 0x00, 0x70, 0x46, 0x9b, 0x00                                                               // [0x10b6f8] 0x008a9000 + 0x10b6f8 = 0x009b46f8
.byte 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b700] 0x008a9000 + 0x10b700 = 0x009b4700
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0x46, 0x9b, 0x00               // [0x10b710] 0x008a9000 + 0x10b710 = 0x009b4710
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x45, 0xc0, 0x00               // [0x10b720] 0x008a9000 + 0x10b720 = 0x009b4720
.byte 0x10, 0x47, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b730] 0x008a9000 + 0x10b730 = 0x009b4730
RTTIBaseClassDescriptor UR_FireWorkSimple 4                                                                        // [0x10b738] 0x008a9000 + 0x10b738 = 0x009b4738
.byte 0x38, 0x47, 0x9b, 0x00, 0x70, 0x46, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10b750] 0x008a9000 + 0x10b750 = 0x009b4750
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b760] 0x008a9000 + 0x10b760 = 0x009b4760
.byte 0x05, 0x00, 0x00, 0x00, 0x50, 0x47, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b770] 0x008a9000 + 0x10b770 = 0x009b4770
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x45, 0xc0, 0x00, 0x68, 0x47, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b780] 0x008a9000 + 0x10b780 = 0x009b4780
RTTIBaseClassDescriptor UR_HandSprinkle 3                                                                          // [0x10b790] 0x008a9000 + 0x10b790 = 0x009b4790
.byte 0x90, 0x47, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10b7a8] 0x008a9000 + 0x10b7a8 = 0x009b47a8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b7b0] 0x008a9000 + 0x10b7b0 = 0x009b47b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0x47, 0x9b, 0x00               // [0x10b7c0] 0x008a9000 + 0x10b7c0 = 0x009b47c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x45, 0xc0, 0x00               // [0x10b7d0] 0x008a9000 + 0x10b7d0 = 0x009b47d0
.byte 0xc0, 0x47, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b7e0] 0x008a9000 + 0x10b7e0 = 0x009b47e0
RTTIBaseClassDescriptor UR_HealSpellChakra 3                                                                       // [0x10b7e8] 0x008a9000 + 0x10b7e8 = 0x009b47e8
.byte 0xe8, 0x47, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10b800] 0x008a9000 + 0x10b800 = 0x009b4800
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b810] 0x008a9000 + 0x10b810 = 0x009b4810
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x48, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b820] 0x008a9000 + 0x10b820 = 0x009b4820
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0x45, 0xc0, 0x00, 0x18, 0x48, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b830] 0x008a9000 + 0x10b830 = 0x009b4830
RTTIBaseClassDescriptor AtomData@UR_HealSpellChakra 4                                                              // [0x10b840] 0x008a9000 + 0x10b840 = 0x009b4840
.byte 0x40, 0x48, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x10b858] 0x008a9000 + 0x10b858 = 0x009b4858
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b860] 0x008a9000 + 0x10b860 = 0x009b4860
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0x48, 0x9b, 0x00               // [0x10b870] 0x008a9000 + 0x10b870 = 0x009b4870
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x45, 0xc0, 0x00               // [0x10b880] 0x008a9000 + 0x10b880 = 0x009b4880
.byte 0x70, 0x48, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b890] 0x008a9000 + 0x10b890 = 0x009b4890
RTTIBaseClassDescriptor UpdateRuleGravityWithFloor 4                                                               // [0x10b898] 0x008a9000 + 0x10b898 = 0x009b4898
.byte 0x98, 0x48, 0x9b, 0x00, 0xf0, 0x48, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10b8b0] 0x008a9000 + 0x10b8b0 = 0x009b48b0
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b8c0] 0x008a9000 + 0x10b8c0 = 0x009b48c0
.byte 0x05, 0x00, 0x00, 0x00, 0xb0, 0x48, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b8d0] 0x008a9000 + 0x10b8d0 = 0x009b48d0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x46, 0xc0, 0x00, 0xc8, 0x48, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b8e0] 0x008a9000 + 0x10b8e0 = 0x009b48e0
RTTIBaseClassDescriptor UpdateRuleGravity 3                                                                        // [0x10b8f0] 0x008a9000 + 0x10b8f0 = 0x009b48f0
.byte 0xf0, 0x48, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10b908] 0x008a9000 + 0x10b908 = 0x009b4908
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b910] 0x008a9000 + 0x10b910 = 0x009b4910
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x49, 0x9b, 0x00               // [0x10b920] 0x008a9000 + 0x10b920 = 0x009b4920
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x45, 0xc0, 0x00               // [0x10b930] 0x008a9000 + 0x10b930 = 0x009b4930
.byte 0x20, 0x49, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b940] 0x008a9000 + 0x10b940 = 0x009b4940
RTTIBaseClassDescriptor UpdateRuleShieldSpark 3                                                                    // [0x10b948] 0x008a9000 + 0x10b948 = 0x009b4948
.byte 0x48, 0x49, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10b960] 0x008a9000 + 0x10b960 = 0x009b4960
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b970] 0x008a9000 + 0x10b970 = 0x009b4970
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0x49, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b980] 0x008a9000 + 0x10b980 = 0x009b4980
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0x46, 0xc0, 0x00, 0x78, 0x49, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b990] 0x008a9000 + 0x10b990 = 0x009b4990
RTTIBaseClassDescriptor UR_ForestPath 3                                                                            // [0x10b9a0] 0x008a9000 + 0x10b9a0 = 0x009b49a0
.byte 0xa0, 0x49, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10b9b8] 0x008a9000 + 0x10b9b8 = 0x009b49b8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10b9c0] 0x008a9000 + 0x10b9c0 = 0x009b49c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb8, 0x49, 0x9b, 0x00               // [0x10b9d0] 0x008a9000 + 0x10b9d0 = 0x009b49d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x46, 0xc0, 0x00               // [0x10b9e0] 0x008a9000 + 0x10b9e0 = 0x009b49e0
.byte 0xd0, 0x49, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10b9f0] 0x008a9000 + 0x10b9f0 = 0x009b49f0
RTTIBaseClassDescriptor UR_Trail 3                                                                                 // [0x10b9f8] 0x008a9000 + 0x10b9f8 = 0x009b49f8
.byte 0xf8, 0x49, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10ba10] 0x008a9000 + 0x10ba10 = 0x009b4a10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ba20] 0x008a9000 + 0x10ba20 = 0x009b4a20
.byte 0x04, 0x00, 0x00, 0x00, 0x10, 0x4a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ba30] 0x008a9000 + 0x10ba30 = 0x009b4a30
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0x46, 0xc0, 0x00, 0x28, 0x4a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ba40] 0x008a9000 + 0x10ba40 = 0x009b4a40
RTTIBaseClassDescriptor UR_KPStretchHeight 3                                                                       // [0x10ba50] 0x008a9000 + 0x10ba50 = 0x009b4a50
.byte 0x50, 0x4a, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10ba68] 0x008a9000 + 0x10ba68 = 0x009b4a68
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ba70] 0x008a9000 + 0x10ba70 = 0x009b4a70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0x4a, 0x9b, 0x00               // [0x10ba80] 0x008a9000 + 0x10ba80 = 0x009b4a80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x46, 0xc0, 0x00               // [0x10ba90] 0x008a9000 + 0x10ba90 = 0x009b4a90
.byte 0x80, 0x4a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10baa0] 0x008a9000 + 0x10baa0 = 0x009b4aa0
RTTIBaseClassDescriptor ER_GlintsOnTarget 3                                                                        // [0x10baa8] 0x008a9000 + 0x10baa8 = 0x009b4aa8
.byte 0xa8, 0x4a, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10bac0] 0x008a9000 + 0x10bac0 = 0x009b4ac0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bad0] 0x008a9000 + 0x10bad0 = 0x009b4ad0
.byte 0x04, 0x00, 0x00, 0x00, 0xc0, 0x4a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bae0] 0x008a9000 + 0x10bae0 = 0x009b4ae0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x46, 0xc0, 0x00, 0xd8, 0x4a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10baf0] 0x008a9000 + 0x10baf0 = 0x009b4af0
RTTIBaseClassDescriptor ER_BurstFromParentAtom 3                                                                   // [0x10bb00] 0x008a9000 + 0x10bb00 = 0x009b4b00
.byte 0x00, 0x4b, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10bb18] 0x008a9000 + 0x10bb18 = 0x009b4b18
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bb20] 0x008a9000 + 0x10bb20 = 0x009b4b20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x4b, 0x9b, 0x00               // [0x10bb30] 0x008a9000 + 0x10bb30 = 0x009b4b30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xc0, 0x00               // [0x10bb40] 0x008a9000 + 0x10bb40 = 0x009b4b40
.byte 0x30, 0x4b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10bb50] 0x008a9000 + 0x10bb50 = 0x009b4b50
RTTIBaseClassDescriptor ER_EmitFromParentAtom 3                                                                    // [0x10bb58] 0x008a9000 + 0x10bb58 = 0x009b4b58
.byte 0x58, 0x4b, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10bb70] 0x008a9000 + 0x10bb70 = 0x009b4b70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bb80] 0x008a9000 + 0x10bb80 = 0x009b4b80
.byte 0x04, 0x00, 0x00, 0x00, 0x70, 0x4b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bb90] 0x008a9000 + 0x10bb90 = 0x009b4b90
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x47, 0xc0, 0x00, 0x88, 0x4b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bba0] 0x008a9000 + 0x10bba0 = 0x009b4ba0
RTTIBaseClassDescriptor UR_KPMoveAtoms 3                                                                           // [0x10bbb0] 0x008a9000 + 0x10bbb0 = 0x009b4bb0
.byte 0xb0, 0x4b, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10bbc8] 0x008a9000 + 0x10bbc8 = 0x009b4bc8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bbd0] 0x008a9000 + 0x10bbd0 = 0x009b4bd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc8, 0x4b, 0x9b, 0x00               // [0x10bbe0] 0x008a9000 + 0x10bbe0 = 0x009b4be0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x47, 0xc0, 0x00               // [0x10bbf0] 0x008a9000 + 0x10bbf0 = 0x009b4bf0
.byte 0xe0, 0x4b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10bc00] 0x008a9000 + 0x10bc00 = 0x009b4c00
RTTIBaseClassDescriptor UR_WillowWisp 3                                                                            // [0x10bc08] 0x008a9000 + 0x10bc08 = 0x009b4c08
.byte 0x08, 0x4c, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10bc20] 0x008a9000 + 0x10bc20 = 0x009b4c20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bc30] 0x008a9000 + 0x10bc30 = 0x009b4c30
.byte 0x04, 0x00, 0x00, 0x00, 0x20, 0x4c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bc40] 0x008a9000 + 0x10bc40 = 0x009b4c40
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0x47, 0xc0, 0x00, 0x38, 0x4c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bc50] 0x008a9000 + 0x10bc50 = 0x009b4c50
RTTIBaseClassDescriptor ER_MultiPickup 3                                                                           // [0x10bc60] 0x008a9000 + 0x10bc60 = 0x009b4c60
.byte 0x60, 0x4c, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10bc78] 0x008a9000 + 0x10bc78 = 0x009b4c78
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bc80] 0x008a9000 + 0x10bc80 = 0x009b4c80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0x4c, 0x9b, 0x00               // [0x10bc90] 0x008a9000 + 0x10bc90 = 0x009b4c90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x47, 0xc0, 0x00               // [0x10bca0] 0x008a9000 + 0x10bca0 = 0x009b4ca0
.byte 0x90, 0x4c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10bcb0] 0x008a9000 + 0x10bcb0 = 0x009b4cb0
RTTIBaseClassDescriptor CollectionData@ER_MultiPickup 4                                                            // [0x10bcb8] 0x008a9000 + 0x10bcb8 = 0x009b4cb8
.byte 0xb8, 0x4c, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10bcd0] 0x008a9000 + 0x10bcd0 = 0x009b4cd0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bce0] 0x008a9000 + 0x10bce0 = 0x009b4ce0
.byte 0x05, 0x00, 0x00, 0x00, 0xd0, 0x4c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bcf0] 0x008a9000 + 0x10bcf0 = 0x009b4cf0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x47, 0xc0, 0x00, 0xe8, 0x4c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bd00] 0x008a9000 + 0x10bd00 = 0x009b4d00
RTTIBaseClassDescriptor AtomData@ER_MultiPickup 4                                                                  // [0x10bd10] 0x008a9000 + 0x10bd10 = 0x009b4d10
.byte 0x10, 0x4d, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x10bd28] 0x008a9000 + 0x10bd28 = 0x009b4d28
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bd30] 0x008a9000 + 0x10bd30 = 0x009b4d30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x28, 0x4d, 0x9b, 0x00               // [0x10bd40] 0x008a9000 + 0x10bd40 = 0x009b4d40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x47, 0xc0, 0x00               // [0x10bd50] 0x008a9000 + 0x10bd50 = 0x009b4d50
.byte 0x40, 0x4d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10bd60] 0x008a9000 + 0x10bd60 = 0x009b4d60
RTTIBaseClassDescriptor ParticleCreator 1                                                                          // [0x10bd68] 0x008a9000 + 0x10bd68 = 0x009b4d68
RTTIBaseClassDescriptor ParticleBaseMeshCreator 2                                                                  // [0x10bd80] 0x008a9000 + 0x10bd80 = 0x009b4d80
.byte 0x80, 0x4d, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10bd98] 0x008a9000 + 0x10bd98 = 0x009b4d98
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bda0] 0x008a9000 + 0x10bda0 = 0x009b4da0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0x4d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bdb0] 0x008a9000 + 0x10bdb0 = 0x009b4db0
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0x48, 0xc0, 0x00, 0xa8, 0x4d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bdc0] 0x008a9000 + 0x10bdc0 = 0x009b4dc0
RTTIBaseClassDescriptor ParticleMeshCreator 3                                                                      // [0x10bdd0] 0x008a9000 + 0x10bdd0 = 0x009b4dd0
.byte 0xd0, 0x4d, 0x9b, 0x00, 0x80, 0x4d, 0x9b, 0x00                                                               // [0x10bde8] 0x008a9000 + 0x10bde8 = 0x009b4de8
.byte 0x68, 0x4d, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bdf0] 0x008a9000 + 0x10bdf0 = 0x009b4df0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x4d, 0x9b, 0x00               // [0x10be00] 0x008a9000 + 0x10be00 = 0x009b4e00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x48, 0xc0, 0x00               // [0x10be10] 0x008a9000 + 0x10be10 = 0x009b4e10
.byte 0x00, 0x4e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10be20] 0x008a9000 + 0x10be20 = 0x009b4e20
RTTIBaseClassDescriptor ParticleMeshCreatorAnimTextured 3                                                          // [0x10be28] 0x008a9000 + 0x10be28 = 0x009b4e28
.byte 0x28, 0x4e, 0x9b, 0x00, 0x80, 0x4d, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10be40] 0x008a9000 + 0x10be40 = 0x009b4e40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10be50] 0x008a9000 + 0x10be50 = 0x009b4e50
.byte 0x04, 0x00, 0x00, 0x00, 0x40, 0x4e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10be60] 0x008a9000 + 0x10be60 = 0x009b4e60
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x48, 0xc0, 0x00, 0x58, 0x4e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10be70] 0x008a9000 + 0x10be70 = 0x009b4e70
RTTIBaseClassDescriptor ParticleGJMeshCreator 2                                                                    // [0x10be80] 0x008a9000 + 0x10be80 = 0x009b4e80
.byte 0x80, 0x4e, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10be98] 0x008a9000 + 0x10be98 = 0x009b4e98
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bea0] 0x008a9000 + 0x10bea0 = 0x009b4ea0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0x4e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10beb0] 0x008a9000 + 0x10beb0 = 0x009b4eb0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x48, 0xc0, 0x00, 0xa8, 0x4e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bec0] 0x008a9000 + 0x10bec0 = 0x009b4ec0
.byte 0x68, 0x4d, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bed0] 0x008a9000 + 0x10bed0 = 0x009b4ed0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd0, 0x4e, 0x9b, 0x00               // [0x10bee0] 0x008a9000 + 0x10bee0 = 0x009b4ee0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xc0, 0x00               // [0x10bef0] 0x008a9000 + 0x10bef0 = 0x009b4ef0
.byte 0xe0, 0x4e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10bf00] 0x008a9000 + 0x10bf00 = 0x009b4f00
RTTIBaseClassDescriptor ParticleAnimCreator 2                                                                      // [0x10bf08] 0x008a9000 + 0x10bf08 = 0x009b4f08
.byte 0x08, 0x4f, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bf20] 0x008a9000 + 0x10bf20 = 0x009b4f20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x4f, 0x9b, 0x00               // [0x10bf30] 0x008a9000 + 0x10bf30 = 0x009b4f30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x48, 0xc0, 0x00               // [0x10bf40] 0x008a9000 + 0x10bf40 = 0x009b4f40
.byte 0x30, 0x4f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10bf50] 0x008a9000 + 0x10bf50 = 0x009b4f50
RTTIBaseClassDescriptor ParticleAnimWithCameraCreator 3                                                            // [0x10bf58] 0x008a9000 + 0x10bf58 = 0x009b4f58
.byte 0x58, 0x4f, 0x9b, 0x00, 0x08, 0x4f, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10bf70] 0x008a9000 + 0x10bf70 = 0x009b4f70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bf80] 0x008a9000 + 0x10bf80 = 0x009b4f80
.byte 0x04, 0x00, 0x00, 0x00, 0x70, 0x4f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bf90] 0x008a9000 + 0x10bf90 = 0x009b4f90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0xc0, 0x00, 0x88, 0x4f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bfa0] 0x008a9000 + 0x10bfa0 = 0x009b4fa0
RTTIBaseClassDescriptor ParticleLightMapCreator 2                                                                  // [0x10bfb0] 0x008a9000 + 0x10bfb0 = 0x009b4fb0
.byte 0xb0, 0x4f, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10bfc8] 0x008a9000 + 0x10bfc8 = 0x009b4fc8
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bfd0] 0x008a9000 + 0x10bfd0 = 0x009b4fd0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0x4f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bfe0] 0x008a9000 + 0x10bfe0 = 0x009b4fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0x49, 0xc0, 0x00, 0xd8, 0x4f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10bff0] 0x008a9000 + 0x10bff0 = 0x009b4ff0
RTTIBaseClassDescriptor ParticleSpriteCreator 2                                                                    // [0x10c000] 0x008a9000 + 0x10c000 = 0x009b5000
.byte 0x00, 0x50, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10c018] 0x008a9000 + 0x10c018 = 0x009b5018
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c020] 0x008a9000 + 0x10c020 = 0x009b5020
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0x50, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c030] 0x008a9000 + 0x10c030 = 0x009b5030
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0x49, 0xc0, 0x00, 0x28, 0x50, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c040] 0x008a9000 + 0x10c040 = 0x009b5040
RTTIBaseClassDescriptor ParticleSymbolSpriteCreator 2                                                              // [0x10c050] 0x008a9000 + 0x10c050 = 0x009b5050
.byte 0x50, 0x50, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10c068] 0x008a9000 + 0x10c068 = 0x009b5068
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c070] 0x008a9000 + 0x10c070 = 0x009b5070
.byte 0x03, 0x00, 0x00, 0x00, 0x68, 0x50, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c080] 0x008a9000 + 0x10c080 = 0x009b5080
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x49, 0xc0, 0x00, 0x78, 0x50, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c090] 0x008a9000 + 0x10c090 = 0x009b5090
RTTIBaseClassDescriptor ParticleMistCreator 2                                                                      // [0x10c0a0] 0x008a9000 + 0x10c0a0 = 0x009b50a0
.byte 0xa0, 0x50, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10c0b8] 0x008a9000 + 0x10c0b8 = 0x009b50b8
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c0c0] 0x008a9000 + 0x10c0c0 = 0x009b50c0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0x50, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c0d0] 0x008a9000 + 0x10c0d0 = 0x009b50d0
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x49, 0xc0, 0x00, 0xc8, 0x50, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c0e0] 0x008a9000 + 0x10c0e0 = 0x009b50e0
RTTIBaseClassDescriptor ParticleBaseChainCreator 2                                                                 // [0x10c0f0] 0x008a9000 + 0x10c0f0 = 0x009b50f0
RTTIBaseClassDescriptor ParticleChainCreator 3                                                                     // [0x10c108] 0x008a9000 + 0x10c108 = 0x009b5108
.byte 0x08, 0x51, 0x9b, 0x00, 0xf0, 0x50, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10c120] 0x008a9000 + 0x10c120 = 0x009b5120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c130] 0x008a9000 + 0x10c130 = 0x009b5130
.byte 0x04, 0x00, 0x00, 0x00, 0x20, 0x51, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c140] 0x008a9000 + 0x10c140 = 0x009b5140
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x4a, 0xc0, 0x00, 0x38, 0x51, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c150] 0x008a9000 + 0x10c150 = 0x009b5150
RTTIBaseClassDescriptor ParticleGoodEvilCreator 2                                                                  // [0x10c160] 0x008a9000 + 0x10c160 = 0x009b5160
.byte 0x60, 0x51, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10c178] 0x008a9000 + 0x10c178 = 0x009b5178
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c180] 0x008a9000 + 0x10c180 = 0x009b5180
.byte 0x03, 0x00, 0x00, 0x00, 0x78, 0x51, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c190] 0x008a9000 + 0x10c190 = 0x009b5190
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x4a, 0xc0, 0x00, 0x88, 0x51, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c1a0] 0x008a9000 + 0x10c1a0 = 0x009b51a0
RTTIBaseClassDescriptor ParticleVolBlendMeshCreator 2                                                              // [0x10c1b0] 0x008a9000 + 0x10c1b0 = 0x009b51b0
.byte 0xb0, 0x51, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00                                                               // [0x10c1c8] 0x008a9000 + 0x10c1c8 = 0x009b51c8
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c1d0] 0x008a9000 + 0x10c1d0 = 0x009b51d0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0x51, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c1e0] 0x008a9000 + 0x10c1e0 = 0x009b51e0
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x4a, 0xc0, 0x00, 0xd8, 0x51, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c1f0] 0x008a9000 + 0x10c1f0 = 0x009b51f0
RTTIBaseClassDescriptor BoolArrayProperty 1                                                                        // [0x10c200] 0x008a9000 + 0x10c200 = 0x009b5200
RTTIBaseClassDescriptor ?$TemplateBoolArrayProperty@VPSysFileData@@ 2                                              // [0x10c218] 0x008a9000 + 0x10c218 = 0x009b5218
.byte 0x18, 0x52, 0x9b, 0x00, 0x00, 0x52, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c230] 0x008a9000 + 0x10c230 = 0x009b5230
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x52, 0x9b, 0x00               // [0x10c240] 0x008a9000 + 0x10c240 = 0x009b5240
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x4a, 0xc0, 0x00               // [0x10c250] 0x008a9000 + 0x10c250 = 0x009b5250
.byte 0x40, 0x52, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c260] 0x008a9000 + 0x10c260 = 0x009b5260
RTTIBaseClassDescriptor TPointerProperty 1                                                                         // [0x10c268] 0x008a9000 + 0x10c268 = 0x009b5268
RTTIBaseClassDescriptor ?$PointerProperty@VTEventCondition@@ 2                                                     // [0x10c280] 0x008a9000 + 0x10c280 = 0x009b5280
.byte 0x80, 0x52, 0x9b, 0x00, 0x68, 0x52, 0x9b, 0x00                                                               // [0x10c298] 0x008a9000 + 0x10c298 = 0x009b5298
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c2a0] 0x008a9000 + 0x10c2a0 = 0x009b52a0
.byte 0x03, 0x00, 0x00, 0x00, 0x98, 0x52, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c2b0] 0x008a9000 + 0x10c2b0 = 0x009b52b0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x4b, 0xc0, 0x00, 0xa8, 0x52, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c2c0] 0x008a9000 + 0x10c2c0 = 0x009b52c0
RTTIBaseClassDescriptor ?$GetSetIntegerProperty@VUR_Flocking@@ 2                                                   // [0x10c2d0] 0x008a9000 + 0x10c2d0 = 0x009b52d0
.byte 0xd0, 0x52, 0x9b, 0x00, 0xe0, 0x0a, 0x9b, 0x00                                                               // [0x10c2e8] 0x008a9000 + 0x10c2e8 = 0x009b52e8
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c2f0] 0x008a9000 + 0x10c2f0 = 0x009b52f0
.byte 0x03, 0x00, 0x00, 0x00, 0xe8, 0x52, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c300] 0x008a9000 + 0x10c300 = 0x009b5300
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x4d, 0xc0, 0x00, 0xf8, 0x52, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c310] 0x008a9000 + 0x10c310 = 0x009b5310
.byte 0xe0, 0x0a, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c320] 0x008a9000 + 0x10c320 = 0x009b5320
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x53, 0x9b, 0x00               // [0x10c330] 0x008a9000 + 0x10c330 = 0x009b5330
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xfa, 0xbe, 0x00               // [0x10c340] 0x008a9000 + 0x10c340 = 0x009b5340
.byte 0x30, 0x53, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c350] 0x008a9000 + 0x10c350 = 0x009b5350
RTTIBaseClassDescriptor ?$GetSetFloatProperty@VUpdateRuleGravity@@ 2                                               // [0x10c358] 0x008a9000 + 0x10c358 = 0x009b5358
.byte 0x58, 0x53, 0x9b, 0x00, 0x78, 0x0a, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c370] 0x008a9000 + 0x10c370 = 0x009b5370
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0x53, 0x9b, 0x00               // [0x10c380] 0x008a9000 + 0x10c380 = 0x009b5380
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0xc0, 0x00               // [0x10c390] 0x008a9000 + 0x10c390 = 0x009b5390
.byte 0x80, 0x53, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c3a0] 0x008a9000 + 0x10c3a0 = 0x009b53a0
RTTIBaseClassDescriptor ?$GetSetIntegerProperty@VUpdateRuleRotatePrincipalAxis@@ 2                                 // [0x10c3a8] 0x008a9000 + 0x10c3a8 = 0x009b53a8
.byte 0xa8, 0x53, 0x9b, 0x00, 0xe0, 0x0a, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c3c0] 0x008a9000 + 0x10c3c0 = 0x009b53c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x53, 0x9b, 0x00               // [0x10c3d0] 0x008a9000 + 0x10c3d0 = 0x009b53d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x51, 0xc0, 0x00               // [0x10c3e0] 0x008a9000 + 0x10c3e0 = 0x009b53e0
.byte 0xd0, 0x53, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c3f0] 0x008a9000 + 0x10c3f0 = 0x009b53f0
RTTIBaseClassDescriptor ?$PointerProperty@VFloatProvider@@ 2                                                       // [0x10c3f8] 0x008a9000 + 0x10c3f8 = 0x009b53f8
.byte 0xf8, 0x53, 0x9b, 0x00, 0x68, 0x52, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c410] 0x008a9000 + 0x10c410 = 0x009b5410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x54, 0x9b, 0x00               // [0x10c420] 0x008a9000 + 0x10c420 = 0x009b5420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x51, 0xc0, 0x00               // [0x10c430] 0x008a9000 + 0x10c430 = 0x009b5430
.byte 0x20, 0x54, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c440] 0x008a9000 + 0x10c440 = 0x009b5440
RTTIBaseClassDescriptor ?$PointerProperty@VParticleCreator@@ 2                                                     // [0x10c448] 0x008a9000 + 0x10c448 = 0x009b5448
.byte 0x48, 0x54, 0x9b, 0x00, 0x68, 0x52, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c460] 0x008a9000 + 0x10c460 = 0x009b5460
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0x54, 0x9b, 0x00               // [0x10c470] 0x008a9000 + 0x10c470 = 0x009b5470
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x55, 0xc0, 0x00               // [0x10c480] 0x008a9000 + 0x10c480 = 0x009b5480
.byte 0x70, 0x54, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c490] 0x008a9000 + 0x10c490 = 0x009b5490
RTTIBaseClassDescriptor FloatArrayProperty 1                                                                       // [0x10c498] 0x008a9000 + 0x10c498 = 0x009b5498
RTTIBaseClassDescriptor ?$TemplateFloatArrayProperty@VUR_KPStretchHeight@@ 2                                       // [0x10c4b0] 0x008a9000 + 0x10c4b0 = 0x009b54b0
.byte 0xb0, 0x54, 0x9b, 0x00, 0x98, 0x54, 0x9b, 0x00                                                               // [0x10c4c8] 0x008a9000 + 0x10c4c8 = 0x009b54c8
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c4d0] 0x008a9000 + 0x10c4d0 = 0x009b54d0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0x54, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c4e0] 0x008a9000 + 0x10c4e0 = 0x009b54e0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x59, 0xc0, 0x00, 0xd8, 0x54, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c4f0] 0x008a9000 + 0x10c4f0 = 0x009b54f0
RTTIBaseClassDescriptor ?$GetSetFloatProperty@VUR_MoveAtom@@ 2                                                     // [0x10c500] 0x008a9000 + 0x10c500 = 0x009b5500
.byte 0x00, 0x55, 0x9b, 0x00, 0x78, 0x0a, 0x9b, 0x00                                                               // [0x10c518] 0x008a9000 + 0x10c518 = 0x009b5518
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c520] 0x008a9000 + 0x10c520 = 0x009b5520
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0x55, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c530] 0x008a9000 + 0x10c530 = 0x009b5530
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x5a, 0xc0, 0x00, 0x28, 0x55, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c540] 0x008a9000 + 0x10c540 = 0x009b5540
.byte 0x78, 0x0a, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c550] 0x008a9000 + 0x10c550 = 0x009b5550
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x55, 0x9b, 0x00               // [0x10c560] 0x008a9000 + 0x10c560 = 0x009b5560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0xbe, 0x00               // [0x10c570] 0x008a9000 + 0x10c570 = 0x009b5570
.byte 0x60, 0x55, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c580] 0x008a9000 + 0x10c580 = 0x009b5580
RTTIBaseClassDescriptor ?$TemplateFloatArrayProperty@VUR_KPMoveAtoms@@ 2                                           // [0x10c588] 0x008a9000 + 0x10c588 = 0x009b5588
.byte 0x88, 0x55, 0x9b, 0x00, 0x98, 0x54, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c5a0] 0x008a9000 + 0x10c5a0 = 0x009b55a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa0, 0x55, 0x9b, 0x00               // [0x10c5b0] 0x008a9000 + 0x10c5b0 = 0x009b55b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x5a, 0xc0, 0x00               // [0x10c5c0] 0x008a9000 + 0x10c5c0 = 0x009b55c0
.byte 0xb0, 0x55, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c5d0] 0x008a9000 + 0x10c5d0 = 0x009b55d0
RTTIBaseClassDescriptor ?$TemplateFloatArrayProperty@VUR_ForestPath@@ 2                                            // [0x10c5d8] 0x008a9000 + 0x10c5d8 = 0x009b55d8
.byte 0xd8, 0x55, 0x9b, 0x00, 0x98, 0x54, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c5f0] 0x008a9000 + 0x10c5f0 = 0x009b55f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x55, 0x9b, 0x00               // [0x10c600] 0x008a9000 + 0x10c600 = 0x009b5600
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x5b, 0xc0, 0x00               // [0x10c610] 0x008a9000 + 0x10c610 = 0x009b5610
.byte 0x00, 0x56, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c620] 0x008a9000 + 0x10c620 = 0x009b5620
RTTIBaseClassDescriptor IntegerArrayProperty 1                                                                     // [0x10c628] 0x008a9000 + 0x10c628 = 0x009b5628
RTTIBaseClassDescriptor ?$TemplateIntegerArrayProperty@VAddSubCollectionsToAtom@@ 2                                // [0x10c640] 0x008a9000 + 0x10c640 = 0x009b5640
.byte 0x40, 0x56, 0x9b, 0x00, 0x28, 0x56, 0x9b, 0x00                                                               // [0x10c658] 0x008a9000 + 0x10c658 = 0x009b5658
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c660] 0x008a9000 + 0x10c660 = 0x009b5660
.byte 0x03, 0x00, 0x00, 0x00, 0x58, 0x56, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c670] 0x008a9000 + 0x10c670 = 0x009b5670
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x5c, 0xc0, 0x00, 0x68, 0x56, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c680] 0x008a9000 + 0x10c680 = 0x009b5680
RTTIBaseClassDescriptor ?$TemplateIntegerArrayProperty@VAtomCreateRule@@ 2                                         // [0x10c690] 0x008a9000 + 0x10c690 = 0x009b5690
.byte 0x90, 0x56, 0x9b, 0x00, 0x28, 0x56, 0x9b, 0x00                                                               // [0x10c6a8] 0x008a9000 + 0x10c6a8 = 0x009b56a8
.byte 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c6b0] 0x008a9000 + 0x10c6b0 = 0x009b56b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0x56, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c6c0] 0x008a9000 + 0x10c6c0 = 0x009b56c0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0x5c, 0xc0, 0x00, 0xb8, 0x56, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c6d0] 0x008a9000 + 0x10c6d0 = 0x009b56d0
.byte 0x68, 0x52, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c6e0] 0x008a9000 + 0x10c6e0 = 0x009b56e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe0, 0x56, 0x9b, 0x00               // [0x10c6f0] 0x008a9000 + 0x10c6f0 = 0x009b56f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x4b, 0xc0, 0x00               // [0x10c700] 0x008a9000 + 0x10c700 = 0x009b5700
.byte 0xf0, 0x56, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c710] 0x008a9000 + 0x10c710 = 0x009b5710
RTTIBaseClassDescriptor ?$TemplateFloatArrayProperty@VUR_HandSprinkle@@ 2                                          // [0x10c718] 0x008a9000 + 0x10c718 = 0x009b5718
.byte 0x18, 0x57, 0x9b, 0x00, 0x98, 0x54, 0x9b, 0x00, 0x60, 0x0a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c730] 0x008a9000 + 0x10c730 = 0x009b5730
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x57, 0x9b, 0x00               // [0x10c740] 0x008a9000 + 0x10c740 = 0x009b5740
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x65, 0xc0, 0x00               // [0x10c750] 0x008a9000 + 0x10c750 = 0x009b5750
.byte 0x40, 0x57, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c760] 0x008a9000 + 0x10c760 = 0x009b5760
RTTIBaseClassDescriptor ParticlePointCreator 2                                                                     // [0x10c768] 0x008a9000 + 0x10c768 = 0x009b5768
.byte 0x68, 0x57, 0x9b, 0x00, 0x68, 0x4d, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c780] 0x008a9000 + 0x10c780 = 0x009b5780
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x80, 0x57, 0x9b, 0x00               // [0x10c790] 0x008a9000 + 0x10c790 = 0x009b5790
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x76, 0xc0, 0x00               // [0x10c7a0] 0x008a9000 + 0x10c7a0 = 0x009b57a0
.byte 0x90, 0x57, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c7b0] 0x008a9000 + 0x10c7b0 = 0x009b57b0
RTTIBaseClassDescriptor TEventCondition 1                                                                          // [0x10c7b8] 0x008a9000 + 0x10c7b8 = 0x009b57b8
RTTIBaseClassDescriptor TCollectionEventCondition 2                                                                // [0x10c7d0] 0x008a9000 + 0x10c7d0 = 0x009b57d0
RTTIBaseClassDescriptor EventConditionCollectionDelay 3                                                            // [0x10c7e8] 0x008a9000 + 0x10c7e8 = 0x009b57e8
.byte 0xe8, 0x57, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10c800] 0x008a9000 + 0x10c800 = 0x009b5800
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c810] 0x008a9000 + 0x10c810 = 0x009b5810
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x58, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c820] 0x008a9000 + 0x10c820 = 0x009b5820
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0x7c, 0xc0, 0x00, 0x18, 0x58, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c830] 0x008a9000 + 0x10c830 = 0x009b5830
RTTIBaseClassDescriptor EventConditionTrueOnCloseDown 3                                                            // [0x10c840] 0x008a9000 + 0x10c840 = 0x009b5840
.byte 0x40, 0x58, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00                                                               // [0x10c858] 0x008a9000 + 0x10c858 = 0x009b5858
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c860] 0x008a9000 + 0x10c860 = 0x009b5860
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x58, 0x9b, 0x00               // [0x10c870] 0x008a9000 + 0x10c870 = 0x009b5870
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x7c, 0xc0, 0x00               // [0x10c880] 0x008a9000 + 0x10c880 = 0x009b5880
.byte 0x70, 0x58, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c890] 0x008a9000 + 0x10c890 = 0x009b5890
RTTIBaseClassDescriptor EventConditionTrueWhenEnabled 3                                                            // [0x10c898] 0x008a9000 + 0x10c898 = 0x009b5898
.byte 0x98, 0x58, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10c8b0] 0x008a9000 + 0x10c8b0 = 0x009b58b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c8c0] 0x008a9000 + 0x10c8c0 = 0x009b58c0
.byte 0x04, 0x00, 0x00, 0x00, 0xb0, 0x58, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c8d0] 0x008a9000 + 0x10c8d0 = 0x009b58d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc0, 0x00, 0xc8, 0x58, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c8e0] 0x008a9000 + 0x10c8e0 = 0x009b58e0
RTTIBaseClassDescriptor TAtomEventCondition 2                                                                      // [0x10c8f0] 0x008a9000 + 0x10c8f0 = 0x009b58f0
RTTIBaseClassDescriptor EC_DeflectionInAtomsHierarchy 3                                                            // [0x10c908] 0x008a9000 + 0x10c908 = 0x009b5908
.byte 0x08, 0x59, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10c920] 0x008a9000 + 0x10c920 = 0x009b5920
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c930] 0x008a9000 + 0x10c930 = 0x009b5930
.byte 0x04, 0x00, 0x00, 0x00, 0x20, 0x59, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c940] 0x008a9000 + 0x10c940 = 0x009b5940
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x7b, 0xc0, 0x00, 0x38, 0x59, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c950] 0x008a9000 + 0x10c950 = 0x009b5950
RTTIBaseClassDescriptor EC_CollectionShouldBeEmitting 3                                                            // [0x10c960] 0x008a9000 + 0x10c960 = 0x009b5960
.byte 0x60, 0x59, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00                                                               // [0x10c978] 0x008a9000 + 0x10c978 = 0x009b5978
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c980] 0x008a9000 + 0x10c980 = 0x009b5980
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0x59, 0x9b, 0x00               // [0x10c990] 0x008a9000 + 0x10c990 = 0x009b5990
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x7b, 0xc0, 0x00               // [0x10c9a0] 0x008a9000 + 0x10c9a0 = 0x009b59a0
.byte 0x90, 0x59, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10c9b0] 0x008a9000 + 0x10c9b0 = 0x009b59b0
RTTIBaseClassDescriptor EC_DeflectionInCollectionsHierarchy 3                                                      // [0x10c9b8] 0x008a9000 + 0x10c9b8 = 0x009b59b8
.byte 0xb8, 0x59, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10c9d0] 0x008a9000 + 0x10c9d0 = 0x009b59d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c9e0] 0x008a9000 + 0x10c9e0 = 0x009b59e0
.byte 0x04, 0x00, 0x00, 0x00, 0xd0, 0x59, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10c9f0] 0x008a9000 + 0x10c9f0 = 0x009b59f0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x7b, 0xc0, 0x00, 0xe8, 0x59, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ca00] 0x008a9000 + 0x10ca00 = 0x009b5a00
RTTIBaseClassDescriptor EventConditionNever 3                                                                      // [0x10ca10] 0x008a9000 + 0x10ca10 = 0x009b5a10
.byte 0x10, 0x5a, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00                                                               // [0x10ca28] 0x008a9000 + 0x10ca28 = 0x009b5a28
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ca30] 0x008a9000 + 0x10ca30 = 0x009b5a30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0x5a, 0x9b, 0x00               // [0x10ca40] 0x008a9000 + 0x10ca40 = 0x009b5a40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7a, 0xc0, 0x00               // [0x10ca50] 0x008a9000 + 0x10ca50 = 0x009b5a50
.byte 0x40, 0x5a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ca60] 0x008a9000 + 0x10ca60 = 0x009b5a60
RTTIBaseClassDescriptor EventConditionCollectionLimitedTime 3                                                      // [0x10ca68] 0x008a9000 + 0x10ca68 = 0x009b5a68
.byte 0x68, 0x5a, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10ca80] 0x008a9000 + 0x10ca80 = 0x009b5a80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ca90] 0x008a9000 + 0x10ca90 = 0x009b5a90
.byte 0x04, 0x00, 0x00, 0x00, 0x80, 0x5a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10caa0] 0x008a9000 + 0x10caa0 = 0x009b5aa0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x7a, 0xc0, 0x00, 0x98, 0x5a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cab0] 0x008a9000 + 0x10cab0 = 0x009b5ab0
RTTIBaseClassDescriptor EventConditionAtomDelay 3                                                                  // [0x10cac0] 0x008a9000 + 0x10cac0 = 0x009b5ac0
.byte 0xc0, 0x5a, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00                                                               // [0x10cad8] 0x008a9000 + 0x10cad8 = 0x009b5ad8
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cae0] 0x008a9000 + 0x10cae0 = 0x009b5ae0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0x5a, 0x9b, 0x00               // [0x10caf0] 0x008a9000 + 0x10caf0 = 0x009b5af0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x7a, 0xc0, 0x00               // [0x10cb00] 0x008a9000 + 0x10cb00 = 0x009b5b00
.byte 0xf0, 0x5a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10cb10] 0x008a9000 + 0x10cb10 = 0x009b5b10
RTTIBaseClassDescriptor EventConditionAtomNearVillagers 3                                                          // [0x10cb18] 0x008a9000 + 0x10cb18 = 0x009b5b18
.byte 0x18, 0x5b, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10cb30] 0x008a9000 + 0x10cb30 = 0x009b5b30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cb40] 0x008a9000 + 0x10cb40 = 0x009b5b40
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0x5b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cb50] 0x008a9000 + 0x10cb50 = 0x009b5b50
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x79, 0xc0, 0x00, 0x48, 0x5b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cb60] 0x008a9000 + 0x10cb60 = 0x009b5b60
RTTIBaseClassDescriptor EventConditionAtomLimitedTime 3                                                            // [0x10cb70] 0x008a9000 + 0x10cb70 = 0x009b5b70
.byte 0x70, 0x5b, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00                                                               // [0x10cb88] 0x008a9000 + 0x10cb88 = 0x009b5b88
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cb90] 0x008a9000 + 0x10cb90 = 0x009b5b90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x88, 0x5b, 0x9b, 0x00               // [0x10cba0] 0x008a9000 + 0x10cba0 = 0x009b5ba0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x79, 0xc0, 0x00               // [0x10cbb0] 0x008a9000 + 0x10cbb0 = 0x009b5bb0
.byte 0xa0, 0x5b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10cbc0] 0x008a9000 + 0x10cbc0 = 0x009b5bc0
RTTIBaseClassDescriptor EventConditionRandom 3                                                                     // [0x10cbc8] 0x008a9000 + 0x10cbc8 = 0x009b5bc8
.byte 0xc8, 0x5b, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10cbe0] 0x008a9000 + 0x10cbe0 = 0x009b5be0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cbf0] 0x008a9000 + 0x10cbf0 = 0x009b5bf0
.byte 0x04, 0x00, 0x00, 0x00, 0xe0, 0x5b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cc00] 0x008a9000 + 0x10cc00 = 0x009b5c00
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0x79, 0xc0, 0x00, 0xf8, 0x5b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cc10] 0x008a9000 + 0x10cc10 = 0x009b5c10
RTTIBaseClassDescriptor EventConditionParentFrameTime 3                                                            // [0x10cc20] 0x008a9000 + 0x10cc20 = 0x009b5c20
.byte 0x20, 0x5c, 0x9b, 0x00, 0xd0, 0x57, 0x9b, 0x00                                                               // [0x10cc38] 0x008a9000 + 0x10cc38 = 0x009b5c38
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cc40] 0x008a9000 + 0x10cc40 = 0x009b5c40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x5c, 0x9b, 0x00               // [0x10cc50] 0x008a9000 + 0x10cc50 = 0x009b5c50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xc0, 0x00               // [0x10cc60] 0x008a9000 + 0x10cc60 = 0x009b5c60
.byte 0x50, 0x5c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10cc70] 0x008a9000 + 0x10cc70 = 0x009b5c70
RTTIBaseClassDescriptor EventConditionFrameTime 3                                                                  // [0x10cc78] 0x008a9000 + 0x10cc78 = 0x009b5c78
.byte 0x78, 0x5c, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10cc90] 0x008a9000 + 0x10cc90 = 0x009b5c90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cca0] 0x008a9000 + 0x10cca0 = 0x009b5ca0
.byte 0x04, 0x00, 0x00, 0x00, 0x90, 0x5c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ccb0] 0x008a9000 + 0x10ccb0 = 0x009b5cb0
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x78, 0xc0, 0x00, 0xa8, 0x5c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ccc0] 0x008a9000 + 0x10ccc0 = 0x009b5cc0
RTTIBaseClassDescriptor EventConditionAtomBelowHeight 3                                                            // [0x10ccd0] 0x008a9000 + 0x10ccd0 = 0x009b5cd0
.byte 0xd0, 0x5c, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00                                                               // [0x10cce8] 0x008a9000 + 0x10cce8 = 0x009b5ce8
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ccf0] 0x008a9000 + 0x10ccf0 = 0x009b5cf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x5c, 0x9b, 0x00               // [0x10cd00] 0x008a9000 + 0x10cd00 = 0x009b5d00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78, 0xc0, 0x00               // [0x10cd10] 0x008a9000 + 0x10cd10 = 0x009b5d10
.byte 0x00, 0x5d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10cd20] 0x008a9000 + 0x10cd20 = 0x009b5d20
RTTIBaseClassDescriptor EC_AtomAlphaAbove 3                                                                        // [0x10cd28] 0x008a9000 + 0x10cd28 = 0x009b5d28
.byte 0x28, 0x5d, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10cd40] 0x008a9000 + 0x10cd40 = 0x009b5d40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cd50] 0x008a9000 + 0x10cd50 = 0x009b5d50
.byte 0x04, 0x00, 0x00, 0x00, 0x40, 0x5d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cd60] 0x008a9000 + 0x10cd60 = 0x009b5d60
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0x78, 0xc0, 0x00, 0x58, 0x5d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cd70] 0x008a9000 + 0x10cd70 = 0x009b5d70
RTTIBaseClassDescriptor EventConditionAtomCloseWater 3                                                             // [0x10cd80] 0x008a9000 + 0x10cd80 = 0x009b5d80
.byte 0x80, 0x5d, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00                                                               // [0x10cd98] 0x008a9000 + 0x10cd98 = 0x009b5d98
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cda0] 0x008a9000 + 0x10cda0 = 0x009b5da0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x5d, 0x9b, 0x00               // [0x10cdb0] 0x008a9000 + 0x10cdb0 = 0x009b5db0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x77, 0xc0, 0x00               // [0x10cdc0] 0x008a9000 + 0x10cdc0 = 0x009b5dc0
.byte 0xb0, 0x5d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10cdd0] 0x008a9000 + 0x10cdd0 = 0x009b5dd0
RTTIBaseClassDescriptor EventConditionFireBallSteam 3                                                              // [0x10cdd8] 0x008a9000 + 0x10cdd8 = 0x009b5dd8
.byte 0xd8, 0x5d, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10cdf0] 0x008a9000 + 0x10cdf0 = 0x009b5df0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ce00] 0x008a9000 + 0x10ce00 = 0x009b5e00
.byte 0x04, 0x00, 0x00, 0x00, 0xf0, 0x5d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ce10] 0x008a9000 + 0x10ce10 = 0x009b5e10
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0x77, 0xc0, 0x00, 0x08, 0x5e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ce20] 0x008a9000 + 0x10ce20 = 0x009b5e20
RTTIBaseClassDescriptor EventConditionAtomInUse 3                                                                  // [0x10ce30] 0x008a9000 + 0x10ce30 = 0x009b5e30
.byte 0x30, 0x5e, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00                                                               // [0x10ce48] 0x008a9000 + 0x10ce48 = 0x009b5e48
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ce50] 0x008a9000 + 0x10ce50 = 0x009b5e50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x5e, 0x9b, 0x00               // [0x10ce60] 0x008a9000 + 0x10ce60 = 0x009b5e60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x77, 0xc0, 0x00               // [0x10ce70] 0x008a9000 + 0x10ce70 = 0x009b5e70
.byte 0x60, 0x5e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ce80] 0x008a9000 + 0x10ce80 = 0x009b5e80
RTTIBaseClassDescriptor EventConditionAtomBelowSpeed 3                                                             // [0x10ce88] 0x008a9000 + 0x10ce88 = 0x009b5e88
.byte 0x88, 0x5e, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00, 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10cea0] 0x008a9000 + 0x10cea0 = 0x009b5ea0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ceb0] 0x008a9000 + 0x10ceb0 = 0x009b5eb0
.byte 0x04, 0x00, 0x00, 0x00, 0xa0, 0x5e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cec0] 0x008a9000 + 0x10cec0 = 0x009b5ec0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0xc0, 0x00, 0xb8, 0x5e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ced0] 0x008a9000 + 0x10ced0 = 0x009b5ed0
RTTIBaseClassDescriptor EventConditionAtomHasBeenDeflected 3                                                       // [0x10cee0] 0x008a9000 + 0x10cee0 = 0x009b5ee0
.byte 0xe0, 0x5e, 0x9b, 0x00, 0xf0, 0x58, 0x9b, 0x00                                                               // [0x10cef8] 0x008a9000 + 0x10cef8 = 0x009b5ef8
.byte 0xb8, 0x57, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cf00] 0x008a9000 + 0x10cf00 = 0x009b5f00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x5e, 0x9b, 0x00               // [0x10cf10] 0x008a9000 + 0x10cf10 = 0x009b5f10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x76, 0xc0, 0x00               // [0x10cf20] 0x008a9000 + 0x10cf20 = 0x009b5f20
.byte 0x10, 0x5f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10cf30] 0x008a9000 + 0x10cf30 = 0x009b5f30
RTTIBaseClassDescriptor FloatProvider 1                                                                            // [0x10cf38] 0x008a9000 + 0x10cf38 = 0x009b5f38
RTTIBaseClassDescriptor ConstFloatProvider 2                                                                       // [0x10cf50] 0x008a9000 + 0x10cf50 = 0x009b5f50
.byte 0x50, 0x5f, 0x9b, 0x00, 0x38, 0x5f, 0x9b, 0x00                                                               // [0x10cf68] 0x008a9000 + 0x10cf68 = 0x009b5f68
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cf70] 0x008a9000 + 0x10cf70 = 0x009b5f70
.byte 0x03, 0x00, 0x00, 0x00, 0x68, 0x5f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cf80] 0x008a9000 + 0x10cf80 = 0x009b5f80
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x7f, 0xc0, 0x00, 0x78, 0x5f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cf90] 0x008a9000 + 0x10cf90 = 0x009b5f90
.byte 0x38, 0x5f, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cfa0] 0x008a9000 + 0x10cfa0 = 0x009b5fa0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0x5f, 0x9b, 0x00               // [0x10cfb0] 0x008a9000 + 0x10cfb0 = 0x009b5fb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x21, 0xc0, 0x00               // [0x10cfc0] 0x008a9000 + 0x10cfc0 = 0x009b5fc0
.byte 0xb0, 0x5f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10cfd0] 0x008a9000 + 0x10cfd0 = 0x009b5fd0
RTTIBaseClassDescriptor FloatProvider_ParentAtomScale 2                                                            // [0x10cfd8] 0x008a9000 + 0x10cfd8 = 0x009b5fd8
.byte 0xd8, 0x5f, 0x9b, 0x00, 0x38, 0x5f, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10cff0] 0x008a9000 + 0x10cff0 = 0x009b5ff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x5f, 0x9b, 0x00               // [0x10d000] 0x008a9000 + 0x10d000 = 0x009b6000
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x7e, 0xc0, 0x00               // [0x10d010] 0x008a9000 + 0x10d010 = 0x009b6010
.byte 0x00, 0x60, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d020] 0x008a9000 + 0x10d020 = 0x009b6020
RTTIBaseClassDescriptor StrengthFloatProvider 2                                                                    // [0x10d028] 0x008a9000 + 0x10d028 = 0x009b6028
.byte 0x28, 0x60, 0x9b, 0x00, 0x38, 0x5f, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d040] 0x008a9000 + 0x10d040 = 0x009b6040
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x60, 0x9b, 0x00               // [0x10d050] 0x008a9000 + 0x10d050 = 0x009b6050
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7e, 0xc0, 0x00               // [0x10d060] 0x008a9000 + 0x10d060 = 0x009b6060
.byte 0x50, 0x60, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d070] 0x008a9000 + 0x10d070 = 0x009b6070
RTTIBaseClassDescriptor MagnitudeFloatProvider 2                                                                   // [0x10d078] 0x008a9000 + 0x10d078 = 0x009b6078
.byte 0x78, 0x60, 0x9b, 0x00, 0x38, 0x5f, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d090] 0x008a9000 + 0x10d090 = 0x009b6090
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x90, 0x60, 0x9b, 0x00               // [0x10d0a0] 0x008a9000 + 0x10d0a0 = 0x009b60a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x7e, 0xc0, 0x00               // [0x10d0b0] 0x008a9000 + 0x10d0b0 = 0x009b60b0
.byte 0xa0, 0x60, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d0c0] 0x008a9000 + 0x10d0c0 = 0x009b60c0
RTTIBaseClassDescriptor MagnitudeTimesStrengthFloatProvider 2                                                      // [0x10d0c8] 0x008a9000 + 0x10d0c8 = 0x009b60c8
.byte 0xc8, 0x60, 0x9b, 0x00, 0x38, 0x5f, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d0e0] 0x008a9000 + 0x10d0e0 = 0x009b60e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe0, 0x60, 0x9b, 0x00               // [0x10d0f0] 0x008a9000 + 0x10d0f0 = 0x009b60f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7d, 0xc0, 0x00               // [0x10d100] 0x008a9000 + 0x10d100 = 0x009b6100
.byte 0xf0, 0x60, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d110] 0x008a9000 + 0x10d110 = 0x009b6110
RTTIBaseClassDescriptor RenderHandScaleFloatProvider 2                                                             // [0x10d118] 0x008a9000 + 0x10d118 = 0x009b6118
.byte 0x18, 0x61, 0x9b, 0x00, 0x38, 0x5f, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d130] 0x008a9000 + 0x10d130 = 0x009b6130
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x61, 0x9b, 0x00               // [0x10d140] 0x008a9000 + 0x10d140 = 0x009b6140
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x7d, 0xc0, 0x00               // [0x10d150] 0x008a9000 + 0x10d150 = 0x009b6150
.byte 0x40, 0x61, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d160] 0x008a9000 + 0x10d160 = 0x009b6160
RTTIBaseClassDescriptor RenderHandScaleTimesStrengthFloatProvider 2                                                // [0x10d168] 0x008a9000 + 0x10d168 = 0x009b6168
.byte 0x68, 0x61, 0x9b, 0x00, 0x38, 0x5f, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d180] 0x008a9000 + 0x10d180 = 0x009b6180
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x80, 0x61, 0x9b, 0x00               // [0x10d190] 0x008a9000 + 0x10d190 = 0x009b6190
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x7d, 0xc0, 0x00               // [0x10d1a0] 0x008a9000 + 0x10d1a0 = 0x009b61a0
.byte 0x90, 0x61, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d1b0] 0x008a9000 + 0x10d1b0 = 0x009b61b0
RTTIBaseClassDescriptor UR_RingSpin 3                                                                              // [0x10d1b8] 0x008a9000 + 0x10d1b8 = 0x009b61b8
.byte 0xb8, 0x61, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d1d0] 0x008a9000 + 0x10d1d0 = 0x009b61d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d1e0] 0x008a9000 + 0x10d1e0 = 0x009b61e0
.byte 0x04, 0x00, 0x00, 0x00, 0xd0, 0x61, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d1f0] 0x008a9000 + 0x10d1f0 = 0x009b61f0
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0x88, 0xc0, 0x00, 0xe8, 0x61, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d200] 0x008a9000 + 0x10d200 = 0x009b6200
RTTIBaseClassDescriptor UR_Articulate 3                                                                            // [0x10d210] 0x008a9000 + 0x10d210 = 0x009b6210
.byte 0x10, 0x62, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10d228] 0x008a9000 + 0x10d228 = 0x009b6228
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d230] 0x008a9000 + 0x10d230 = 0x009b6230
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0x62, 0x9b, 0x00               // [0x10d240] 0x008a9000 + 0x10d240 = 0x009b6240
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x88, 0xc0, 0x00               // [0x10d250] 0x008a9000 + 0x10d250 = 0x009b6250
.byte 0x40, 0x62, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d260] 0x008a9000 + 0x10d260 = 0x009b6260
RTTIBaseClassDescriptor AppearanceUpdateRule 2                                                                     // [0x10d268] 0x008a9000 + 0x10d268 = 0x009b6268
RTTIBaseClassDescriptor AppearanceRuleFadeOut 3                                                                    // [0x10d280] 0x008a9000 + 0x10d280 = 0x009b6280
.byte 0x80, 0x62, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00                                                               // [0x10d298] 0x008a9000 + 0x10d298 = 0x009b6298
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d2a0] 0x008a9000 + 0x10d2a0 = 0x009b62a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x62, 0x9b, 0x00               // [0x10d2b0] 0x008a9000 + 0x10d2b0 = 0x009b62b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x92, 0xc0, 0x00               // [0x10d2c0] 0x008a9000 + 0x10d2c0 = 0x009b62c0
.byte 0xb0, 0x62, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x62, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10d2d0] 0x008a9000 + 0x10d2d0 = 0x009b62d0
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d2e0] 0x008a9000 + 0x10d2e0 = 0x009b62e0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0x62, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d2f0] 0x008a9000 + 0x10d2f0 = 0x009b62f0
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0x93, 0xc0, 0x00, 0xe8, 0x62, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d300] 0x008a9000 + 0x10d300 = 0x009b6300
RTTIBaseClassDescriptor AddSoundToAtom 3                                                                           // [0x10d310] 0x008a9000 + 0x10d310 = 0x009b6310
.byte 0x10, 0x63, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00                                                               // [0x10d328] 0x008a9000 + 0x10d328 = 0x009b6328
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d330] 0x008a9000 + 0x10d330 = 0x009b6330
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0x63, 0x9b, 0x00               // [0x10d340] 0x008a9000 + 0x10d340 = 0x009b6340
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x8a, 0xc0, 0x00               // [0x10d350] 0x008a9000 + 0x10d350 = 0x009b6350
.byte 0x40, 0x63, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d360] 0x008a9000 + 0x10d360 = 0x009b6360
RTTIBaseClassDescriptor StartStopSoundOnCondition 3                                                                // [0x10d368] 0x008a9000 + 0x10d368 = 0x009b6368
.byte 0x68, 0x63, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d380] 0x008a9000 + 0x10d380 = 0x009b6380
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d390] 0x008a9000 + 0x10d390 = 0x009b6390
.byte 0x04, 0x00, 0x00, 0x00, 0x80, 0x63, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d3a0] 0x008a9000 + 0x10d3a0 = 0x009b63a0
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x8a, 0xc0, 0x00, 0x98, 0x63, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d3b0] 0x008a9000 + 0x10d3b0 = 0x009b63b0
RTTIBaseClassDescriptor RemoveSoundFromAtom 3                                                                      // [0x10d3c0] 0x008a9000 + 0x10d3c0 = 0x009b63c0
.byte 0xc0, 0x63, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00                                                               // [0x10d3d8] 0x008a9000 + 0x10d3d8 = 0x009b63d8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d3e0] 0x008a9000 + 0x10d3e0 = 0x009b63e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0x63, 0x9b, 0x00               // [0x10d3f0] 0x008a9000 + 0x10d3f0 = 0x009b63f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x8a, 0xc0, 0x00               // [0x10d400] 0x008a9000 + 0x10d400 = 0x009b6400
.byte 0xf0, 0x63, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d410] 0x008a9000 + 0x10d410 = 0x009b6410
RTTIBaseClassDescriptor AR_SetAnimPlay 3                                                                           // [0x10d418] 0x008a9000 + 0x10d418 = 0x009b6418
.byte 0x18, 0x64, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d430] 0x008a9000 + 0x10d430 = 0x009b6430
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d440] 0x008a9000 + 0x10d440 = 0x009b6440
.byte 0x04, 0x00, 0x00, 0x00, 0x30, 0x64, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d450] 0x008a9000 + 0x10d450 = 0x009b6450
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x89, 0xc0, 0x00, 0x48, 0x64, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d460] 0x008a9000 + 0x10d460 = 0x009b6460
RTTIBaseClassDescriptor AR_FadeAlpha 3                                                                             // [0x10d470] 0x008a9000 + 0x10d470 = 0x009b6470
.byte 0x70, 0x64, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00                                                               // [0x10d488] 0x008a9000 + 0x10d488 = 0x009b6488
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d490] 0x008a9000 + 0x10d490 = 0x009b6490
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x88, 0x64, 0x9b, 0x00               // [0x10d4a0] 0x008a9000 + 0x10d4a0 = 0x009b64a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x93, 0xc0, 0x00               // [0x10d4b0] 0x008a9000 + 0x10d4b0 = 0x009b64b0
.byte 0xa0, 0x64, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d4c0] 0x008a9000 + 0x10d4c0 = 0x009b64c0
RTTIBaseClassDescriptor AR_FadeCollectionAlpha 3                                                                   // [0x10d4c8] 0x008a9000 + 0x10d4c8 = 0x009b64c8
.byte 0xc8, 0x64, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d4e0] 0x008a9000 + 0x10d4e0 = 0x009b64e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d4f0] 0x008a9000 + 0x10d4f0 = 0x009b64f0
.byte 0x04, 0x00, 0x00, 0x00, 0xe0, 0x64, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d500] 0x008a9000 + 0x10d500 = 0x009b6500
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0x93, 0xc0, 0x00, 0xf8, 0x64, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d510] 0x008a9000 + 0x10d510 = 0x009b6510
RTTIBaseClassDescriptor AR_FadeOutOnceConditionTrue 3                                                              // [0x10d520] 0x008a9000 + 0x10d520 = 0x009b6520
.byte 0x20, 0x65, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00                                                               // [0x10d538] 0x008a9000 + 0x10d538 = 0x009b6538
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d540] 0x008a9000 + 0x10d540 = 0x009b6540
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x65, 0x9b, 0x00               // [0x10d550] 0x008a9000 + 0x10d550 = 0x009b6550
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x93, 0xc0, 0x00               // [0x10d560] 0x008a9000 + 0x10d560 = 0x009b6560
.byte 0x50, 0x65, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d570] 0x008a9000 + 0x10d570 = 0x009b6570
RTTIBaseClassDescriptor AR_FadeAlphaWithHeightAboveLandscape 3                                                     // [0x10d578] 0x008a9000 + 0x10d578 = 0x009b6578
.byte 0x78, 0x65, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d590] 0x008a9000 + 0x10d590 = 0x009b6590
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d5a0] 0x008a9000 + 0x10d5a0 = 0x009b65a0
.byte 0x04, 0x00, 0x00, 0x00, 0x90, 0x65, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d5b0] 0x008a9000 + 0x10d5b0 = 0x009b65b0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x93, 0xc0, 0x00, 0xa8, 0x65, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d5c0] 0x008a9000 + 0x10d5c0 = 0x009b65c0
RTTIBaseClassDescriptor AR_GetColorFromParent 3                                                                    // [0x10d5d0] 0x008a9000 + 0x10d5d0 = 0x009b65d0
.byte 0xd0, 0x65, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00                                                               // [0x10d5e8] 0x008a9000 + 0x10d5e8 = 0x009b65e8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d5f0] 0x008a9000 + 0x10d5f0 = 0x009b65f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x65, 0x9b, 0x00               // [0x10d600] 0x008a9000 + 0x10d600 = 0x009b6600
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x92, 0xc0, 0x00               // [0x10d610] 0x008a9000 + 0x10d610 = 0x009b6610
.byte 0x00, 0x66, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d620] 0x008a9000 + 0x10d620 = 0x009b6620
RTTIBaseClassDescriptor AppearanceRuleTumble 3                                                                     // [0x10d628] 0x008a9000 + 0x10d628 = 0x009b6628
.byte 0x28, 0x66, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d640] 0x008a9000 + 0x10d640 = 0x009b6640
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d650] 0x008a9000 + 0x10d650 = 0x009b6650
.byte 0x04, 0x00, 0x00, 0x00, 0x40, 0x66, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d660] 0x008a9000 + 0x10d660 = 0x009b6660
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0x92, 0xc0, 0x00, 0x58, 0x66, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d670] 0x008a9000 + 0x10d670 = 0x009b6670
RTTIBaseClassDescriptor UR_UpdatePosnFromVelocity 3                                                                // [0x10d680] 0x008a9000 + 0x10d680 = 0x009b6680
.byte 0x80, 0x66, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10d698] 0x008a9000 + 0x10d698 = 0x009b6698
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d6a0] 0x008a9000 + 0x10d6a0 = 0x009b66a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x66, 0x9b, 0x00               // [0x10d6b0] 0x008a9000 + 0x10d6b0 = 0x009b66b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x90, 0xc0, 0x00               // [0x10d6c0] 0x008a9000 + 0x10d6c0 = 0x009b66c0
.byte 0xb0, 0x66, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d6d0] 0x008a9000 + 0x10d6d0 = 0x009b66d0
RTTIBaseClassDescriptor EventAlways 2                                                                              // [0x10d6d8] 0x008a9000 + 0x10d6d8 = 0x009b66d8
.byte 0xd8, 0x66, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d6f0] 0x008a9000 + 0x10d6f0 = 0x009b66f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x66, 0x9b, 0x00               // [0x10d700] 0x008a9000 + 0x10d700 = 0x009b6700
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x8a, 0xc0, 0x00               // [0x10d710] 0x008a9000 + 0x10d710 = 0x009b6710
.byte 0x00, 0x67, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d720] 0x008a9000 + 0x10d720 = 0x009b6720
RTTIBaseClassDescriptor UR_OrientWithVelocity 3                                                                    // [0x10d728] 0x008a9000 + 0x10d728 = 0x009b6728
.byte 0x28, 0x67, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d740] 0x008a9000 + 0x10d740 = 0x009b6740
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d750] 0x008a9000 + 0x10d750 = 0x009b6750
.byte 0x04, 0x00, 0x00, 0x00, 0x40, 0x67, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d760] 0x008a9000 + 0x10d760 = 0x009b6760
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0x90, 0xc0, 0x00, 0x58, 0x67, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d770] 0x008a9000 + 0x10d770 = 0x009b6770
RTTIBaseClassDescriptor UR_OrientSpriteWithVelocity 3                                                              // [0x10d780] 0x008a9000 + 0x10d780 = 0x009b6780
.byte 0x80, 0x67, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10d798] 0x008a9000 + 0x10d798 = 0x009b6798
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d7a0] 0x008a9000 + 0x10d7a0 = 0x009b67a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x67, 0x9b, 0x00               // [0x10d7b0] 0x008a9000 + 0x10d7b0 = 0x009b67b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x90, 0xc0, 0x00               // [0x10d7c0] 0x008a9000 + 0x10d7c0 = 0x009b67c0
.byte 0xb0, 0x67, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d7d0] 0x008a9000 + 0x10d7d0 = 0x009b67d0
RTTIBaseClassDescriptor UR_OrientSpriteWithRandomAngle 3                                                           // [0x10d7d8] 0x008a9000 + 0x10d7d8 = 0x009b67d8
.byte 0xd8, 0x67, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d7f0] 0x008a9000 + 0x10d7f0 = 0x009b67f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d800] 0x008a9000 + 0x10d800 = 0x009b6800
.byte 0x04, 0x00, 0x00, 0x00, 0xf0, 0x67, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d810] 0x008a9000 + 0x10d810 = 0x009b6810
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x8f, 0xc0, 0x00, 0x08, 0x68, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d820] 0x008a9000 + 0x10d820 = 0x009b6820
RTTIBaseClassDescriptor UR_GustyWind 3                                                                             // [0x10d830] 0x008a9000 + 0x10d830 = 0x009b6830
.byte 0x30, 0x68, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10d848] 0x008a9000 + 0x10d848 = 0x009b6848
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d850] 0x008a9000 + 0x10d850 = 0x009b6850
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x68, 0x9b, 0x00               // [0x10d860] 0x008a9000 + 0x10d860 = 0x009b6860
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x88, 0xc0, 0x00               // [0x10d870] 0x008a9000 + 0x10d870 = 0x009b6870
.byte 0x60, 0x68, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d880] 0x008a9000 + 0x10d880 = 0x009b6880
RTTIBaseClassDescriptor FollowOrigin 3                                                                             // [0x10d888] 0x008a9000 + 0x10d888 = 0x009b6888
.byte 0x88, 0x68, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d8a0] 0x008a9000 + 0x10d8a0 = 0x009b68a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d8b0] 0x008a9000 + 0x10d8b0 = 0x009b68b0
.byte 0x04, 0x00, 0x00, 0x00, 0xa0, 0x68, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d8c0] 0x008a9000 + 0x10d8c0 = 0x009b68c0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0x88, 0xc0, 0x00, 0xb8, 0x68, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d8d0] 0x008a9000 + 0x10d8d0 = 0x009b68d0
RTTIBaseClassDescriptor SetScale 3                                                                                 // [0x10d8e0] 0x008a9000 + 0x10d8e0 = 0x009b68e0
.byte 0xe0, 0x68, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10d8f8] 0x008a9000 + 0x10d8f8 = 0x009b68f8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d900] 0x008a9000 + 0x10d900 = 0x009b6900
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x68, 0x9b, 0x00               // [0x10d910] 0x008a9000 + 0x10d910 = 0x009b6910
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x92, 0xc0, 0x00               // [0x10d920] 0x008a9000 + 0x10d920 = 0x009b6920
.byte 0x10, 0x69, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d930] 0x008a9000 + 0x10d930 = 0x009b6930
RTTIBaseClassDescriptor SetCollectionAlpha 3                                                                       // [0x10d938] 0x008a9000 + 0x10d938 = 0x009b6938
.byte 0x38, 0x69, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10d950] 0x008a9000 + 0x10d950 = 0x009b6950
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d960] 0x008a9000 + 0x10d960 = 0x009b6960
.byte 0x04, 0x00, 0x00, 0x00, 0x50, 0x69, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d970] 0x008a9000 + 0x10d970 = 0x009b6970
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x91, 0xc0, 0x00, 0x68, 0x69, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d980] 0x008a9000 + 0x10d980 = 0x009b6980
RTTIBaseClassDescriptor SetAtomAlpha 3                                                                             // [0x10d990] 0x008a9000 + 0x10d990 = 0x009b6990
.byte 0x90, 0x69, 0x9b, 0x00, 0x68, 0x62, 0x9b, 0x00                                                               // [0x10d9a8] 0x008a9000 + 0x10d9a8 = 0x009b69a8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10d9b0] 0x008a9000 + 0x10d9b0 = 0x009b69b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0x69, 0x9b, 0x00               // [0x10d9c0] 0x008a9000 + 0x10d9c0 = 0x009b69c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x91, 0xc0, 0x00               // [0x10d9d0] 0x008a9000 + 0x10d9d0 = 0x009b69d0
.byte 0xc0, 0x69, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10d9e0] 0x008a9000 + 0x10d9e0 = 0x009b69e0
RTTIBaseClassDescriptor SetPSysCloseDown 2                                                                         // [0x10d9e8] 0x008a9000 + 0x10d9e8 = 0x009b69e8
.byte 0xe8, 0x69, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10da00] 0x008a9000 + 0x10da00 = 0x009b6a00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x9b, 0x00               // [0x10da10] 0x008a9000 + 0x10da10 = 0x009b6a10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x89, 0xc0, 0x00               // [0x10da20] 0x008a9000 + 0x10da20 = 0x009b6a20
.byte 0x10, 0x6a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10da30] 0x008a9000 + 0x10da30 = 0x009b6a30
RTTIBaseClassDescriptor SetAtomHasBeenDeflected 2                                                                  // [0x10da38] 0x008a9000 + 0x10da38 = 0x009b6a38
.byte 0x38, 0x6a, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10da50] 0x008a9000 + 0x10da50 = 0x009b6a50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0x6a, 0x9b, 0x00               // [0x10da60] 0x008a9000 + 0x10da60 = 0x009b6a60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x89, 0xc0, 0x00               // [0x10da70] 0x008a9000 + 0x10da70 = 0x009b6a70
.byte 0x60, 0x6a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10da80] 0x008a9000 + 0x10da80 = 0x009b6a80
RTTIBaseClassDescriptor ForceConstantAltitude 3                                                                    // [0x10da88] 0x008a9000 + 0x10da88 = 0x009b6a88
.byte 0x88, 0x6a, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10daa0] 0x008a9000 + 0x10daa0 = 0x009b6aa0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dab0] 0x008a9000 + 0x10dab0 = 0x009b6ab0
.byte 0x04, 0x00, 0x00, 0x00, 0xa0, 0x6a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dac0] 0x008a9000 + 0x10dac0 = 0x009b6ac0
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x8f, 0xc0, 0x00, 0xb8, 0x6a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dad0] 0x008a9000 + 0x10dad0 = 0x009b6ad0
RTTIBaseClassDescriptor ForceConstantHeight 3                                                                      // [0x10dae0] 0x008a9000 + 0x10dae0 = 0x009b6ae0
.byte 0xe0, 0x6a, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10daf8] 0x008a9000 + 0x10daf8 = 0x009b6af8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10db00] 0x008a9000 + 0x10db00 = 0x009b6b00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x6a, 0x9b, 0x00               // [0x10db10] 0x008a9000 + 0x10db10 = 0x009b6b10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x8f, 0xc0, 0x00               // [0x10db20] 0x008a9000 + 0x10db20 = 0x009b6b20
.byte 0x10, 0x6b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10db30] 0x008a9000 + 0x10db30 = 0x009b6b30
RTTIBaseClassDescriptor ForceMinimumHeight 3                                                                       // [0x10db38] 0x008a9000 + 0x10db38 = 0x009b6b38
.byte 0x38, 0x6b, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10db50] 0x008a9000 + 0x10db50 = 0x009b6b50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10db60] 0x008a9000 + 0x10db60 = 0x009b6b60
.byte 0x04, 0x00, 0x00, 0x00, 0x50, 0x6b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10db70] 0x008a9000 + 0x10db70 = 0x009b6b70
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0x8f, 0xc0, 0x00, 0x68, 0x6b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10db80] 0x008a9000 + 0x10db80 = 0x009b6b80
RTTIBaseClassDescriptor ForceLandscapeHeight 3                                                                     // [0x10db90] 0x008a9000 + 0x10db90 = 0x009b6b90
.byte 0x90, 0x6b, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10dba8] 0x008a9000 + 0x10dba8 = 0x009b6ba8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dbb0] 0x008a9000 + 0x10dbb0 = 0x009b6bb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0x6b, 0x9b, 0x00               // [0x10dbc0] 0x008a9000 + 0x10dbc0 = 0x009b6bc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x8e, 0xc0, 0x00               // [0x10dbd0] 0x008a9000 + 0x10dbd0 = 0x009b6bd0
.byte 0xc0, 0x6b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10dbe0] 0x008a9000 + 0x10dbe0 = 0x009b6be0
RTTIBaseClassDescriptor UpdateRuleRotatePrincipalAxis 3                                                            // [0x10dbe8] 0x008a9000 + 0x10dbe8 = 0x009b6be8
.byte 0xe8, 0x6b, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10dc00] 0x008a9000 + 0x10dc00 = 0x009b6c00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dc10] 0x008a9000 + 0x10dc10 = 0x009b6c10
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dc20] 0x008a9000 + 0x10dc20 = 0x009b6c20
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x91, 0xc0, 0x00, 0x18, 0x6c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dc30] 0x008a9000 + 0x10dc30 = 0x009b6c30
RTTIBaseClassDescriptor UR_StormCast 3                                                                             // [0x10dc40] 0x008a9000 + 0x10dc40 = 0x009b6c40
.byte 0x40, 0x6c, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10dc58] 0x008a9000 + 0x10dc58 = 0x009b6c58
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dc60] 0x008a9000 + 0x10dc60 = 0x009b6c60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x6c, 0x9b, 0x00               // [0x10dc70] 0x008a9000 + 0x10dc70 = 0x009b6c70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x87, 0xc0, 0x00               // [0x10dc80] 0x008a9000 + 0x10dc80 = 0x009b6c80
.byte 0x70, 0x6c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10dc90] 0x008a9000 + 0x10dc90 = 0x009b6c90
RTTIBaseClassDescriptor UR_ChangeScale 3                                                                           // [0x10dc98] 0x008a9000 + 0x10dc98 = 0x009b6c98
.byte 0x98, 0x6c, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10dcb0] 0x008a9000 + 0x10dcb0 = 0x009b6cb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dcc0] 0x008a9000 + 0x10dcc0 = 0x009b6cc0
.byte 0x04, 0x00, 0x00, 0x00, 0xb0, 0x6c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dcd0] 0x008a9000 + 0x10dcd0 = 0x009b6cd0
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0x87, 0xc0, 0x00, 0xc8, 0x6c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dce0] 0x008a9000 + 0x10dce0 = 0x009b6ce0
RTTIBaseClassDescriptor UR_ChangeScaleXYZ 3                                                                        // [0x10dcf0] 0x008a9000 + 0x10dcf0 = 0x009b6cf0
.byte 0xf0, 0x6c, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10dd08] 0x008a9000 + 0x10dd08 = 0x009b6d08
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dd10] 0x008a9000 + 0x10dd10 = 0x009b6d10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x6d, 0x9b, 0x00               // [0x10dd20] 0x008a9000 + 0x10dd20 = 0x009b6d20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x87, 0xc0, 0x00               // [0x10dd30] 0x008a9000 + 0x10dd30 = 0x009b6d30
.byte 0x20, 0x6d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10dd40] 0x008a9000 + 0x10dd40 = 0x009b6d40
RTTIBaseClassDescriptor UR_ChangeStretchHeight 3                                                                   // [0x10dd48] 0x008a9000 + 0x10dd48 = 0x009b6d48
.byte 0x48, 0x6d, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10dd60] 0x008a9000 + 0x10dd60 = 0x009b6d60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dd70] 0x008a9000 + 0x10dd70 = 0x009b6d70
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0x6d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dd80] 0x008a9000 + 0x10dd80 = 0x009b6d80
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x86, 0xc0, 0x00, 0x78, 0x6d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dd90] 0x008a9000 + 0x10dd90 = 0x009b6d90
RTTIBaseClassDescriptor UR_MoveAtom 3                                                                              // [0x10dda0] 0x008a9000 + 0x10dda0 = 0x009b6da0
.byte 0xa0, 0x6d, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10ddb8] 0x008a9000 + 0x10ddb8 = 0x009b6db8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ddc0] 0x008a9000 + 0x10ddc0 = 0x009b6dc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb8, 0x6d, 0x9b, 0x00               // [0x10ddd0] 0x008a9000 + 0x10ddd0 = 0x009b6dd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x8e, 0xc0, 0x00               // [0x10dde0] 0x008a9000 + 0x10dde0 = 0x009b6de0
.byte 0xd0, 0x6d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ddf0] 0x008a9000 + 0x10ddf0 = 0x009b6df0
RTTIBaseClassDescriptor UR_AddDefensiveSphere 3                                                                    // [0x10ddf8] 0x008a9000 + 0x10ddf8 = 0x009b6df8
.byte 0xf8, 0x6d, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10de10] 0x008a9000 + 0x10de10 = 0x009b6e10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10de20] 0x008a9000 + 0x10de20 = 0x009b6e20
.byte 0x04, 0x00, 0x00, 0x00, 0x10, 0x6e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10de30] 0x008a9000 + 0x10de30 = 0x009b6e30
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x89, 0xc0, 0x00, 0x28, 0x6e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10de40] 0x008a9000 + 0x10de40 = 0x009b6e40
RTTIBaseClassDescriptor UR_HealInHand 3                                                                            // [0x10de50] 0x008a9000 + 0x10de50 = 0x009b6e50
.byte 0x50, 0x6e, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10de68] 0x008a9000 + 0x10de68 = 0x009b6e68
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10de70] 0x008a9000 + 0x10de70 = 0x009b6e70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0x6e, 0x9b, 0x00               // [0x10de80] 0x008a9000 + 0x10de80 = 0x009b6e80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x86, 0xc0, 0x00               // [0x10de90] 0x008a9000 + 0x10de90 = 0x009b6e90
.byte 0x80, 0x6e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10dea0] 0x008a9000 + 0x10dea0 = 0x009b6ea0
RTTIBaseClassDescriptor UR_SphereSurfaceTracer 3                                                                   // [0x10dea8] 0x008a9000 + 0x10dea8 = 0x009b6ea8
.byte 0xa8, 0x6e, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10dec0] 0x008a9000 + 0x10dec0 = 0x009b6ec0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ded0] 0x008a9000 + 0x10ded0 = 0x009b6ed0
.byte 0x04, 0x00, 0x00, 0x00, 0xc0, 0x6e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dee0] 0x008a9000 + 0x10dee0 = 0x009b6ee0
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x86, 0xc0, 0x00, 0xd8, 0x6e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10def0] 0x008a9000 + 0x10def0 = 0x009b6ef0
RTTIBaseClassDescriptor UR_VapourEndEffect 3                                                                       // [0x10df00] 0x008a9000 + 0x10df00 = 0x009b6f00
.byte 0x00, 0x6f, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10df18] 0x008a9000 + 0x10df18 = 0x009b6f18
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10df20] 0x008a9000 + 0x10df20 = 0x009b6f20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x6f, 0x9b, 0x00               // [0x10df30] 0x008a9000 + 0x10df30 = 0x009b6f30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x85, 0xc0, 0x00               // [0x10df40] 0x008a9000 + 0x10df40 = 0x009b6f40
.byte 0x30, 0x6f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10df50] 0x008a9000 + 0x10df50 = 0x009b6f50
RTTIBaseClassDescriptor CheckShieldDeflections 3                                                                   // [0x10df58] 0x008a9000 + 0x10df58 = 0x009b6f58
.byte 0x58, 0x6f, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10df70] 0x008a9000 + 0x10df70 = 0x009b6f70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10df80] 0x008a9000 + 0x10df80 = 0x009b6f80
.byte 0x04, 0x00, 0x00, 0x00, 0x70, 0x6f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10df90] 0x008a9000 + 0x10df90 = 0x009b6f90
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0x88, 0xc0, 0x00, 0x88, 0x6f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dfa0] 0x008a9000 + 0x10dfa0 = 0x009b6fa0
RTTIBaseClassDescriptor AddSubCollectionsToAtom 2                                                                  // [0x10dfb0] 0x008a9000 + 0x10dfb0 = 0x009b6fb0
.byte 0xb0, 0x6f, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00                                                               // [0x10dfc8] 0x008a9000 + 0x10dfc8 = 0x009b6fc8
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dfd0] 0x008a9000 + 0x10dfd0 = 0x009b6fd0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0x6f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dfe0] 0x008a9000 + 0x10dfe0 = 0x009b6fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x48, 0x7f, 0xc0, 0x00, 0xd8, 0x6f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10dff0] 0x008a9000 + 0x10dff0 = 0x009b6ff0
RTTIBaseClassDescriptor EmitterRule 3                                                                              // [0x10e000] 0x008a9000 + 0x10e000 = 0x009b7000
RTTIBaseClassDescriptor EmitterRuleSimple 4                                                                        // [0x10e018] 0x008a9000 + 0x10e018 = 0x009b7018
.byte 0x18, 0x70, 0x9b, 0x00, 0x00, 0x70, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10e030] 0x008a9000 + 0x10e030 = 0x009b7030
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e040] 0x008a9000 + 0x10e040 = 0x009b7040
.byte 0x05, 0x00, 0x00, 0x00, 0x30, 0x70, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e050] 0x008a9000 + 0x10e050 = 0x009b7050
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x8d, 0xc0, 0x00, 0x48, 0x70, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e060] 0x008a9000 + 0x10e060 = 0x009b7060
RTTIBaseClassDescriptor EmitterRuleLightningSprite 3                                                               // [0x10e070] 0x008a9000 + 0x10e070 = 0x009b7070
.byte 0x70, 0x70, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e088] 0x008a9000 + 0x10e088 = 0x009b7088
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e090] 0x008a9000 + 0x10e090 = 0x009b7090
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x88, 0x70, 0x9b, 0x00               // [0x10e0a0] 0x008a9000 + 0x10e0a0 = 0x009b70a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x8d, 0xc0, 0x00               // [0x10e0b0] 0x008a9000 + 0x10e0b0 = 0x009b70b0
.byte 0xa0, 0x70, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e0c0] 0x008a9000 + 0x10e0c0 = 0x009b70c0
RTTIBaseClassDescriptor DiskEmitter 4                                                                              // [0x10e0c8] 0x008a9000 + 0x10e0c8 = 0x009b70c8
.byte 0xc8, 0x70, 0x9b, 0x00, 0x00, 0x70, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10e0e0] 0x008a9000 + 0x10e0e0 = 0x009b70e0
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e0f0] 0x008a9000 + 0x10e0f0 = 0x009b70f0
.byte 0x05, 0x00, 0x00, 0x00, 0xe0, 0x70, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e100] 0x008a9000 + 0x10e100 = 0x009b7100
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x8d, 0xc0, 0x00, 0xf8, 0x70, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e110] 0x008a9000 + 0x10e110 = 0x009b7110
RTTIBaseClassDescriptor SpreadingDiskEmitter 4                                                                     // [0x10e120] 0x008a9000 + 0x10e120 = 0x009b7120
.byte 0x20, 0x71, 0x9b, 0x00, 0x00, 0x70, 0x9b, 0x00                                                               // [0x10e138] 0x008a9000 + 0x10e138 = 0x009b7138
.byte 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e140] 0x008a9000 + 0x10e140 = 0x009b7140
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x71, 0x9b, 0x00               // [0x10e150] 0x008a9000 + 0x10e150 = 0x009b7150
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x8d, 0xc0, 0x00               // [0x10e160] 0x008a9000 + 0x10e160 = 0x009b7160
.byte 0x50, 0x71, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e170] 0x008a9000 + 0x10e170 = 0x009b7170
RTTIBaseClassDescriptor EmitterRuleConical 4                                                                       // [0x10e178] 0x008a9000 + 0x10e178 = 0x009b7178
.byte 0x78, 0x71, 0x9b, 0x00, 0x00, 0x70, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10e190] 0x008a9000 + 0x10e190 = 0x009b7190
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e1a0] 0x008a9000 + 0x10e1a0 = 0x009b71a0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0x71, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e1b0] 0x008a9000 + 0x10e1b0 = 0x009b71b0
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0x8c, 0xc0, 0x00, 0xa8, 0x71, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e1c0] 0x008a9000 + 0x10e1c0 = 0x009b71c0
RTTIBaseClassDescriptor UR_AtomsAtEPTarget 3                                                                       // [0x10e1d0] 0x008a9000 + 0x10e1d0 = 0x009b71d0
.byte 0xd0, 0x71, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e1e8] 0x008a9000 + 0x10e1e8 = 0x009b71e8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e1f0] 0x008a9000 + 0x10e1f0 = 0x009b71f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x71, 0x9b, 0x00               // [0x10e200] 0x008a9000 + 0x10e200 = 0x009b7200
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x85, 0xc0, 0x00               // [0x10e210] 0x008a9000 + 0x10e210 = 0x009b7210
.byte 0x00, 0x72, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e220] 0x008a9000 + 0x10e220 = 0x009b7220
RTTIBaseClassDescriptor UR_FollowCastPosn 3                                                                        // [0x10e228] 0x008a9000 + 0x10e228 = 0x009b7228
.byte 0x28, 0x72, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e240] 0x008a9000 + 0x10e240 = 0x009b7240
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e250] 0x008a9000 + 0x10e250 = 0x009b7250
.byte 0x04, 0x00, 0x00, 0x00, 0x40, 0x72, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e260] 0x008a9000 + 0x10e260 = 0x009b7260
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x81, 0xc0, 0x00, 0x58, 0x72, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e270] 0x008a9000 + 0x10e270 = 0x009b7270
RTTIBaseClassDescriptor UR_FollowLocalHand 3                                                                       // [0x10e280] 0x008a9000 + 0x10e280 = 0x009b7280
.byte 0x80, 0x72, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10e298] 0x008a9000 + 0x10e298 = 0x009b7298
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e2a0] 0x008a9000 + 0x10e2a0 = 0x009b72a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x72, 0x9b, 0x00               // [0x10e2b0] 0x008a9000 + 0x10e2b0 = 0x009b72b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x81, 0xc0, 0x00               // [0x10e2c0] 0x008a9000 + 0x10e2c0 = 0x009b72c0
.byte 0xb0, 0x72, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e2d0] 0x008a9000 + 0x10e2d0 = 0x009b72d0
RTTIBaseClassDescriptor CreateRuleMakeChain 4                                                                      // [0x10e2d8] 0x008a9000 + 0x10e2d8 = 0x009b72d8
.byte 0xd8, 0x72, 0x9b, 0x00, 0x70, 0x46, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10e2f0] 0x008a9000 + 0x10e2f0 = 0x009b72f0
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e300] 0x008a9000 + 0x10e300 = 0x009b7300
.byte 0x05, 0x00, 0x00, 0x00, 0xf0, 0x72, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e310] 0x008a9000 + 0x10e310 = 0x009b7310
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0x8c, 0xc0, 0x00, 0x08, 0x73, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e320] 0x008a9000 + 0x10e320 = 0x009b7320
RTTIBaseClassDescriptor UR_ExplodeObject 3                                                                         // [0x10e330] 0x008a9000 + 0x10e330 = 0x009b7330
.byte 0x30, 0x73, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e348] 0x008a9000 + 0x10e348 = 0x009b7348
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e350] 0x008a9000 + 0x10e350 = 0x009b7350
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x73, 0x9b, 0x00               // [0x10e360] 0x008a9000 + 0x10e360 = 0x009b7360
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x84, 0xc0, 0x00               // [0x10e370] 0x008a9000 + 0x10e370 = 0x009b7370
.byte 0x60, 0x73, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e380] 0x008a9000 + 0x10e380 = 0x009b7380
RTTIBaseClassDescriptor UR_ExplodeObject2 3                                                                        // [0x10e388] 0x008a9000 + 0x10e388 = 0x009b7388
.byte 0x88, 0x73, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e3a0] 0x008a9000 + 0x10e3a0 = 0x009b73a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e3b0] 0x008a9000 + 0x10e3b0 = 0x009b73b0
.byte 0x04, 0x00, 0x00, 0x00, 0xa0, 0x73, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e3c0] 0x008a9000 + 0x10e3c0 = 0x009b73c0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x84, 0xc0, 0x00, 0xb8, 0x73, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e3d0] 0x008a9000 + 0x10e3d0 = 0x009b73d0
RTTIBaseClassDescriptor UR_MoveAtomToBaseGroup 3                                                                   // [0x10e3e0] 0x008a9000 + 0x10e3e0 = 0x009b73e0
.byte 0xe0, 0x73, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10e3f8] 0x008a9000 + 0x10e3f8 = 0x009b73f8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e400] 0x008a9000 + 0x10e400 = 0x009b7400
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x73, 0x9b, 0x00               // [0x10e410] 0x008a9000 + 0x10e410 = 0x009b7410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x84, 0xc0, 0x00               // [0x10e420] 0x008a9000 + 0x10e420 = 0x009b7420
.byte 0x10, 0x74, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e430] 0x008a9000 + 0x10e430 = 0x009b7430
RTTIBaseClassDescriptor AttatchFireBallToAtom 3                                                                    // [0x10e438] 0x008a9000 + 0x10e438 = 0x009b7438
.byte 0x38, 0x74, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e450] 0x008a9000 + 0x10e450 = 0x009b7450
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e460] 0x008a9000 + 0x10e460 = 0x009b7460
.byte 0x04, 0x00, 0x00, 0x00, 0x50, 0x74, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e470] 0x008a9000 + 0x10e470 = 0x009b7470
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0x24, 0xc0, 0x00, 0x68, 0x74, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e480] 0x008a9000 + 0x10e480 = 0x009b7480
RTTIBaseClassDescriptor CreateNewBaseAtom 3                                                                        // [0x10e490] 0x008a9000 + 0x10e490 = 0x009b7490
.byte 0x90, 0x74, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e4a8] 0x008a9000 + 0x10e4a8 = 0x009b74a8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e4b0] 0x008a9000 + 0x10e4b0 = 0x009b74b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa8, 0x74, 0x9b, 0x00               // [0x10e4c0] 0x008a9000 + 0x10e4c0 = 0x009b74c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x8c, 0xc0, 0x00               // [0x10e4d0] 0x008a9000 + 0x10e4d0 = 0x009b74d0
.byte 0xc0, 0x74, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e4e0] 0x008a9000 + 0x10e4e0 = 0x009b74e0
RTTIBaseClassDescriptor CreateRuleSphere 4                                                                         // [0x10e4e8] 0x008a9000 + 0x10e4e8 = 0x009b74e8
.byte 0xe8, 0x74, 0x9b, 0x00, 0x70, 0x46, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00               // [0x10e500] 0x008a9000 + 0x10e500 = 0x009b7500
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e510] 0x008a9000 + 0x10e510 = 0x009b7510
.byte 0x05, 0x00, 0x00, 0x00, 0x00, 0x75, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e520] 0x008a9000 + 0x10e520 = 0x009b7520
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x8c, 0xc0, 0x00, 0x18, 0x75, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e530] 0x008a9000 + 0x10e530 = 0x009b7530
RTTIBaseClassDescriptor UR_SideSpin 3                                                                              // [0x10e540] 0x008a9000 + 0x10e540 = 0x009b7540
.byte 0x40, 0x75, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10e558] 0x008a9000 + 0x10e558 = 0x009b7558
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e560] 0x008a9000 + 0x10e560 = 0x009b7560
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x75, 0x9b, 0x00               // [0x10e570] 0x008a9000 + 0x10e570 = 0x009b7570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x8e, 0xc0, 0x00               // [0x10e580] 0x008a9000 + 0x10e580 = 0x009b7580
.byte 0x70, 0x75, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e590] 0x008a9000 + 0x10e590 = 0x009b7590
RTTIBaseClassDescriptor UR_InitialSpin 3                                                                           // [0x10e598] 0x008a9000 + 0x10e598 = 0x009b7598
.byte 0x98, 0x75, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e5b0] 0x008a9000 + 0x10e5b0 = 0x009b75b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e5c0] 0x008a9000 + 0x10e5c0 = 0x009b75c0
.byte 0x04, 0x00, 0x00, 0x00, 0xb0, 0x75, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e5d0] 0x008a9000 + 0x10e5d0 = 0x009b75d0
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x8e, 0xc0, 0x00, 0xc8, 0x75, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e5e0] 0x008a9000 + 0x10e5e0 = 0x009b75e0
RTTIBaseClassDescriptor CreateRuleFusedSphericalExplode 4                                                          // [0x10e5f0] 0x008a9000 + 0x10e5f0 = 0x009b75f0
.byte 0xf0, 0x75, 0x9b, 0x00, 0x70, 0x46, 0x9b, 0x00                                                               // [0x10e608] 0x008a9000 + 0x10e608 = 0x009b7608
.byte 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e610] 0x008a9000 + 0x10e610 = 0x009b7610
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x76, 0x9b, 0x00               // [0x10e620] 0x008a9000 + 0x10e620 = 0x009b7620
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x83, 0xc0, 0x00               // [0x10e630] 0x008a9000 + 0x10e630 = 0x009b7630
.byte 0x20, 0x76, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e640] 0x008a9000 + 0x10e640 = 0x009b7640
RTTIBaseClassDescriptor CreateRule_GameObjectRef 3                                                                 // [0x10e648] 0x008a9000 + 0x10e648 = 0x009b7648
.byte 0x48, 0x76, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e660] 0x008a9000 + 0x10e660 = 0x009b7660
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e670] 0x008a9000 + 0x10e670 = 0x009b7670
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0x76, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e680] 0x008a9000 + 0x10e680 = 0x009b7680
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x83, 0xc0, 0x00, 0x78, 0x76, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e690] 0x008a9000 + 0x10e690 = 0x009b7690
RTTIBaseClassDescriptor LightningForkFlicker 2                                                                     // [0x10e6a0] 0x008a9000 + 0x10e6a0 = 0x009b76a0
.byte 0xa0, 0x76, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00                                                               // [0x10e6b8] 0x008a9000 + 0x10e6b8 = 0x009b76b8
.byte 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e6c0] 0x008a9000 + 0x10e6c0 = 0x009b76c0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0x76, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e6d0] 0x008a9000 + 0x10e6d0 = 0x009b76d0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0x83, 0xc0, 0x00, 0xc8, 0x76, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e6e0] 0x008a9000 + 0x10e6e0 = 0x009b76e0
RTTIBaseClassDescriptor UR_FollowParent 3                                                                          // [0x10e6f0] 0x008a9000 + 0x10e6f0 = 0x009b76f0
.byte 0xf0, 0x76, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00                                                               // [0x10e708] 0x008a9000 + 0x10e708 = 0x009b7708
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e710] 0x008a9000 + 0x10e710 = 0x009b7710
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x77, 0x9b, 0x00               // [0x10e720] 0x008a9000 + 0x10e720 = 0x009b7720
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x81, 0xc0, 0x00               // [0x10e730] 0x008a9000 + 0x10e730 = 0x009b7730
.byte 0x20, 0x77, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e740] 0x008a9000 + 0x10e740 = 0x009b7740
RTTIBaseClassDescriptor UR_FollowTargets 3                                                                         // [0x10e748] 0x008a9000 + 0x10e748 = 0x009b7748
.byte 0x48, 0x77, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e760] 0x008a9000 + 0x10e760 = 0x009b7760
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e770] 0x008a9000 + 0x10e770 = 0x009b7770
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0x77, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e780] 0x008a9000 + 0x10e780 = 0x009b7780
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x81, 0xc0, 0x00, 0x78, 0x77, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e790] 0x008a9000 + 0x10e790 = 0x009b7790
RTTIBaseClassDescriptor UR_CreatureSpellItch 3                                                                     // [0x10e7a0] 0x008a9000 + 0x10e7a0 = 0x009b77a0
.byte 0xa0, 0x77, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e7b8] 0x008a9000 + 0x10e7b8 = 0x009b77b8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e7c0] 0x008a9000 + 0x10e7c0 = 0x009b77c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb8, 0x77, 0x9b, 0x00               // [0x10e7d0] 0x008a9000 + 0x10e7d0 = 0x009b77d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x82, 0xc0, 0x00               // [0x10e7e0] 0x008a9000 + 0x10e7e0 = 0x009b77e0
.byte 0xd0, 0x77, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e7f0] 0x008a9000 + 0x10e7f0 = 0x009b77f0
RTTIBaseClassDescriptor UR_CreatureSpellFreeze 3                                                                   // [0x10e7f8] 0x008a9000 + 0x10e7f8 = 0x009b77f8
.byte 0xf8, 0x77, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e810] 0x008a9000 + 0x10e810 = 0x009b7810
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e820] 0x008a9000 + 0x10e820 = 0x009b7820
.byte 0x04, 0x00, 0x00, 0x00, 0x10, 0x78, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e830] 0x008a9000 + 0x10e830 = 0x009b7830
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x82, 0xc0, 0x00, 0x28, 0x78, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e840] 0x008a9000 + 0x10e840 = 0x009b7840
RTTIBaseClassDescriptor UR_CreatureSpellGeneric 3                                                                  // [0x10e850] 0x008a9000 + 0x10e850 = 0x009b7850
.byte 0x50, 0x78, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e868] 0x008a9000 + 0x10e868 = 0x009b7868
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e870] 0x008a9000 + 0x10e870 = 0x009b7870
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0x78, 0x9b, 0x00               // [0x10e880] 0x008a9000 + 0x10e880 = 0x009b7880
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x82, 0xc0, 0x00               // [0x10e890] 0x008a9000 + 0x10e890 = 0x009b7890
.byte 0x80, 0x78, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e8a0] 0x008a9000 + 0x10e8a0 = 0x009b78a0
RTTIBaseClassDescriptor UR_CreatureSpellCompassion 3                                                               // [0x10e8a8] 0x008a9000 + 0x10e8a8 = 0x009b78a8
.byte 0xa8, 0x78, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e8c0] 0x008a9000 + 0x10e8c0 = 0x009b78c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e8d0] 0x008a9000 + 0x10e8d0 = 0x009b78d0
.byte 0x04, 0x00, 0x00, 0x00, 0xc0, 0x78, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e8e0] 0x008a9000 + 0x10e8e0 = 0x009b78e0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0xc0, 0x00, 0xd8, 0x78, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e8f0] 0x008a9000 + 0x10e8f0 = 0x009b78f0
RTTIBaseClassDescriptor UR_ManaPathNew 3                                                                           // [0x10e900] 0x008a9000 + 0x10e900 = 0x009b7900
.byte 0x00, 0x79, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e918] 0x008a9000 + 0x10e918 = 0x009b7918
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e920] 0x008a9000 + 0x10e920 = 0x009b7920
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x79, 0x9b, 0x00               // [0x10e930] 0x008a9000 + 0x10e930 = 0x009b7930
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x80, 0xc0, 0x00               // [0x10e940] 0x008a9000 + 0x10e940 = 0x009b7940
.byte 0x30, 0x79, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10e950] 0x008a9000 + 0x10e950 = 0x009b7950
RTTIBaseClassDescriptor UR_BeliefSprite 3                                                                          // [0x10e958] 0x008a9000 + 0x10e958 = 0x009b7958
.byte 0x58, 0x79, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10e970] 0x008a9000 + 0x10e970 = 0x009b7970
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e980] 0x008a9000 + 0x10e980 = 0x009b7980
.byte 0x04, 0x00, 0x00, 0x00, 0x70, 0x79, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e990] 0x008a9000 + 0x10e990 = 0x009b7990
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x80, 0xc0, 0x00, 0x88, 0x79, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e9a0] 0x008a9000 + 0x10e9a0 = 0x009b79a0
RTTIBaseClassDescriptor UR_TownCentreBelief 3                                                                      // [0x10e9b0] 0x008a9000 + 0x10e9b0 = 0x009b79b0
.byte 0xb0, 0x79, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10e9c8] 0x008a9000 + 0x10e9c8 = 0x009b79c8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10e9d0] 0x008a9000 + 0x10e9d0 = 0x009b79d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc8, 0x79, 0x9b, 0x00               // [0x10e9e0] 0x008a9000 + 0x10e9e0 = 0x009b79e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0xc0, 0x00               // [0x10e9f0] 0x008a9000 + 0x10e9f0 = 0x009b79f0
.byte 0xe0, 0x79, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ea00] 0x008a9000 + 0x10ea00 = 0x009b7a00
RTTIBaseClassDescriptor UR_Rope 3                                                                                  // [0x10ea08] 0x008a9000 + 0x10ea08 = 0x009b7a08
.byte 0x08, 0x7a, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10ea20] 0x008a9000 + 0x10ea20 = 0x009b7a20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ea30] 0x008a9000 + 0x10ea30 = 0x009b7a30
.byte 0x04, 0x00, 0x00, 0x00, 0x20, 0x7a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ea40] 0x008a9000 + 0x10ea40 = 0x009b7a40
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0xc0, 0x00, 0x38, 0x7a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ea50] 0x008a9000 + 0x10ea50 = 0x009b7a50
RTTIBaseClassDescriptor UR_ObjectArcer 3                                                                           // [0x10ea60] 0x008a9000 + 0x10ea60 = 0x009b7a60
.byte 0x60, 0x7a, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10ea78] 0x008a9000 + 0x10ea78 = 0x009b7a78
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ea80] 0x008a9000 + 0x10ea80 = 0x009b7a80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0x7a, 0x9b, 0x00               // [0x10ea90] 0x008a9000 + 0x10ea90 = 0x009b7a90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x7f, 0xc0, 0x00               // [0x10eaa0] 0x008a9000 + 0x10eaa0 = 0x009b7aa0
.byte 0x90, 0x7a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10eab0] 0x008a9000 + 0x10eab0 = 0x009b7ab0
RTTIBaseClassDescriptor UR_ScaleByCameraDist 3                                                                     // [0x10eab8] 0x008a9000 + 0x10eab8 = 0x009b7ab8
.byte 0xb8, 0x7a, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10ead0] 0x008a9000 + 0x10ead0 = 0x009b7ad0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eae0] 0x008a9000 + 0x10eae0 = 0x009b7ae0
.byte 0x04, 0x00, 0x00, 0x00, 0xd0, 0x7a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eaf0] 0x008a9000 + 0x10eaf0 = 0x009b7af0
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0x91, 0xc0, 0x00, 0xe8, 0x7a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eb00] 0x008a9000 + 0x10eb00 = 0x009b7b00
RTTIBaseClassDescriptor RemoveRule 2                                                                               // [0x10eb10] 0x008a9000 + 0x10eb10 = 0x009b7b10
RTTIBaseClassDescriptor RemoveRuleOldAgeOnly 3                                                                     // [0x10eb28] 0x008a9000 + 0x10eb28 = 0x009b7b28
.byte 0x28, 0x7b, 0x9b, 0x00, 0x10, 0x7b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10eb40] 0x008a9000 + 0x10eb40 = 0x009b7b40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eb50] 0x008a9000 + 0x10eb50 = 0x009b7b50
.byte 0x04, 0x00, 0x00, 0x00, 0x40, 0x7b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eb60] 0x008a9000 + 0x10eb60 = 0x009b7b60
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x8b, 0xc0, 0x00, 0x58, 0x7b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eb70] 0x008a9000 + 0x10eb70 = 0x009b7b70
RTTIBaseClassDescriptor RemoveRuleProb 3                                                                           // [0x10eb80] 0x008a9000 + 0x10eb80 = 0x009b7b80
.byte 0x80, 0x7b, 0x9b, 0x00, 0x10, 0x7b, 0x9b, 0x00                                                               // [0x10eb98] 0x008a9000 + 0x10eb98 = 0x009b7b98
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eba0] 0x008a9000 + 0x10eba0 = 0x009b7ba0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x7b, 0x9b, 0x00               // [0x10ebb0] 0x008a9000 + 0x10ebb0 = 0x009b7bb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x8b, 0xc0, 0x00               // [0x10ebc0] 0x008a9000 + 0x10ebc0 = 0x009b7bc0
.byte 0xb0, 0x7b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ebd0] 0x008a9000 + 0x10ebd0 = 0x009b7bd0
RTTIBaseClassDescriptor RemoveRuleAfterCloseDown 3                                                                 // [0x10ebd8] 0x008a9000 + 0x10ebd8 = 0x009b7bd8
.byte 0xd8, 0x7b, 0x9b, 0x00, 0x10, 0x7b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10ebf0] 0x008a9000 + 0x10ebf0 = 0x009b7bf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ec00] 0x008a9000 + 0x10ec00 = 0x009b7c00
.byte 0x04, 0x00, 0x00, 0x00, 0xf0, 0x7b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ec10] 0x008a9000 + 0x10ec10 = 0x009b7c10
.byte 0x00, 0x00, 0x00, 0x00, 0x70, 0x8b, 0xc0, 0x00, 0x08, 0x7c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ec20] 0x008a9000 + 0x10ec20 = 0x009b7c20
RTTIBaseClassDescriptor RemoveRuleAfterConditionTrue 3                                                             // [0x10ec30] 0x008a9000 + 0x10ec30 = 0x009b7c30
.byte 0x30, 0x7c, 0x9b, 0x00, 0x10, 0x7b, 0x9b, 0x00                                                               // [0x10ec48] 0x008a9000 + 0x10ec48 = 0x009b7c48
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ec50] 0x008a9000 + 0x10ec50 = 0x009b7c50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x7c, 0x9b, 0x00               // [0x10ec60] 0x008a9000 + 0x10ec60 = 0x009b7c60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x8b, 0xc0, 0x00               // [0x10ec70] 0x008a9000 + 0x10ec70 = 0x009b7c70
.byte 0x60, 0x7c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ec80] 0x008a9000 + 0x10ec80 = 0x009b7c80
RTTIBaseClassDescriptor LandscapeCollide 2                                                                         // [0x10ec88] 0x008a9000 + 0x10ec88 = 0x009b7c88
.byte 0x88, 0x7c, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eca0] 0x008a9000 + 0x10eca0 = 0x009b7ca0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa0, 0x7c, 0x9b, 0x00               // [0x10ecb0] 0x008a9000 + 0x10ecb0 = 0x009b7cb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x8a, 0xc0, 0x00               // [0x10ecc0] 0x008a9000 + 0x10ecc0 = 0x009b7cc0
.byte 0xb0, 0x7c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ecd0] 0x008a9000 + 0x10ecd0 = 0x009b7cd0
RTTIBaseClassDescriptor SetInitialRandomOrientations 3                                                             // [0x10ecd8] 0x008a9000 + 0x10ecd8 = 0x009b7cd8
.byte 0xd8, 0x7c, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10ecf0] 0x008a9000 + 0x10ecf0 = 0x009b7cf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ed00] 0x008a9000 + 0x10ed00 = 0x009b7d00
.byte 0x04, 0x00, 0x00, 0x00, 0xf0, 0x7c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ed10] 0x008a9000 + 0x10ed10 = 0x009b7d10
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x7f, 0xc0, 0x00, 0x08, 0x7d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ed20] 0x008a9000 + 0x10ed20 = 0x009b7d20
RTTIBaseClassDescriptor DrawOffset 3                                                                               // [0x10ed30] 0x008a9000 + 0x10ed30 = 0x009b7d30
.byte 0x30, 0x7d, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00                                                               // [0x10ed48] 0x008a9000 + 0x10ed48 = 0x009b7d48
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ed50] 0x008a9000 + 0x10ed50 = 0x009b7d50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x7d, 0x9b, 0x00               // [0x10ed60] 0x008a9000 + 0x10ed60 = 0x009b7d60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x94, 0xc0, 0x00               // [0x10ed70] 0x008a9000 + 0x10ed70 = 0x009b7d70
.byte 0x60, 0x7d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ed80] 0x008a9000 + 0x10ed80 = 0x009b7d80
RTTIBaseClassDescriptor DrawOffsetLT 4                                                                             // [0x10ed88] 0x008a9000 + 0x10ed88 = 0x009b7d88
.byte 0x88, 0x7d, 0x9b, 0x00, 0x30, 0x7d, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10eda0] 0x008a9000 + 0x10eda0 = 0x009b7da0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10edb0] 0x008a9000 + 0x10edb0 = 0x009b7db0
.byte 0x05, 0x00, 0x00, 0x00, 0xa0, 0x7d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10edc0] 0x008a9000 + 0x10edc0 = 0x009b7dc0
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0x94, 0xc0, 0x00, 0xb8, 0x7d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10edd0] 0x008a9000 + 0x10edd0 = 0x009b7dd0
RTTIBaseClassDescriptor DrawOffsetDecay 4                                                                          // [0x10ede0] 0x008a9000 + 0x10ede0 = 0x009b7de0
.byte 0xe0, 0x7d, 0x9b, 0x00, 0x30, 0x7d, 0x9b, 0x00                                                               // [0x10edf8] 0x008a9000 + 0x10edf8 = 0x009b7df8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ee00] 0x008a9000 + 0x10ee00 = 0x009b7e00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0x7d, 0x9b, 0x00               // [0x10ee10] 0x008a9000 + 0x10ee10 = 0x009b7e10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x94, 0xc0, 0x00               // [0x10ee20] 0x008a9000 + 0x10ee20 = 0x009b7e20
.byte 0x10, 0x7e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ee30] 0x008a9000 + 0x10ee30 = 0x009b7e30
.byte 0x40, 0xd2, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ee38] 0x008a9000 + 0x10ee38 = 0x009b7e38
.byte 0x18, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x10ee40] 0x008a9000 + 0x10ee40 = 0x009b7e40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ee48] 0x008a9000 + 0x10ee48 = 0x009b7e48
RTTIBaseClassDescriptor Particle3DObj 5                                                                            // [0x10ee50] 0x008a9000 + 0x10ee50 = 0x009b7e50
.byte 0x50, 0x7e, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00                                                               // [0x10ee68] 0x008a9000 + 0x10ee68 = 0x009b7e68
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x38, 0x7e, 0x9b, 0x00               // [0x10ee70] 0x008a9000 + 0x10ee70 = 0x009b7e70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x10ee80] 0x008a9000 + 0x10ee80 = 0x009b7e80
.byte 0x06, 0x00, 0x00, 0x00, 0x68, 0x7e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ee90] 0x008a9000 + 0x10ee90 = 0x009b7e90
.byte 0x00, 0x00, 0x00, 0x00, 0xc8, 0x94, 0xc0, 0x00, 0x88, 0x7e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eea0] 0x008a9000 + 0x10eea0 = 0x009b7ea0
RTTIBaseClassDescriptor Particle3DObjAnimTextured 6                                                                // [0x10eeb0] 0x008a9000 + 0x10eeb0 = 0x009b7eb0
.byte 0xb0, 0x7e, 0x9b, 0x00, 0x50, 0x7e, 0x9b, 0x00                                                               // [0x10eec8] 0x008a9000 + 0x10eec8 = 0x009b7ec8
.byte 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10eed0] 0x008a9000 + 0x10eed0 = 0x009b7ed0
.byte 0x38, 0x7e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x10eee0] 0x008a9000 + 0x10eee0 = 0x009b7ee0
.byte 0x07, 0x00, 0x00, 0x00, 0xc8, 0x7e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eef0] 0x008a9000 + 0x10eef0 = 0x009b7ef0
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0x94, 0xc0, 0x00, 0xe8, 0x7e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ef00] 0x008a9000 + 0x10ef00 = 0x009b7f00
RTTIBaseClassDescriptor RenderParticleCreatureRef 4                                                                // [0x10ef10] 0x008a9000 + 0x10ef10 = 0x009b7f10
.byte 0x10, 0x7f, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00                                                               // [0x10ef28] 0x008a9000 + 0x10ef28 = 0x009b7f28
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ef30] 0x008a9000 + 0x10ef30 = 0x009b7f30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x28, 0x7f, 0x9b, 0x00               // [0x10ef40] 0x008a9000 + 0x10ef40 = 0x009b7f40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x95, 0xc0, 0x00               // [0x10ef50] 0x008a9000 + 0x10ef50 = 0x009b7f50
.byte 0x40, 0x7f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xed, 0x9a, 0x00, 0x38, 0xed, 0x9a, 0x00               // [0x10ef60] 0x008a9000 + 0x10ef60 = 0x009b7f60
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ef70] 0x008a9000 + 0x10ef70 = 0x009b7f70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x68, 0x7f, 0x9b, 0x00               // [0x10ef80] 0x008a9000 + 0x10ef80 = 0x009b7f80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xd5, 0xbe, 0x00               // [0x10ef90] 0x008a9000 + 0x10ef90 = 0x009b7f90
.byte 0x80, 0x7f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10efa0] 0x008a9000 + 0x10efa0 = 0x009b7fa0
RTTIBaseClassDescriptor Particle3DAnim 4                                                                           // [0x10efa8] 0x008a9000 + 0x10efa8 = 0x009b7fa8
.byte 0xa8, 0x7f, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10efc0] 0x008a9000 + 0x10efc0 = 0x009b7fc0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10efd0] 0x008a9000 + 0x10efd0 = 0x009b7fd0
.byte 0x05, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10efe0] 0x008a9000 + 0x10efe0 = 0x009b7fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0x95, 0xc0, 0x00, 0xd8, 0x7f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10eff0] 0x008a9000 + 0x10eff0 = 0x009b7ff0
RTTIBaseClassDescriptor Particle3DAnimWithCamera 5                                                                 // [0x10f000] 0x008a9000 + 0x10f000 = 0x009b8000
.byte 0x00, 0x80, 0x9b, 0x00, 0xa8, 0x7f, 0x9b, 0x00                                                               // [0x10f018] 0x008a9000 + 0x10f018 = 0x009b8018
.byte 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10f020] 0x008a9000 + 0x10f020 = 0x009b8020
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f030] 0x008a9000 + 0x10f030 = 0x009b8030
.byte 0x06, 0x00, 0x00, 0x00, 0x18, 0x80, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f040] 0x008a9000 + 0x10f040 = 0x009b8040
.byte 0x00, 0x00, 0x00, 0x00, 0x58, 0x95, 0xc0, 0x00, 0x38, 0x80, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f050] 0x008a9000 + 0x10f050 = 0x009b8050
.byte 0x40, 0xd2, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f060] 0x008a9000 + 0x10f060 = 0x009b8060
.byte 0x14, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x10f068] 0x008a9000 + 0x10f068 = 0x009b8068
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f070] 0x008a9000 + 0x10f070 = 0x009b8070
RTTIBaseClassDescriptor Chain 4                                                                                    // [0x10f078] 0x008a9000 + 0x10f078 = 0x009b8078
.byte 0x78, 0x80, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10f090] 0x008a9000 + 0x10f090 = 0x009b8090
.byte 0x60, 0x80, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x10f0a0] 0x008a9000 + 0x10f0a0 = 0x009b80a0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0x80, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f0b0] 0x008a9000 + 0x10f0b0 = 0x009b80b0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x95, 0xc0, 0x00, 0xa8, 0x80, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f0c0] 0x008a9000 + 0x10f0c0 = 0x009b80c0
RTTIBaseClassDescriptor RenderParticleGJMesh 4                                                                     // [0x10f0d0] 0x008a9000 + 0x10f0d0 = 0x009b80d0
.byte 0xd0, 0x80, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00                                                               // [0x10f0e8] 0x008a9000 + 0x10f0e8 = 0x009b80e8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f0f0] 0x008a9000 + 0x10f0f0 = 0x009b80f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe8, 0x80, 0x9b, 0x00               // [0x10f100] 0x008a9000 + 0x10f100 = 0x009b8100
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x95, 0xc0, 0x00               // [0x10f110] 0x008a9000 + 0x10f110 = 0x009b8110
.byte 0x00, 0x81, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f120] 0x008a9000 + 0x10f120 = 0x009b8120
RTTIBaseClassDescriptor RenderParticleGJMeshRotatingUV 5                                                           // [0x10f128] 0x008a9000 + 0x10f128 = 0x009b8128
.byte 0x28, 0x81, 0x9b, 0x00, 0xd0, 0x80, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00               // [0x10f140] 0x008a9000 + 0x10f140 = 0x009b8140
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f150] 0x008a9000 + 0x10f150 = 0x009b8150
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x81, 0x9b, 0x00               // [0x10f160] 0x008a9000 + 0x10f160 = 0x009b8160
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x95, 0xc0, 0x00               // [0x10f170] 0x008a9000 + 0x10f170 = 0x009b8170
.byte 0x60, 0x81, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f180] 0x008a9000 + 0x10f180 = 0x009b8180
RTTIBaseClassDescriptor RenderParticleMist 4                                                                       // [0x10f188] 0x008a9000 + 0x10f188 = 0x009b8188
.byte 0x88, 0x81, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10f1a0] 0x008a9000 + 0x10f1a0 = 0x009b81a0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f1b0] 0x008a9000 + 0x10f1b0 = 0x009b81b0
.byte 0x05, 0x00, 0x00, 0x00, 0xa0, 0x81, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f1c0] 0x008a9000 + 0x10f1c0 = 0x009b81c0
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0x96, 0xc0, 0x00, 0xb8, 0x81, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f1d0] 0x008a9000 + 0x10f1d0 = 0x009b81d0
RTTIBaseClassDescriptor ParticlePlayerSymbol 4                                                                     // [0x10f1e0] 0x008a9000 + 0x10f1e0 = 0x009b81e0
.byte 0xe0, 0x81, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00                                                               // [0x10f1f8] 0x008a9000 + 0x10f1f8 = 0x009b81f8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f200] 0x008a9000 + 0x10f200 = 0x009b8200
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf8, 0x81, 0x9b, 0x00               // [0x10f210] 0x008a9000 + 0x10f210 = 0x009b8210
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x96, 0xc0, 0x00               // [0x10f220] 0x008a9000 + 0x10f220 = 0x009b8220
.byte 0x10, 0x82, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f230] 0x008a9000 + 0x10f230 = 0x009b8230
RTTIBaseClassDescriptor RenderParticleGameObject 4                                                                 // [0x10f238] 0x008a9000 + 0x10f238 = 0x009b8238
.byte 0x38, 0x82, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10f250] 0x008a9000 + 0x10f250 = 0x009b8250
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f260] 0x008a9000 + 0x10f260 = 0x009b8260
.byte 0x05, 0x00, 0x00, 0x00, 0x50, 0x82, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f270] 0x008a9000 + 0x10f270 = 0x009b8270
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x96, 0xc0, 0x00, 0x68, 0x82, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f280] 0x008a9000 + 0x10f280 = 0x009b8280
RTTIBaseClassDescriptor ParticleLightMap 4                                                                         // [0x10f290] 0x008a9000 + 0x10f290 = 0x009b8290
.byte 0x90, 0x82, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00                                                               // [0x10f2a8] 0x008a9000 + 0x10f2a8 = 0x009b82a8
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f2b0] 0x008a9000 + 0x10f2b0 = 0x009b82b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x82, 0x9b, 0x00               // [0x10f2c0] 0x008a9000 + 0x10f2c0 = 0x009b82c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x96, 0xc0, 0x00               // [0x10f2d0] 0x008a9000 + 0x10f2d0 = 0x009b82d0
.byte 0xc0, 0x82, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f2e0] 0x008a9000 + 0x10f2e0 = 0x009b82e0
RTTIBaseClassDescriptor RenderParticleVolBlendMesh 4                                                               // [0x10f2e8] 0x008a9000 + 0x10f2e8 = 0x009b82e8
.byte 0xe8, 0x82, 0x9b, 0x00, 0x38, 0xed, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10f300] 0x008a9000 + 0x10f300 = 0x009b8300
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f310] 0x008a9000 + 0x10f310 = 0x009b8310
.byte 0x05, 0x00, 0x00, 0x00, 0x00, 0x83, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f320] 0x008a9000 + 0x10f320 = 0x009b8320
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x96, 0xc0, 0x00, 0x18, 0x83, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f330] 0x008a9000 + 0x10f330 = 0x009b8330
RTTIBaseClassDescriptor DefensiveShield 3                                                                          // [0x10f340] 0x008a9000 + 0x10f340 = 0x009b8340
.byte 0x40, 0x83, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00                                                               // [0x10f358] 0x008a9000 + 0x10f358 = 0x009b8358
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f360] 0x008a9000 + 0x10f360 = 0x009b8360
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x83, 0x9b, 0x00               // [0x10f370] 0x008a9000 + 0x10f370 = 0x009b8370
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0xc0, 0x00               // [0x10f380] 0x008a9000 + 0x10f380 = 0x009b8380
.byte 0x70, 0x83, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f390] 0x008a9000 + 0x10f390 = 0x009b8390
RTTIBaseClassDescriptor DefensiveSphere 4                                                                          // [0x10f398] 0x008a9000 + 0x10f398 = 0x009b8398
.byte 0x98, 0x83, 0x9b, 0x00, 0x40, 0x83, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10f3b0] 0x008a9000 + 0x10f3b0 = 0x009b83b0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f3c0] 0x008a9000 + 0x10f3c0 = 0x009b83c0
.byte 0x05, 0x00, 0x00, 0x00, 0xb0, 0x83, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f3d0] 0x008a9000 + 0x10f3d0 = 0x009b83d0
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x97, 0xc0, 0x00, 0xc8, 0x83, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f3e0] 0x008a9000 + 0x10f3e0 = 0x009b83e0
RTTIBaseClassDescriptor PSysSound 3                                                                                // [0x10f3f0] 0x008a9000 + 0x10f3f0 = 0x009b83f0
.byte 0xf0, 0x83, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00                                                               // [0x10f408] 0x008a9000 + 0x10f408 = 0x009b8408
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f410] 0x008a9000 + 0x10f410 = 0x009b8410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x84, 0x9b, 0x00               // [0x10f420] 0x008a9000 + 0x10f420 = 0x009b8420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x97, 0xc0, 0x00               // [0x10f430] 0x008a9000 + 0x10f430 = 0x009b8430
.byte 0x20, 0x84, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f440] 0x008a9000 + 0x10f440 = 0x009b8440
RTTIBaseClassDescriptor UR_Tornado 3                                                                               // [0x10f448] 0x008a9000 + 0x10f448 = 0x009b8448
.byte 0x48, 0x84, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10f460] 0x008a9000 + 0x10f460 = 0x009b8460
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f470] 0x008a9000 + 0x10f470 = 0x009b8470
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0x84, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f480] 0x008a9000 + 0x10f480 = 0x009b8480
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x88, 0xc0, 0x00, 0x78, 0x84, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f490] 0x008a9000 + 0x10f490 = 0x009b8490
RTTIBaseClassDescriptor UR_VortexAttract 3                                                                         // [0x10f4a0] 0x008a9000 + 0x10f4a0 = 0x009b84a0
.byte 0xa0, 0x84, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10f4b8] 0x008a9000 + 0x10f4b8 = 0x009b84b8
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f4c0] 0x008a9000 + 0x10f4c0 = 0x009b84c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb8, 0x84, 0x9b, 0x00               // [0x10f4d0] 0x008a9000 + 0x10f4d0 = 0x009b84d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x87, 0xc0, 0x00               // [0x10f4e0] 0x008a9000 + 0x10f4e0 = 0x009b84e0
.byte 0xd0, 0x84, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f4f0] 0x008a9000 + 0x10f4f0 = 0x009b84f0
RTTIBaseClassDescriptor UR_CloudMoverNew 3                                                                         // [0x10f4f8] 0x008a9000 + 0x10f4f8 = 0x009b84f8
.byte 0xf8, 0x84, 0x9b, 0x00, 0x78, 0x3b, 0x9b, 0x00, 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00               // [0x10f510] 0x008a9000 + 0x10f510 = 0x009b8510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f520] 0x008a9000 + 0x10f520 = 0x009b8520
.byte 0x04, 0x00, 0x00, 0x00, 0x10, 0x85, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f530] 0x008a9000 + 0x10f530 = 0x009b8530
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x8e, 0xc0, 0x00, 0x28, 0x85, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f540] 0x008a9000 + 0x10f540 = 0x009b8540
RTTIBaseClassDescriptor UR_CloudGather 3                                                                           // [0x10f550] 0x008a9000 + 0x10f550 = 0x009b8550
.byte 0x50, 0x85, 0x9b, 0x00, 0xc0, 0x38, 0x9b, 0x00                                                               // [0x10f568] 0x008a9000 + 0x10f568 = 0x009b8568
.byte 0x70, 0x38, 0x9b, 0x00, 0x98, 0x07, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f570] 0x008a9000 + 0x10f570 = 0x009b8570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0x85, 0x9b, 0x00               // [0x10f580] 0x008a9000 + 0x10f580 = 0x009b8580
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x87, 0xc0, 0x00               // [0x10f590] 0x008a9000 + 0x10f590 = 0x009b8590
.byte 0x80, 0x85, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f5a0] 0x008a9000 + 0x10f5a0 = 0x009b85a0
RTTIBaseClassDescriptor CollectionData@UR_StormCast 4                                                              // [0x10f5a8] 0x008a9000 + 0x10f5a8 = 0x009b85a8
.byte 0xa8, 0x85, 0x9b, 0x00, 0x80, 0xef, 0x9a, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10f5c0] 0x008a9000 + 0x10f5c0 = 0x009b85c0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f5d0] 0x008a9000 + 0x10f5d0 = 0x009b85d0
.byte 0x05, 0x00, 0x00, 0x00, 0xc0, 0x85, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f5e0] 0x008a9000 + 0x10f5e0 = 0x009b85e0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x98, 0xc0, 0x00, 0xd8, 0x85, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f5f0] 0x008a9000 + 0x10f5f0 = 0x009b85f0
RTTIBaseClassDescriptor AtomData@UR_StormCast 4                                                                    // [0x10f600] 0x008a9000 + 0x10f600 = 0x009b8600
.byte 0x00, 0x86, 0x9b, 0x00, 0x10, 0xef, 0x9a, 0x00                                                               // [0x10f618] 0x008a9000 + 0x10f618 = 0x009b8618
.byte 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f620] 0x008a9000 + 0x10f620 = 0x009b8620
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x86, 0x9b, 0x00               // [0x10f630] 0x008a9000 + 0x10f630 = 0x009b8630
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x98, 0xc0, 0x00               // [0x10f640] 0x008a9000 + 0x10f640 = 0x009b8640
.byte 0x30, 0x86, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f650] 0x008a9000 + 0x10f650 = 0x009b8650
RTTIBaseClassDescriptor PuzzlePig 11                                                                               // [0x10f658] 0x008a9000 + 0x10f658 = 0x009b8658
.byte 0x58, 0x86, 0x9b, 0x00, 0x78, 0x70, 0x9a, 0x00, 0x08, 0x70, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00               // [0x10f670] 0x008a9000 + 0x10f670 = 0x009b8670
.byte 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00               // [0x10f680] 0x008a9000 + 0x10f680 = 0x009b8680
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10f690] 0x008a9000 + 0x10f690 = 0x009b8690
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f6a0] 0x008a9000 + 0x10f6a0 = 0x009b86a0
.byte 0x0c, 0x00, 0x00, 0x00, 0x70, 0x86, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f6b0] 0x008a9000 + 0x10f6b0 = 0x009b86b0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x99, 0xc0, 0x00, 0xa8, 0x86, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f6c0] 0x008a9000 + 0x10f6c0 = 0x009b86c0
RTTIBaseClassDescriptor PuzzleTortoise 11                                                                          // [0x10f6d0] 0x008a9000 + 0x10f6d0 = 0x009b86d0
.byte 0xd0, 0x86, 0x9b, 0x00, 0x58, 0x71, 0x9a, 0x00                                                               // [0x10f6e8] 0x008a9000 + 0x10f6e8 = 0x009b86e8
.byte 0xe8, 0x70, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0x10f6f0] 0x008a9000 + 0x10f6f0 = 0x009b86f0
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x10f700] 0x008a9000 + 0x10f700 = 0x009b8700
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f710] 0x008a9000 + 0x10f710 = 0x009b8710
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xe8, 0x86, 0x9b, 0x00               // [0x10f720] 0x008a9000 + 0x10f720 = 0x009b8720
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x99, 0xc0, 0x00               // [0x10f730] 0x008a9000 + 0x10f730 = 0x009b8730
.byte 0x20, 0x87, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f740] 0x008a9000 + 0x10f740 = 0x009b8740
RTTIBaseClassDescriptor PieceCow 9                                                                                 // [0x10f748] 0x008a9000 + 0x10f748 = 0x009b8748
RTTIBaseClassDescriptor PuzzleCow 10                                                                               // [0x10f760] 0x008a9000 + 0x10f760 = 0x009b8760
.byte 0x60, 0x87, 0x9b, 0x00, 0x48, 0x87, 0x9b, 0x00                                                               // [0x10f778] 0x008a9000 + 0x10f778 = 0x009b8778
.byte 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00, 0x00, 0x6c, 0x9a, 0x00               // [0x10f780] 0x008a9000 + 0x10f780 = 0x009b8780
.byte 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x10f790] 0x008a9000 + 0x10f790 = 0x009b8790
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f7a0] 0x008a9000 + 0x10f7a0 = 0x009b87a0
.byte 0x0b, 0x00, 0x00, 0x00, 0x78, 0x87, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f7b0] 0x008a9000 + 0x10f7b0 = 0x009b87b0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x99, 0xc0, 0x00, 0xa8, 0x87, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f7c0] 0x008a9000 + 0x10f7c0 = 0x009b87c0
RTTIBaseClassDescriptor PuzzleHorse 11                                                                             // [0x10f7d0] 0x008a9000 + 0x10f7d0 = 0x009b87d0
.byte 0xd0, 0x87, 0x9b, 0x00, 0x28, 0x6f, 0x9a, 0x00                                                               // [0x10f7e8] 0x008a9000 + 0x10f7e8 = 0x009b87e8
.byte 0xb8, 0x6e, 0x9a, 0x00, 0x00, 0x6d, 0x9a, 0x00, 0x30, 0x6c, 0x9a, 0x00, 0x18, 0x6c, 0x9a, 0x00               // [0x10f7f0] 0x008a9000 + 0x10f7f0 = 0x009b87f0
.byte 0x00, 0x6c, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x10f800] 0x008a9000 + 0x10f800 = 0x009b8800
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f810] 0x008a9000 + 0x10f810 = 0x009b8810
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xe8, 0x87, 0x9b, 0x00               // [0x10f820] 0x008a9000 + 0x10f820 = 0x009b8820
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x99, 0xc0, 0x00               // [0x10f830] 0x008a9000 + 0x10f830 = 0x009b8830
.byte 0x20, 0x88, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10f840] 0x008a9000 + 0x10f840 = 0x009b8840
RTTIBaseClassDescriptor ChessGamePuzzle 3                                                                          // [0x10f848] 0x008a9000 + 0x10f848 = 0x009b8848
.byte 0x48, 0x88, 0x9b, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10f860] 0x008a9000 + 0x10f860 = 0x009b8860
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f870] 0x008a9000 + 0x10f870 = 0x009b8870
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0x88, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f880] 0x008a9000 + 0x10f880 = 0x009b8880
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x99, 0xc0, 0x00, 0x78, 0x88, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f890] 0x008a9000 + 0x10f890 = 0x009b8890
RTTIBaseClassDescriptor ChessPion 9                                                                                // [0x10f8a0] 0x008a9000 + 0x10f8a0 = 0x009b88a0
.byte 0xa0, 0x88, 0x9b, 0x00, 0xd0, 0x8a, 0x9b, 0x00                                                               // [0x10f8b8] 0x008a9000 + 0x10f8b8 = 0x009b88b8
.byte 0x48, 0x79, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x10f8c0] 0x008a9000 + 0x10f8c0 = 0x009b88c0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10f8d0] 0x008a9000 + 0x10f8d0 = 0x009b88d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f8e0] 0x008a9000 + 0x10f8e0 = 0x009b88e0
.byte 0x0a, 0x00, 0x00, 0x00, 0xb8, 0x88, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f8f0] 0x008a9000 + 0x10f8f0 = 0x009b88f0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x99, 0xc0, 0x00, 0xe8, 0x88, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f900] 0x008a9000 + 0x10f900 = 0x009b8900
RTTIBaseClassDescriptor ChessMad 9                                                                                 // [0x10f910] 0x008a9000 + 0x10f910 = 0x009b8910
.byte 0x10, 0x89, 0x9b, 0x00, 0xd0, 0x8a, 0x9b, 0x00                                                               // [0x10f928] 0x008a9000 + 0x10f928 = 0x009b8928
.byte 0x48, 0x79, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x10f930] 0x008a9000 + 0x10f930 = 0x009b8930
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10f940] 0x008a9000 + 0x10f940 = 0x009b8940
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f950] 0x008a9000 + 0x10f950 = 0x009b8950
.byte 0x0a, 0x00, 0x00, 0x00, 0x28, 0x89, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f960] 0x008a9000 + 0x10f960 = 0x009b8960
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0x99, 0xc0, 0x00, 0x58, 0x89, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f970] 0x008a9000 + 0x10f970 = 0x009b8970
RTTIBaseClassDescriptor ChessTower 9                                                                               // [0x10f980] 0x008a9000 + 0x10f980 = 0x009b8980
.byte 0x80, 0x89, 0x9b, 0x00, 0xd0, 0x8a, 0x9b, 0x00                                                               // [0x10f998] 0x008a9000 + 0x10f998 = 0x009b8998
.byte 0x48, 0x79, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x10f9a0] 0x008a9000 + 0x10f9a0 = 0x009b89a0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10f9b0] 0x008a9000 + 0x10f9b0 = 0x009b89b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f9c0] 0x008a9000 + 0x10f9c0 = 0x009b89c0
.byte 0x0a, 0x00, 0x00, 0x00, 0x98, 0x89, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f9d0] 0x008a9000 + 0x10f9d0 = 0x009b89d0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x9a, 0xc0, 0x00, 0xc8, 0x89, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10f9e0] 0x008a9000 + 0x10f9e0 = 0x009b89e0
RTTIBaseClassDescriptor ChessQueen 9                                                                               // [0x10f9f0] 0x008a9000 + 0x10f9f0 = 0x009b89f0
.byte 0xf0, 0x89, 0x9b, 0x00, 0xd0, 0x8a, 0x9b, 0x00                                                               // [0x10fa08] 0x008a9000 + 0x10fa08 = 0x009b8a08
.byte 0x48, 0x79, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x10fa10] 0x008a9000 + 0x10fa10 = 0x009b8a10
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10fa20] 0x008a9000 + 0x10fa20 = 0x009b8a20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fa30] 0x008a9000 + 0x10fa30 = 0x009b8a30
.byte 0x0a, 0x00, 0x00, 0x00, 0x08, 0x8a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fa40] 0x008a9000 + 0x10fa40 = 0x009b8a40
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0x9a, 0xc0, 0x00, 0x38, 0x8a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fa50] 0x008a9000 + 0x10fa50 = 0x009b8a50
RTTIBaseClassDescriptor ChessKnight 9                                                                              // [0x10fa60] 0x008a9000 + 0x10fa60 = 0x009b8a60
.byte 0x60, 0x8a, 0x9b, 0x00, 0xd0, 0x8a, 0x9b, 0x00                                                               // [0x10fa78] 0x008a9000 + 0x10fa78 = 0x009b8a78
.byte 0x48, 0x79, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x10fa80] 0x008a9000 + 0x10fa80 = 0x009b8a80
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x10fa90] 0x008a9000 + 0x10fa90 = 0x009b8a90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10faa0] 0x008a9000 + 0x10faa0 = 0x009b8aa0
.byte 0x0a, 0x00, 0x00, 0x00, 0x78, 0x8a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fab0] 0x008a9000 + 0x10fab0 = 0x009b8ab0
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x9a, 0xc0, 0x00, 0xa8, 0x8a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fac0] 0x008a9000 + 0x10fac0 = 0x009b8ac0
RTTIBaseClassDescriptor ChessPiece 8                                                                               // [0x10fad0] 0x008a9000 + 0x10fad0 = 0x009b8ad0
RTTIBaseClassDescriptor ChessKing 9                                                                                // [0x10fae8] 0x008a9000 + 0x10fae8 = 0x009b8ae8
.byte 0xe8, 0x8a, 0x9b, 0x00, 0xd0, 0x8a, 0x9b, 0x00, 0x48, 0x79, 0x9a, 0x00, 0x30, 0x79, 0x9a, 0x00               // [0x10fb00] 0x008a9000 + 0x10fb00 = 0x009b8b00
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x10fb10] 0x008a9000 + 0x10fb10 = 0x009b8b10
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fb20] 0x008a9000 + 0x10fb20 = 0x009b8b20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x9b, 0x00               // [0x10fb30] 0x008a9000 + 0x10fb30 = 0x009b8b30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x9a, 0xc0, 0x00               // [0x10fb40] 0x008a9000 + 0x10fb40 = 0x009b8b40
.byte 0x30, 0x8b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fb50] 0x008a9000 + 0x10fb50 = 0x009b8b50
RTTIBaseClassDescriptor GSquadInfo 2                                                                               // [0x10fb58] 0x008a9000 + 0x10fb58 = 0x009b8b58
.byte 0x58, 0x8b, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fb70] 0x008a9000 + 0x10fb70 = 0x009b8b70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0x8b, 0x9b, 0x00               // [0x10fb80] 0x008a9000 + 0x10fb80 = 0x009b8b80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x9c, 0xc0, 0x00               // [0x10fb90] 0x008a9000 + 0x10fb90 = 0x009b8b90
.byte 0x80, 0x8b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fba0] 0x008a9000 + 0x10fba0 = 0x009b8ba0
RTTIBaseClassDescriptor GRankInfo 2                                                                                // [0x10fba8] 0x008a9000 + 0x10fba8 = 0x009b8ba8
.byte 0xa8, 0x8b, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fbc0] 0x008a9000 + 0x10fbc0 = 0x009b8bc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x8b, 0x9b, 0x00               // [0x10fbd0] 0x008a9000 + 0x10fbd0 = 0x009b8bd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x9c, 0xc0, 0x00               // [0x10fbe0] 0x008a9000 + 0x10fbe0 = 0x009b8be0
.byte 0xd0, 0x8b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fbf0] 0x008a9000 + 0x10fbf0 = 0x009b8bf0
RTTIBaseClassDescriptor Rank 1                                                                                     // [0x10fbf8] 0x008a9000 + 0x10fbf8 = 0x009b8bf8
.byte 0xf8, 0x8b, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fc10] 0x008a9000 + 0x10fc10 = 0x009b8c10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x8c, 0x9b, 0x00               // [0x10fc20] 0x008a9000 + 0x10fc20 = 0x009b8c20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x9c, 0xc0, 0x00               // [0x10fc30] 0x008a9000 + 0x10fc30 = 0x009b8c30
.byte 0x20, 0x8c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fc40] 0x008a9000 + 0x10fc40 = 0x009b8c40
RTTIBaseClassDescriptor ReactionInfo 2                                                                             // [0x10fc48] 0x008a9000 + 0x10fc48 = 0x009b8c48
.byte 0x48, 0x8c, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fc60] 0x008a9000 + 0x10fc60 = 0x009b8c60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0x8c, 0x9b, 0x00               // [0x10fc70] 0x008a9000 + 0x10fc70 = 0x009b8c70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xbb, 0xc0, 0x00               // [0x10fc80] 0x008a9000 + 0x10fc80 = 0x009b8c80
.byte 0x70, 0x8c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fc90] 0x008a9000 + 0x10fc90 = 0x009b8c90
RTTIBaseClassDescriptor GRewardInfo 5                                                                              // [0x10fc98] 0x008a9000 + 0x10fc98 = 0x009b8c98
.byte 0x98, 0x8c, 0x9b, 0x00, 0xe8, 0x7a, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00               // [0x10fcb0] 0x008a9000 + 0x10fcb0 = 0x009b8cb0
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fcc0] 0x008a9000 + 0x10fcc0 = 0x009b8cc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb0, 0x8c, 0x9b, 0x00               // [0x10fcd0] 0x008a9000 + 0x10fcd0 = 0x009b8cd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xbe, 0xc0, 0x00               // [0x10fce0] 0x008a9000 + 0x10fce0 = 0x009b8ce0
.byte 0xd0, 0x8c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fcf0] 0x008a9000 + 0x10fcf0 = 0x009b8cf0
RTTIBaseClassDescriptor GRewardProgress 2                                                                          // [0x10fcf8] 0x008a9000 + 0x10fcf8 = 0x009b8cf8
.byte 0xf8, 0x8c, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fd10] 0x008a9000 + 0x10fd10 = 0x009b8d10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x8d, 0x9b, 0x00               // [0x10fd20] 0x008a9000 + 0x10fd20 = 0x009b8d20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xbe, 0xc0, 0x00               // [0x10fd30] 0x008a9000 + 0x10fd30 = 0x009b8d30
.byte 0x20, 0x8d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fd40] 0x008a9000 + 0x10fd40 = 0x009b8d40
RTTIBaseClassDescriptor Reward 6                                                                                   // [0x10fd48] 0x008a9000 + 0x10fd48 = 0x009b8d48
.byte 0x48, 0x8d, 0x9b, 0x00, 0x60, 0x7b, 0x9a, 0x00, 0xe8, 0x6b, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x10fd60] 0x008a9000 + 0x10fd60 = 0x009b8d60
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fd70] 0x008a9000 + 0x10fd70 = 0x009b8d70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x8d, 0x9b, 0x00               // [0x10fd80] 0x008a9000 + 0x10fd80 = 0x009b8d80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xbe, 0xc0, 0x00               // [0x10fd90] 0x008a9000 + 0x10fd90 = 0x009b8d90
.byte 0x80, 0x8d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fda0] 0x008a9000 + 0x10fda0 = 0x009b8da0
RTTIBaseClassDescriptor GScaffoldInfo 5                                                                            // [0x10fda8] 0x008a9000 + 0x10fda8 = 0x009b8da8
.byte 0xa8, 0x8d, 0x9b, 0x00, 0xe8, 0x7a, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00               // [0x10fdc0] 0x008a9000 + 0x10fdc0 = 0x009b8dc0
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fdd0] 0x008a9000 + 0x10fdd0 = 0x009b8dd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc0, 0x8d, 0x9b, 0x00               // [0x10fde0] 0x008a9000 + 0x10fde0 = 0x009b8de0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xbf, 0xc0, 0x00               // [0x10fdf0] 0x008a9000 + 0x10fdf0 = 0x009b8df0
.byte 0xe0, 0x8d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fe00] 0x008a9000 + 0x10fe00 = 0x009b8e00
RTTIBaseClassDescriptor GScript 1                                                                                  // [0x10fe08] 0x008a9000 + 0x10fe08 = 0x009b8e08
.byte 0x08, 0x8e, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fe20] 0x008a9000 + 0x10fe20 = 0x009b8e20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x8e, 0x9b, 0x00               // [0x10fe30] 0x008a9000 + 0x10fe30 = 0x009b8e30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc0, 0xc0, 0x00               // [0x10fe40] 0x008a9000 + 0x10fe40 = 0x009b8e40
.byte 0x30, 0x8e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fe50] 0x008a9000 + 0x10fe50 = 0x009b8e50
RTTIBaseClassDescriptor GScriptOpposingCreature 2                                                                  // [0x10fe58] 0x008a9000 + 0x10fe58 = 0x009b8e58
.byte 0x58, 0x8e, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fe70] 0x008a9000 + 0x10fe70 = 0x009b8e70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0x8e, 0x9b, 0x00               // [0x10fe80] 0x008a9000 + 0x10fe80 = 0x009b8e80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xcd, 0xc0, 0x00               // [0x10fe90] 0x008a9000 + 0x10fe90 = 0x009b8e90
.byte 0x80, 0x8e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10fea0] 0x008a9000 + 0x10fea0 = 0x009b8ea0
RTTIBaseClassDescriptor LHDLL 0                                                                                    // [0x10fea8] 0x008a9000 + 0x10fea8 = 0x009b8ea8
RTTIBaseClassDescriptor ScriptDLL 1                                                                                // [0x10fec0] 0x008a9000 + 0x10fec0 = 0x009b8ec0
.byte 0xc0, 0x8e, 0x9b, 0x00, 0xa8, 0x8e, 0x9b, 0x00                                                               // [0x10fed8] 0x008a9000 + 0x10fed8 = 0x009b8ed8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fee0] 0x008a9000 + 0x10fee0 = 0x009b8ee0
.byte 0x02, 0x00, 0x00, 0x00, 0xd8, 0x8e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10fef0] 0x008a9000 + 0x10fef0 = 0x009b8ef0
.byte 0x00, 0x00, 0x00, 0x00, 0x20, 0xd1, 0xc0, 0x00, 0xe8, 0x8e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ff00] 0x008a9000 + 0x10ff00 = 0x009b8f00
RTTIBaseClassDescriptor GScriptHighlightInfo 4                                                                     // [0x10ff10] 0x008a9000 + 0x10ff10 = 0x009b8f10
.byte 0x10, 0x8f, 0x9b, 0x00, 0xa0, 0xc3, 0x9a, 0x00                                                               // [0x10ff28] 0x008a9000 + 0x10ff28 = 0x009b8f28
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ff30] 0x008a9000 + 0x10ff30 = 0x009b8f30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x28, 0x8f, 0x9b, 0x00               // [0x10ff40] 0x008a9000 + 0x10ff40 = 0x009b8f40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x05, 0xc2, 0x00               // [0x10ff50] 0x008a9000 + 0x10ff50 = 0x009b8f50
.byte 0x40, 0x8f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ff60] 0x008a9000 + 0x10ff60 = 0x009b8f60
RTTIBaseClassDescriptor ScriptHighlight 6                                                                          // [0x10ff68] 0x008a9000 + 0x10ff68 = 0x009b8f68
.byte 0x68, 0x8f, 0x9b, 0x00, 0x80, 0xc4, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00               // [0x10ff80] 0x008a9000 + 0x10ff80 = 0x009b8f80
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ff90] 0x008a9000 + 0x10ff90 = 0x009b8f90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x80, 0x8f, 0x9b, 0x00               // [0x10ffa0] 0x008a9000 + 0x10ffa0 = 0x009b8fa0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xd8, 0xc0, 0x00               // [0x10ffb0] 0x008a9000 + 0x10ffb0 = 0x009b8fb0
.byte 0xa0, 0x8f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x10ffc0] 0x008a9000 + 0x10ffc0 = 0x009b8fc0
RTTIBaseClassDescriptor ScriptManage 1                                                                             // [0x10ffc8] 0x008a9000 + 0x10ffc8 = 0x009b8fc8
.byte 0xc8, 0x8f, 0x9b, 0x00, 0x38, 0xd9, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x10ffe0] 0x008a9000 + 0x10ffe0 = 0x009b8fe0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe0, 0x8f, 0x9b, 0x00               // [0x10fff0] 0x008a9000 + 0x10fff0 = 0x009b8ff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x07, 0xc2, 0x00               // [0x110000] 0x008a9000 + 0x110000 = 0x009b9000
.byte 0xf0, 0x8f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110010] 0x008a9000 + 0x110010 = 0x009b9010
RTTIBaseClassDescriptor SecretCreature 0                                                                           // [0x110018] 0x008a9000 + 0x110018 = 0x009b9018
.byte 0x18, 0x90, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110030] 0x008a9000 + 0x110030 = 0x009b9030
.byte 0x01, 0x00, 0x00, 0x00, 0x30, 0x90, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110040] 0x008a9000 + 0x110040 = 0x009b9040
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0x0b, 0xc2, 0x00, 0x38, 0x90, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110050] 0x008a9000 + 0x110050 = 0x009b9050
RTTIBaseClassDescriptor GShowNeedsInfo 3                                                                           // [0x110060] 0x008a9000 + 0x110060 = 0x009b9060
.byte 0x60, 0x90, 0x9b, 0x00, 0x38, 0x63, 0x9a, 0x00                                                               // [0x110078] 0x008a9000 + 0x110078 = 0x009b9078
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110080] 0x008a9000 + 0x110080 = 0x009b9080
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0x90, 0x9b, 0x00               // [0x110090] 0x008a9000 + 0x110090 = 0x009b9090
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x21, 0xc2, 0x00               // [0x1100a0] 0x008a9000 + 0x1100a0 = 0x009b90a0
.byte 0x90, 0x90, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1100b0] 0x008a9000 + 0x1100b0 = 0x009b90b0
RTTIBaseClassDescriptor GConfirmation 1                                                                            // [0x1100b8] 0x008a9000 + 0x1100b8 = 0x009b90b8
.byte 0xb8, 0x90, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1100d0] 0x008a9000 + 0x1100d0 = 0x009b90d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd0, 0x90, 0x9b, 0x00               // [0x1100e0] 0x008a9000 + 0x1100e0 = 0x009b90e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x21, 0xc2, 0x00               // [0x1100f0] 0x008a9000 + 0x1100f0 = 0x009b90f0
.byte 0xe0, 0x90, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110100] 0x008a9000 + 0x110100 = 0x009b9100
RTTIBaseClassDescriptor GHelpSpritesGuidance 2                                                                     // [0x110108] 0x008a9000 + 0x110108 = 0x009b9108
.byte 0x08, 0x91, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110120] 0x008a9000 + 0x110120 = 0x009b9120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x91, 0x9b, 0x00               // [0x110130] 0x008a9000 + 0x110130 = 0x009b9130
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x21, 0xc2, 0x00               // [0x110140] 0x008a9000 + 0x110140 = 0x009b9140
.byte 0x30, 0x91, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110150] 0x008a9000 + 0x110150 = 0x009b9150
RTTIBaseClassDescriptor GGuidance 1                                                                                // [0x110158] 0x008a9000 + 0x110158 = 0x009b9158
.byte 0x58, 0x91, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110170] 0x008a9000 + 0x110170 = 0x009b9170
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x70, 0x91, 0x9b, 0x00               // [0x110180] 0x008a9000 + 0x110180 = 0x009b9180
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0xc2, 0x00               // [0x110190] 0x008a9000 + 0x110190 = 0x009b9190
.byte 0x80, 0x91, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1101a0] 0x008a9000 + 0x1101a0 = 0x009b91a0
RTTIBaseClassDescriptor GSoundInfo 2                                                                               // [0x1101a8] 0x008a9000 + 0x1101a8 = 0x009b91a8
.byte 0xa8, 0x91, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1101c0] 0x008a9000 + 0x1101c0 = 0x009b91c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x91, 0x9b, 0x00               // [0x1101d0] 0x008a9000 + 0x1101d0 = 0x009b91d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x23, 0xc2, 0x00               // [0x1101e0] 0x008a9000 + 0x1101e0 = 0x009b91e0
.byte 0xd0, 0x91, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1101f0] 0x008a9000 + 0x1101f0 = 0x009b91f0
RTTIBaseClassDescriptor SoundTag 2                                                                                 // [0x1101f8] 0x008a9000 + 0x1101f8 = 0x009b91f8
.byte 0xf8, 0x91, 0x9b, 0x00, 0xe0, 0x11, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110210] 0x008a9000 + 0x110210 = 0x009b9210
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x92, 0x9b, 0x00               // [0x110220] 0x008a9000 + 0x110220 = 0x009b9220
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x24, 0xc2, 0x00               // [0x110230] 0x008a9000 + 0x110230 = 0x009b9230
.byte 0x20, 0x92, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110240] 0x008a9000 + 0x110240 = 0x009b9240
RTTIBaseClassDescriptor GSpecialVillagerInfo 2                                                                     // [0x110248] 0x008a9000 + 0x110248 = 0x009b9248
.byte 0x48, 0x92, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110260] 0x008a9000 + 0x110260 = 0x009b9260
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0x92, 0x9b, 0x00               // [0x110270] 0x008a9000 + 0x110270 = 0x009b9270
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x25, 0xc2, 0x00               // [0x110280] 0x008a9000 + 0x110280 = 0x009b9280
.byte 0x70, 0x92, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x110290] 0x008a9000 + 0x110290 = 0x009b9290
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1102a0] 0x008a9000 + 0x1102a0 = 0x009b92a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x92, 0x9b, 0x00               // [0x1102b0] 0x008a9000 + 0x1102b0 = 0x009b92b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbe, 0x00               // [0x1102c0] 0x008a9000 + 0x1102c0 = 0x009b92c0
.byte 0xb0, 0x92, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1102d0] 0x008a9000 + 0x1102d0 = 0x009b92d0
RTTIBaseClassDescriptor SpellCreature 4                                                                            // [0x1102d8] 0x008a9000 + 0x1102d8 = 0x009b92d8
.byte 0xd8, 0x92, 0x9b, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x1102f0] 0x008a9000 + 0x1102f0 = 0x009b92f0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110300] 0x008a9000 + 0x110300 = 0x009b9300
.byte 0x05, 0x00, 0x00, 0x00, 0xf0, 0x92, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110310] 0x008a9000 + 0x110310 = 0x009b9310
.byte 0x00, 0x00, 0x00, 0x00, 0x90, 0x25, 0xc2, 0x00, 0x08, 0x93, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110320] 0x008a9000 + 0x110320 = 0x009b9320
RTTIBaseClassDescriptor SpellDispenser 7                                                                           // [0x110330] 0x008a9000 + 0x110330 = 0x009b9330
.byte 0x30, 0x93, 0x9b, 0x00, 0x38, 0x64, 0x9a, 0x00                                                               // [0x110348] 0x008a9000 + 0x110348 = 0x009b9348
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x110350] 0x008a9000 + 0x110350 = 0x009b9350
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110360] 0x008a9000 + 0x110360 = 0x009b9360
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x48, 0x93, 0x9b, 0x00               // [0x110370] 0x008a9000 + 0x110370 = 0x009b9370
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x25, 0xc2, 0x00               // [0x110380] 0x008a9000 + 0x110380 = 0x009b9380
.byte 0x70, 0x93, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110390] 0x008a9000 + 0x110390 = 0x009b9390
RTTIBaseClassDescriptor GSpellIconInfo 4                                                                           // [0x110398] 0x008a9000 + 0x110398 = 0x009b9398
.byte 0x98, 0x93, 0x9b, 0x00, 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x1103b0] 0x008a9000 + 0x1103b0 = 0x009b93b0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1103c0] 0x008a9000 + 0x1103c0 = 0x009b93c0
.byte 0x05, 0x00, 0x00, 0x00, 0xb0, 0x93, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1103d0] 0x008a9000 + 0x1103d0 = 0x009b93d0
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x26, 0xc2, 0x00, 0xc8, 0x93, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1103e0] 0x008a9000 + 0x1103e0 = 0x009b93e0
RTTIBaseClassDescriptor SpellSeedGraphic 3                                                                         // [0x1103f0] 0x008a9000 + 0x1103f0 = 0x009b93f0
.byte 0xf0, 0x93, 0x9b, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x110408] 0x008a9000 + 0x110408 = 0x009b9408
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110410] 0x008a9000 + 0x110410 = 0x009b9410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x94, 0x9b, 0x00               // [0x110420] 0x008a9000 + 0x110420 = 0x009b9420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x26, 0xc2, 0x00               // [0x110430] 0x008a9000 + 0x110430 = 0x009b9430
.byte 0x20, 0x94, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110440] 0x008a9000 + 0x110440 = 0x009b9440
RTTIBaseClassDescriptor SpellSeed 4                                                                                // [0x110448] 0x008a9000 + 0x110448 = 0x009b9448
.byte 0x48, 0x94, 0x9b, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x110460] 0x008a9000 + 0x110460 = 0x009b9460
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110470] 0x008a9000 + 0x110470 = 0x009b9470
.byte 0x05, 0x00, 0x00, 0x00, 0x60, 0x94, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110480] 0x008a9000 + 0x110480 = 0x009b9480
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0x26, 0xc2, 0x00, 0x78, 0x94, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110490] 0x008a9000 + 0x110490 = 0x009b9490
RTTIBaseClassDescriptor GSpellSystemInfo 2                                                                         // [0x1104a0] 0x008a9000 + 0x1104a0 = 0x009b94a0
.byte 0xa0, 0x94, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x1104b8] 0x008a9000 + 0x1104b8 = 0x009b94b8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1104c0] 0x008a9000 + 0x1104c0 = 0x009b94c0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0x94, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1104d0] 0x008a9000 + 0x1104d0 = 0x009b94d0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0x27, 0xc2, 0x00, 0xc8, 0x94, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1104e0] 0x008a9000 + 0x1104e0 = 0x009b94e0
RTTIBaseClassDescriptor GSpellSeedInfo 3                                                                           // [0x1104f0] 0x008a9000 + 0x1104f0 = 0x009b94f0
.byte 0xf0, 0x94, 0x9b, 0x00, 0x38, 0x63, 0x9a, 0x00                                                               // [0x110508] 0x008a9000 + 0x110508 = 0x009b9508
.byte 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110510] 0x008a9000 + 0x110510 = 0x009b9510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x95, 0x9b, 0x00               // [0x110520] 0x008a9000 + 0x110520 = 0x009b9520
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x27, 0xc2, 0x00               // [0x110530] 0x008a9000 + 0x110530 = 0x009b9530
.byte 0x20, 0x95, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110540] 0x008a9000 + 0x110540 = 0x009b9540
RTTIBaseClassDescriptor SpellShield 5                                                                              // [0x110548] 0x008a9000 + 0x110548 = 0x009b9548
.byte 0x48, 0x95, 0x9b, 0x00, 0x88, 0xdf, 0x9a, 0x00, 0x28, 0xe7, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x110560] 0x008a9000 + 0x110560 = 0x009b9560
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110570] 0x008a9000 + 0x110570 = 0x009b9570
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x60, 0x95, 0x9b, 0x00               // [0x110580] 0x008a9000 + 0x110580 = 0x009b9580
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x27, 0xc2, 0x00               // [0x110590] 0x008a9000 + 0x110590 = 0x009b9590
.byte 0x80, 0x95, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1105a0] 0x008a9000 + 0x1105a0 = 0x009b95a0
RTTIBaseClassDescriptor GMapShieldInfo 4                                                                           // [0x1105a8] 0x008a9000 + 0x1105a8 = 0x009b95a8
.byte 0xa8, 0x95, 0x9b, 0x00, 0xa0, 0xc3, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x1105c0] 0x008a9000 + 0x1105c0 = 0x009b95c0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1105d0] 0x008a9000 + 0x1105d0 = 0x009b95d0
.byte 0x05, 0x00, 0x00, 0x00, 0xc0, 0x95, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1105e0] 0x008a9000 + 0x1105e0 = 0x009b95e0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x27, 0xc2, 0x00, 0xd8, 0x95, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1105f0] 0x008a9000 + 0x1105f0 = 0x009b95f0
RTTIBaseClassDescriptor MapShield 6                                                                                // [0x110600] 0x008a9000 + 0x110600 = 0x009b9600
.byte 0x00, 0x96, 0x9b, 0x00, 0x80, 0xc4, 0x9a, 0x00                                                               // [0x110618] 0x008a9000 + 0x110618 = 0x009b9618
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x110620] 0x008a9000 + 0x110620 = 0x009b9620
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110630] 0x008a9000 + 0x110630 = 0x009b9630
.byte 0x07, 0x00, 0x00, 0x00, 0x18, 0x96, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110640] 0x008a9000 + 0x110640 = 0x009b9640
.byte 0x00, 0x00, 0x00, 0x00, 0xe8, 0x27, 0xc2, 0x00, 0x38, 0x96, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110650] 0x008a9000 + 0x110650 = 0x009b9650
RTTIBaseClassDescriptor MagicShield 7                                                                              // [0x110660] 0x008a9000 + 0x110660 = 0x009b9660
.byte 0x60, 0x96, 0x9b, 0x00, 0x00, 0x96, 0x9b, 0x00                                                               // [0x110678] 0x008a9000 + 0x110678 = 0x009b9678
.byte 0x80, 0xc4, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x110680] 0x008a9000 + 0x110680 = 0x009b9680
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110690] 0x008a9000 + 0x110690 = 0x009b9690
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x78, 0x96, 0x9b, 0x00               // [0x1106a0] 0x008a9000 + 0x1106a0 = 0x009b96a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x28, 0xc2, 0x00               // [0x1106b0] 0x008a9000 + 0x1106b0 = 0x009b96b0
.byte 0xa0, 0x96, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1106c0] 0x008a9000 + 0x1106c0 = 0x009b96c0
RTTIBaseClassDescriptor PhysicalShield 7                                                                           // [0x1106c8] 0x008a9000 + 0x1106c8 = 0x009b96c8
.byte 0xc8, 0x96, 0x9b, 0x00, 0x00, 0x96, 0x9b, 0x00, 0x80, 0xc4, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x1106e0] 0x008a9000 + 0x1106e0 = 0x009b96e0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1106f0] 0x008a9000 + 0x1106f0 = 0x009b96f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110700] 0x008a9000 + 0x110700 = 0x009b9700
.byte 0x08, 0x00, 0x00, 0x00, 0xe0, 0x96, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110710] 0x008a9000 + 0x110710 = 0x009b9710
.byte 0x00, 0x00, 0x00, 0x00, 0x40, 0x28, 0xc2, 0x00, 0x08, 0x97, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110720] 0x008a9000 + 0x110720 = 0x009b9720
RTTIBaseClassDescriptor SpellStormAndTornado 4                                                                     // [0x110730] 0x008a9000 + 0x110730 = 0x009b9730
.byte 0x30, 0x97, 0x9b, 0x00, 0x28, 0xe7, 0x9a, 0x00                                                               // [0x110748] 0x008a9000 + 0x110748 = 0x009b9748
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110750] 0x008a9000 + 0x110750 = 0x009b9750
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x48, 0x97, 0x9b, 0x00               // [0x110760] 0x008a9000 + 0x110760 = 0x009b9760
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x97, 0xc0, 0x00               // [0x110770] 0x008a9000 + 0x110770 = 0x009b9770
.byte 0x60, 0x97, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110780] 0x008a9000 + 0x110780 = 0x009b9780
RTTIBaseClassDescriptor GSpookyVoiceInfo 2                                                                         // [0x110788] 0x008a9000 + 0x110788 = 0x009b9788
.byte 0x88, 0x97, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1107a0] 0x008a9000 + 0x1107a0 = 0x009b97a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa0, 0x97, 0x9b, 0x00               // [0x1107b0] 0x008a9000 + 0x1107b0 = 0x009b97b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x28, 0xc2, 0x00               // [0x1107c0] 0x008a9000 + 0x1107c0 = 0x009b97c0
.byte 0xb0, 0x97, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1107d0] 0x008a9000 + 0x1107d0 = 0x009b97d0
RTTIBaseClassDescriptor GSpookyVoices 1                                                                            // [0x1107d8] 0x008a9000 + 0x1107d8 = 0x009b97d8
.byte 0xd8, 0x97, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1107f0] 0x008a9000 + 0x1107f0 = 0x009b97f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0x97, 0x9b, 0x00               // [0x110800] 0x008a9000 + 0x110800 = 0x009b9800
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x28, 0xc2, 0x00               // [0x110810] 0x008a9000 + 0x110810 = 0x009b9810
.byte 0x00, 0x98, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110820] 0x008a9000 + 0x110820 = 0x009b9820
RTTIBaseClassDescriptor FireEffect 2                                                                               // [0x110828] 0x008a9000 + 0x110828 = 0x009b9828
.byte 0x28, 0x98, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110840] 0x008a9000 + 0x110840 = 0x009b9840
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x98, 0x9b, 0x00               // [0x110850] 0x008a9000 + 0x110850 = 0x009b9850
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x29, 0xc2, 0x00               // [0x110860] 0x008a9000 + 0x110860 = 0x009b9860
.byte 0x50, 0x98, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110870] 0x008a9000 + 0x110870 = 0x009b9870
.byte 0x40, 0xd2, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110878] 0x008a9000 + 0x110878 = 0x009b9878
.byte 0x14, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x110880] 0x008a9000 + 0x110880 = 0x009b9880
.byte 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00                                                               // [0x110888] 0x008a9000 + 0x110888 = 0x009b9888
RTTIBaseClassDescriptor FireGraphic 4                                                                              // [0x110890] 0x008a9000 + 0x110890 = 0x009b9890
.byte 0x90, 0x98, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00                                                               // [0x1108a8] 0x008a9000 + 0x1108a8 = 0x009b98a8
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x78, 0x98, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1108b0] 0x008a9000 + 0x1108b0 = 0x009b98b0
.byte 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x98, 0x9b, 0x00               // [0x1108c0] 0x008a9000 + 0x1108c0 = 0x009b98c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x29, 0xc2, 0x00               // [0x1108d0] 0x008a9000 + 0x1108d0 = 0x009b98d0
.byte 0xc0, 0x98, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1108e0] 0x008a9000 + 0x1108e0 = 0x009b98e0
RTTIBaseClassDescriptor SpritePos@FireGraphic 3                                                                    // [0x1108e8] 0x008a9000 + 0x1108e8 = 0x009b98e8
.byte 0xe8, 0x98, 0x9b, 0x00, 0x50, 0x90, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x110900] 0x008a9000 + 0x110900 = 0x009b9900
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110910] 0x008a9000 + 0x110910 = 0x009b9910
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x99, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110920] 0x008a9000 + 0x110920 = 0x009b9920
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0x29, 0xc2, 0x00, 0x18, 0x99, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110930] 0x008a9000 + 0x110930 = 0x009b9930
RTTIBaseClassDescriptor GTerrainMaterialInfo 2                                                                     // [0x110940] 0x008a9000 + 0x110940 = 0x009b9940
.byte 0x40, 0x99, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x110958] 0x008a9000 + 0x110958 = 0x009b9958
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110960] 0x008a9000 + 0x110960 = 0x009b9960
.byte 0x03, 0x00, 0x00, 0x00, 0x58, 0x99, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110970] 0x008a9000 + 0x110970 = 0x009b9970
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0x2a, 0xc2, 0x00, 0x68, 0x99, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110980] 0x008a9000 + 0x110980 = 0x009b9980
RTTIBaseClassDescriptor GTotemStatueInfo 4                                                                         // [0x110990] 0x008a9000 + 0x110990 = 0x009b9990
.byte 0x90, 0x99, 0x9b, 0x00, 0x50, 0x63, 0x9a, 0x00                                                               // [0x1109a8] 0x008a9000 + 0x1109a8 = 0x009b99a8
.byte 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1109b0] 0x008a9000 + 0x1109b0 = 0x009b99b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x99, 0x9b, 0x00               // [0x1109c0] 0x008a9000 + 0x1109c0 = 0x009b99c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x2b, 0xc2, 0x00               // [0x1109d0] 0x008a9000 + 0x1109d0 = 0x009b99d0
.byte 0xc0, 0x99, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1109e0] 0x008a9000 + 0x1109e0 = 0x009b99e0
RTTIBaseClassDescriptor GTownInfo 3                                                                                // [0x1109e8] 0x008a9000 + 0x1109e8 = 0x009b99e8
.byte 0xe8, 0x99, 0x9b, 0x00, 0x50, 0x8d, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x110a00] 0x008a9000 + 0x110a00 = 0x009b9a00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110a10] 0x008a9000 + 0x110a10 = 0x009b9a10
.byte 0x04, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110a20] 0x008a9000 + 0x110a20 = 0x009b9a20
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0x2b, 0xc2, 0x00, 0x18, 0x9a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110a30] 0x008a9000 + 0x110a30 = 0x009b9a30
RTTIBaseClassDescriptor TownStats 1                                                                                // [0x110a40] 0x008a9000 + 0x110a40 = 0x009b9a40
.byte 0x40, 0x9a, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00                                                               // [0x110a58] 0x008a9000 + 0x110a58 = 0x009b9a58
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110a60] 0x008a9000 + 0x110a60 = 0x009b9a60
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0x9a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110a70] 0x008a9000 + 0x110a70 = 0x009b9a70
.byte 0x00, 0x00, 0x00, 0x00, 0xa0, 0x2b, 0xc2, 0x00, 0x68, 0x9a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110a80] 0x008a9000 + 0x110a80 = 0x009b9a80
RTTIBaseClassDescriptor Town 4                                                                                     // [0x110a90] 0x008a9000 + 0x110a90 = 0x009b9a90
.byte 0x90, 0x9a, 0x9b, 0x00, 0xc0, 0x8d, 0x9a, 0x00                                                               // [0x110aa8] 0x008a9000 + 0x110aa8 = 0x009b9aa8
.byte 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110ab0] 0x008a9000 + 0x110ab0 = 0x009b9ab0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x9a, 0x9b, 0x00               // [0x110ac0] 0x008a9000 + 0x110ac0 = 0x009b9ac0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xfa, 0x9c, 0x00               // [0x110ad0] 0x008a9000 + 0x110ad0 = 0x009b9ad0
.byte 0xc0, 0x9a, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110ae0] 0x008a9000 + 0x110ae0 = 0x009b9ae0
RTTIBaseClassDescriptor GBelief 1                                                                                  // [0x110ae8] 0x008a9000 + 0x110ae8 = 0x009b9ae8
.byte 0xe8, 0x9a, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110b00] 0x008a9000 + 0x110b00 = 0x009b9b00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x9b, 0x9b, 0x00               // [0x110b10] 0x008a9000 + 0x110b10 = 0x009b9b10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x2b, 0xc2, 0x00               // [0x110b20] 0x008a9000 + 0x110b20 = 0x009b9b20
.byte 0x10, 0x9b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110b30] 0x008a9000 + 0x110b30 = 0x009b9b30
RTTIBaseClassDescriptor TownCreatureInfo 2                                                                         // [0x110b38] 0x008a9000 + 0x110b38 = 0x009b9b38
.byte 0x38, 0x9b, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110b50] 0x008a9000 + 0x110b50 = 0x009b9b50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0x9b, 0x9b, 0x00               // [0x110b60] 0x008a9000 + 0x110b60 = 0x009b9b60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0xc2, 0x00               // [0x110b70] 0x008a9000 + 0x110b70 = 0x009b9b70
.byte 0x60, 0x9b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110b80] 0x008a9000 + 0x110b80 = 0x009b9b80
RTTIBaseClassDescriptor VarSpeedValueSpinner 2                                                                     // [0x110b88] 0x008a9000 + 0x110b88 = 0x009b9b88
.byte 0x88, 0x9b, 0x9b, 0x00, 0xf0, 0x83, 0x9a, 0x00, 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110ba0] 0x008a9000 + 0x110ba0 = 0x009b9ba0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa0, 0x9b, 0x9b, 0x00               // [0x110bb0] 0x008a9000 + 0x110bb0 = 0x009b9bb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x2c, 0xc2, 0x00               // [0x110bc0] 0x008a9000 + 0x110bc0 = 0x009b9bc0
.byte 0xb0, 0x9b, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110bd0] 0x008a9000 + 0x110bd0 = 0x009b9bd0
RTTIBaseClassDescriptor GTownDesireInfo 2                                                                          // [0x110bd8] 0x008a9000 + 0x110bd8 = 0x009b9bd8
.byte 0xd8, 0x9b, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110bf0] 0x008a9000 + 0x110bf0 = 0x009b9bf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x9b, 0x9b, 0x00               // [0x110c00] 0x008a9000 + 0x110c00 = 0x009b9c00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x2c, 0xc2, 0x00               // [0x110c10] 0x008a9000 + 0x110c10 = 0x009b9c10
.byte 0x00, 0x9c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110c20] 0x008a9000 + 0x110c20 = 0x009b9c20
RTTIBaseClassDescriptor TownDesire 1                                                                               // [0x110c28] 0x008a9000 + 0x110c28 = 0x009b9c28
.byte 0x28, 0x9c, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110c40] 0x008a9000 + 0x110c40 = 0x009b9c40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x9c, 0x9b, 0x00               // [0x110c50] 0x008a9000 + 0x110c50 = 0x009b9c50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x2d, 0xc2, 0x00               // [0x110c60] 0x008a9000 + 0x110c60 = 0x009b9c60
.byte 0x50, 0x9c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110c70] 0x008a9000 + 0x110c70 = 0x009b9c70
RTTIBaseClassDescriptor GTreeInfo 4                                                                                // [0x110c78] 0x008a9000 + 0x110c78 = 0x009b9c78
.byte 0x78, 0x9c, 0x9b, 0x00, 0xa0, 0xc3, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x110c90] 0x008a9000 + 0x110c90 = 0x009b9c90
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110ca0] 0x008a9000 + 0x110ca0 = 0x009b9ca0
.byte 0x05, 0x00, 0x00, 0x00, 0x90, 0x9c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110cb0] 0x008a9000 + 0x110cb0 = 0x009b9cb0
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x2f, 0xc2, 0x00, 0xa8, 0x9c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110cc0] 0x008a9000 + 0x110cc0 = 0x009b9cc0
RTTIBaseClassDescriptor GTribeInfo 2                                                                               // [0x110cd0] 0x008a9000 + 0x110cd0 = 0x009b9cd0
.byte 0xd0, 0x9c, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x110ce8] 0x008a9000 + 0x110ce8 = 0x009b9ce8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110cf0] 0x008a9000 + 0x110cf0 = 0x009b9cf0
.byte 0x03, 0x00, 0x00, 0x00, 0xe8, 0x9c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110d00] 0x008a9000 + 0x110d00 = 0x009b9d00
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0xc2, 0x00, 0xf8, 0x9c, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110d10] 0x008a9000 + 0x110d10 = 0x009b9d10
RTTIBaseClassDescriptor GVillagerInfo 6                                                                            // [0x110d20] 0x008a9000 + 0x110d20 = 0x009b9d20
.byte 0x20, 0x9d, 0x9b, 0x00, 0x20, 0x6b, 0x9a, 0x00                                                               // [0x110d38] 0x008a9000 + 0x110d38 = 0x009b9d38
.byte 0x08, 0x6b, 0x9a, 0x00, 0xf0, 0x6a, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00               // [0x110d40] 0x008a9000 + 0x110d40 = 0x009b9d40
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110d50] 0x008a9000 + 0x110d50 = 0x009b9d50
.byte 0x07, 0x00, 0x00, 0x00, 0x38, 0x9d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110d60] 0x008a9000 + 0x110d60 = 0x009b9d60
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0x35, 0xc2, 0x00, 0x58, 0x9d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110d70] 0x008a9000 + 0x110d70 = 0x009b9d70
RTTIBaseClassDescriptor MissionaryControl 3                                                                        // [0x110d80] 0x008a9000 + 0x110d80 = 0x009b9d80
.byte 0x80, 0x9d, 0x9b, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x110d98] 0x008a9000 + 0x110d98 = 0x009b9d98
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110da0] 0x008a9000 + 0x110da0 = 0x009b9da0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x9d, 0x9b, 0x00               // [0x110db0] 0x008a9000 + 0x110db0 = 0x009b9db0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x36, 0xc2, 0x00               // [0x110dc0] 0x008a9000 + 0x110dc0 = 0x009b9dc0
.byte 0xb0, 0x9d, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110dd0] 0x008a9000 + 0x110dd0 = 0x009b9dd0
RTTIBaseClassDescriptorStruct VillagerName 1                                                                       // [0x110dd8] 0x008a9000 + 0x110dd8 = 0x009b9dd8
.byte 0xd8, 0x9d, 0x9b, 0x00, 0xd8, 0x83, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110df0] 0x008a9000 + 0x110df0 = 0x009b9df0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0x9d, 0x9b, 0x00               // [0x110e00] 0x008a9000 + 0x110e00 = 0x009b9e00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x45, 0xc2, 0x00               // [0x110e10] 0x008a9000 + 0x110e10 = 0x009b9e10
.byte 0x00, 0x9e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110e20] 0x008a9000 + 0x110e20 = 0x009b9e20
RTTIBaseClassDescriptor GVillagerStateTableInfo 2                                                                  // [0x110e28] 0x008a9000 + 0x110e28 = 0x009b9e28
.byte 0x28, 0x9e, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110e40] 0x008a9000 + 0x110e40 = 0x009b9e40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x9e, 0x9b, 0x00               // [0x110e50] 0x008a9000 + 0x110e50 = 0x009b9e50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x46, 0xc2, 0x00               // [0x110e60] 0x008a9000 + 0x110e60 = 0x009b9e60
.byte 0x50, 0x9e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110e70] 0x008a9000 + 0x110e70 = 0x009b9e70
RTTIBaseClassDescriptor GVirtualInfluence 1                                                                        // [0x110e78] 0x008a9000 + 0x110e78 = 0x009b9e78
.byte 0x78, 0x9e, 0x9b, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110e90] 0x008a9000 + 0x110e90 = 0x009b9e90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0x9e, 0x9b, 0x00               // [0x110ea0] 0x008a9000 + 0x110ea0 = 0x009b9ea0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x46, 0xc2, 0x00               // [0x110eb0] 0x008a9000 + 0x110eb0 = 0x009b9eb0
.byte 0xa0, 0x9e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110ec0] 0x008a9000 + 0x110ec0 = 0x009b9ec0
RTTIBaseClassDescriptor Fragment 8                                                                                 // [0x110ec8] 0x008a9000 + 0x110ec8 = 0x009b9ec8
.byte 0xc8, 0x9e, 0x9b, 0x00, 0x10, 0x85, 0x9a, 0x00, 0xf8, 0x84, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00               // [0x110ee0] 0x008a9000 + 0x110ee0 = 0x009b9ee0
.byte 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00               // [0x110ef0] 0x008a9000 + 0x110ef0 = 0x009b9ef0
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110f00] 0x008a9000 + 0x110f00 = 0x009b9f00
.byte 0x09, 0x00, 0x00, 0x00, 0xe0, 0x9e, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110f10] 0x008a9000 + 0x110f10 = 0x009b9f10
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x10, 0x9d, 0x00, 0x08, 0x9f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110f20] 0x008a9000 + 0x110f20 = 0x009b9f20
RTTIBaseClassDescriptor VortexSave 2                                                                               // [0x110f30] 0x008a9000 + 0x110f30 = 0x009b9f30
.byte 0x30, 0x9f, 0x9b, 0x00, 0xc0, 0x63, 0x9a, 0x00                                                               // [0x110f48] 0x008a9000 + 0x110f48 = 0x009b9f48
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110f50] 0x008a9000 + 0x110f50 = 0x009b9f50
.byte 0x03, 0x00, 0x00, 0x00, 0x48, 0x9f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110f60] 0x008a9000 + 0x110f60 = 0x009b9f60
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0x46, 0xc2, 0x00, 0x58, 0x9f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110f70] 0x008a9000 + 0x110f70 = 0x009b9f70
RTTIBaseClassDescriptor WayPoint 3                                                                                 // [0x110f80] 0x008a9000 + 0x110f80 = 0x009b9f80
.byte 0x80, 0x9f, 0x9b, 0x00, 0xd8, 0x63, 0x9a, 0x00                                                               // [0x110f98] 0x008a9000 + 0x110f98 = 0x009b9f98
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110fa0] 0x008a9000 + 0x110fa0 = 0x009b9fa0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0x9f, 0x9b, 0x00               // [0x110fb0] 0x008a9000 + 0x110fb0 = 0x009b9fb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x47, 0xc2, 0x00               // [0x110fc0] 0x008a9000 + 0x110fc0 = 0x009b9fc0
.byte 0xb0, 0x9f, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x110fd0] 0x008a9000 + 0x110fd0 = 0x009b9fd0
RTTIBaseClassDescriptor GWeatherInfo 2                                                                             // [0x110fd8] 0x008a9000 + 0x110fd8 = 0x009b9fd8
.byte 0xd8, 0x9f, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x110ff0] 0x008a9000 + 0x110ff0 = 0x009b9ff0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x9f, 0x9b, 0x00               // [0x111000] 0x008a9000 + 0x111000 = 0x009ba000
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x47, 0xc2, 0x00               // [0x111010] 0x008a9000 + 0x111010 = 0x009ba010
.byte 0x00, 0xa0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111020] 0x008a9000 + 0x111020 = 0x009ba020
RTTIBaseClassDescriptorStruct LH3DStorm 0                                                                          // [0x111028] 0x008a9000 + 0x111028 = 0x009ba028
RTTIBaseClassDescriptor GWeather 1                                                                                 // [0x111040] 0x008a9000 + 0x111040 = 0x009ba040
.byte 0x40, 0xa0, 0x9b, 0x00, 0x28, 0xa0, 0x9b, 0x00                                                               // [0x111058] 0x008a9000 + 0x111058 = 0x009ba058
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111060] 0x008a9000 + 0x111060 = 0x009ba060
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xa0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111070] 0x008a9000 + 0x111070 = 0x009ba070
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0x47, 0xc2, 0x00, 0x68, 0xa0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111080] 0x008a9000 + 0x111080 = 0x009ba080
RTTIBaseClassDescriptor GClimateInfo 2                                                                             // [0x111090] 0x008a9000 + 0x111090 = 0x009ba090
.byte 0x90, 0xa0, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x1110a8] 0x008a9000 + 0x1110a8 = 0x009ba0a8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1110b0] 0x008a9000 + 0x1110b0 = 0x009ba0b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0xa0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1110c0] 0x008a9000 + 0x1110c0 = 0x009ba0c0
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0x47, 0xc2, 0x00, 0xb8, 0xa0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1110d0] 0x008a9000 + 0x1110d0 = 0x009ba0d0
RTTIBaseClassDescriptor GClimateRainInfo 2                                                                         // [0x1110e0] 0x008a9000 + 0x1110e0 = 0x009ba0e0
.byte 0xe0, 0xa0, 0x9b, 0x00, 0x20, 0x63, 0x9a, 0x00                                                               // [0x1110f8] 0x008a9000 + 0x1110f8 = 0x009ba0f8
.byte 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111100] 0x008a9000 + 0x111100 = 0x009ba100
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xa0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111110] 0x008a9000 + 0x111110 = 0x009ba110
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x49, 0xc2, 0x00, 0x08, 0xa1, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111120] 0x008a9000 + 0x111120 = 0x009ba120
RTTIBaseClassDescriptor ?$basic_ifstream@DU?$char_traits@D@std@@@std 3                                             // [0x111130] 0x008a9000 + 0x111130 = 0x009ba130
.byte 0x30, 0xa1, 0x9b, 0x00, 0x30, 0x06, 0x9b, 0x00                                                               // [0x111148] 0x008a9000 + 0x111148 = 0x009ba148
.byte 0x18, 0x06, 0x9b, 0x00, 0x00, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111150] 0x008a9000 + 0x111150 = 0x009ba150
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0xa1, 0x9b, 0x00               // [0x111160] 0x008a9000 + 0x111160 = 0x009ba160
.byte 0x00, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x4b, 0xc2, 0x00               // [0x111170] 0x008a9000 + 0x111170 = 0x009ba170
.byte 0x60, 0xa1, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111180] 0x008a9000 + 0x111180 = 0x009ba180
RTTIBaseClassDescriptor ?$basic_filebuf@DU?$char_traits@D@std@@@std 1                                              // [0x111188] 0x008a9000 + 0x111188 = 0x009ba188
.byte 0x88, 0xa1, 0x9b, 0x00, 0xc8, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1111a0] 0x008a9000 + 0x1111a0 = 0x009ba1a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa0, 0xa1, 0x9b, 0x00               // [0x1111b0] 0x008a9000 + 0x1111b0 = 0x009ba1b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4c, 0xc2, 0x00               // [0x1111c0] 0x008a9000 + 0x1111c0 = 0x009ba1c0
.byte 0xb0, 0xa1, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1111d0] 0x008a9000 + 0x1111d0 = 0x009ba1d0
RTTIBaseClassDescriptor codecvt_base@std 1                                                                         // [0x1111d8] 0x008a9000 + 0x1111d8 = 0x009ba1d8
RTTIBaseClassDescriptor ?$codecvt@DDH@std 2                                                                        // [0x1111f0] 0x008a9000 + 0x1111f0 = 0x009ba1f0
.byte 0xf0, 0xa1, 0x9b, 0x00, 0xd8, 0xa1, 0x9b, 0x00                                                               // [0x111208] 0x008a9000 + 0x111208 = 0x009ba208
.byte 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111210] 0x008a9000 + 0x111210 = 0x009ba210
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0xa2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111220] 0x008a9000 + 0x111220 = 0x009ba220
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x4c, 0xc2, 0x00, 0x18, 0xa2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111230] 0x008a9000 + 0x111230 = 0x009ba230
.byte 0x40, 0xd2, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111240] 0x008a9000 + 0x111240 = 0x009ba240
.byte 0xc4, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff                                                               // [0x111248] 0x008a9000 + 0x111248 = 0x009ba248
.byte 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00                                                               // [0x111250] 0x008a9000 + 0x111250 = 0x009ba250
RTTIBaseClassDescriptor Workshop 8                                                                                 // [0x111258] 0x008a9000 + 0x111258 = 0x009ba258
.byte 0x58, 0xa2, 0x9b, 0x00, 0x38, 0x64, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x111270] 0x008a9000 + 0x111270 = 0x009ba270
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x111280] 0x008a9000 + 0x111280 = 0x009ba280
.byte 0x40, 0xa2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x111290] 0x008a9000 + 0x111290 = 0x009ba290
.byte 0x09, 0x00, 0x00, 0x00, 0x70, 0xa2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1112a0] 0x008a9000 + 0x1112a0 = 0x009ba2a0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0x1a, 0xbf, 0x00, 0x98, 0xa2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1112b0] 0x008a9000 + 0x1112b0 = 0x009ba2b0
RTTIBaseClassDescriptor GWorshipSiteInfo 5                                                                         // [0x1112c0] 0x008a9000 + 0x1112c0 = 0x009ba2c0
.byte 0xc0, 0xa2, 0x9b, 0x00, 0x30, 0x8e, 0x9a, 0x00                                                               // [0x1112d8] 0x008a9000 + 0x1112d8 = 0x009ba2d8
.byte 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1112e0] 0x008a9000 + 0x1112e0 = 0x009ba2e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1112f0] 0x008a9000 + 0x1112f0 = 0x009ba2f0
.byte 0x06, 0x00, 0x00, 0x00, 0xd8, 0xa2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111300] 0x008a9000 + 0x111300 = 0x009ba300
.byte 0x00, 0x00, 0x00, 0x00, 0xf0, 0x4c, 0xc2, 0x00, 0xf8, 0xa2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111310] 0x008a9000 + 0x111310 = 0x009ba310
RTTIBaseClassDescriptor PlannedWorshipSite 5                                                                       // [0x111320] 0x008a9000 + 0x111320 = 0x009ba320
.byte 0x20, 0xa3, 0x9b, 0x00, 0x80, 0x8f, 0x9a, 0x00                                                               // [0x111338] 0x008a9000 + 0x111338 = 0x009ba338
.byte 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x111340] 0x008a9000 + 0x111340 = 0x009ba340
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111350] 0x008a9000 + 0x111350 = 0x009ba350
.byte 0x06, 0x00, 0x00, 0x00, 0x38, 0xa3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111360] 0x008a9000 + 0x111360 = 0x009ba360
.byte 0x00, 0x00, 0x00, 0x00, 0x30, 0x4d, 0xc2, 0x00, 0x58, 0xa3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111370] 0x008a9000 + 0x111370 = 0x009ba370
RTTIBaseClassDescriptor GWorshipSiteUpgradeInfo 5                                                                  // [0x111380] 0x008a9000 + 0x111380 = 0x009ba380
.byte 0x80, 0xa3, 0x9b, 0x00, 0xb8, 0x78, 0x9a, 0x00                                                               // [0x111398] 0x008a9000 + 0x111398 = 0x009ba398
.byte 0x50, 0x63, 0x9a, 0x00, 0x38, 0x63, 0x9a, 0x00, 0x20, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1113a0] 0x008a9000 + 0x1113a0 = 0x009ba3a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1113b0] 0x008a9000 + 0x1113b0 = 0x009ba3b0
.byte 0x06, 0x00, 0x00, 0x00, 0x98, 0xa3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1113c0] 0x008a9000 + 0x1113c0 = 0x009ba3c0
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0x4d, 0xc2, 0x00, 0xb8, 0xa3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1113d0] 0x008a9000 + 0x1113d0 = 0x009ba3d0
RTTIBaseClassDescriptor WorshipSiteUpgrade 7                                                                       // [0x1113e0] 0x008a9000 + 0x1113e0 = 0x009ba3e0
.byte 0xe0, 0xa3, 0x9b, 0x00, 0x30, 0x79, 0x9a, 0x00                                                               // [0x1113f8] 0x008a9000 + 0x1113f8 = 0x009ba3f8
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x111400] 0x008a9000 + 0x111400 = 0x009ba400
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111410] 0x008a9000 + 0x111410 = 0x009ba410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf8, 0xa3, 0x9b, 0x00               // [0x111420] 0x008a9000 + 0x111420 = 0x009ba420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x4d, 0xc2, 0x00               // [0x111430] 0x008a9000 + 0x111430 = 0x009ba430
.byte 0x20, 0xa4, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111440] 0x008a9000 + 0x111440 = 0x009ba440
RTTIBaseClassDescriptor PlannedWorshipSiteUpgrade 5                                                                // [0x111448] 0x008a9000 + 0x111448 = 0x009ba448
.byte 0x48, 0xa4, 0x9b, 0x00, 0x58, 0xc0, 0x9a, 0x00, 0x98, 0x64, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x111460] 0x008a9000 + 0x111460 = 0x009ba460
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111470] 0x008a9000 + 0x111470 = 0x009ba470
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x60, 0xa4, 0x9b, 0x00               // [0x111480] 0x008a9000 + 0x111480 = 0x009ba480
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x4d, 0xc2, 0x00               // [0x111490] 0x008a9000 + 0x111490 = 0x009ba490
.byte 0x80, 0xa4, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1114a0] 0x008a9000 + 0x1114a0 = 0x009ba4a0
RTTIBaseClassDescriptor WorshipSpellIcon 7                                                                         // [0x1114a8] 0x008a9000 + 0x1114a8 = 0x009ba4a8
.byte 0xa8, 0xa4, 0x9b, 0x00, 0xf8, 0xe7, 0x9a, 0x00, 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00               // [0x1114c0] 0x008a9000 + 0x1114c0 = 0x009ba4c0
.byte 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00, 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00               // [0x1114d0] 0x008a9000 + 0x1114d0 = 0x009ba4d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1114e0] 0x008a9000 + 0x1114e0 = 0x009ba4e0
.byte 0x08, 0x00, 0x00, 0x00, 0xc0, 0xa4, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1114f0] 0x008a9000 + 0x1114f0 = 0x009ba4f0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x41, 0xbf, 0x00, 0xe8, 0xa4, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111500] 0x008a9000 + 0x111500 = 0x009ba500
RTTIBaseClassDescriptor WorshipTotem 7                                                                             // [0x111510] 0x008a9000 + 0x111510 = 0x009ba510
.byte 0x10, 0xa5, 0x9b, 0x00, 0x00, 0x8f, 0x9a, 0x00                                                               // [0x111528] 0x008a9000 + 0x111528 = 0x009ba528
.byte 0x20, 0x64, 0x9a, 0x00, 0x08, 0x64, 0x9a, 0x00, 0xf0, 0x63, 0x9a, 0x00, 0xd8, 0x63, 0x9a, 0x00               // [0x111530] 0x008a9000 + 0x111530 = 0x009ba530
.byte 0xc0, 0x63, 0x9a, 0x00, 0x08, 0x63, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111540] 0x008a9000 + 0x111540 = 0x009ba540
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x28, 0xa5, 0x9b, 0x00               // [0x111550] 0x008a9000 + 0x111550 = 0x009ba550
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x8e, 0x9c, 0x00               // [0x111560] 0x008a9000 + 0x111560 = 0x009ba560
.byte 0x50, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111570] 0x008a9000 + 0x111570 = 0x009ba570
RTTIBaseClassDescriptor TempleRoom 0                                                                               // [0x111578] 0x008a9000 + 0x111578 = 0x009ba578
RTTIBaseClassDescriptor PictureRoomBase 1                                                                          // [0x111590] 0x008a9000 + 0x111590 = 0x009ba590
RTTIBaseClassDescriptor ChallengeRoom 2                                                                            // [0x1115a8] 0x008a9000 + 0x1115a8 = 0x009ba5a8
.byte 0xa8, 0xa5, 0x9b, 0x00, 0x90, 0xa5, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1115c0] 0x008a9000 + 0x1115c0 = 0x009ba5c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xc0, 0xa5, 0x9b, 0x00               // [0x1115d0] 0x008a9000 + 0x1115d0 = 0x009ba5d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x4e, 0xc2, 0x00               // [0x1115e0] 0x008a9000 + 0x1115e0 = 0x009ba5e0
.byte 0xd0, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1115f0] 0x008a9000 + 0x1115f0 = 0x009ba5f0
RTTIBaseClassDescriptor CreatureRoom 1                                                                             // [0x1115f8] 0x008a9000 + 0x1115f8 = 0x009ba5f8
.byte 0xf8, 0xa5, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111610] 0x008a9000 + 0x111610 = 0x009ba610
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0xa6, 0x9b, 0x00               // [0x111620] 0x008a9000 + 0x111620 = 0x009ba620
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x74, 0xc2, 0x00               // [0x111630] 0x008a9000 + 0x111630 = 0x009ba630
.byte 0x20, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111640] 0x008a9000 + 0x111640 = 0x009ba640
RTTIBaseClassDescriptor CreatureCitadel 3                                                                          // [0x111648] 0x008a9000 + 0x111648 = 0x009ba648
.byte 0x48, 0xa6, 0x9b, 0x00, 0x10, 0x99, 0x9a, 0x00, 0x88, 0x92, 0x9a, 0x00, 0xd8, 0x83, 0x9a, 0x00               // [0x111660] 0x008a9000 + 0x111660 = 0x009ba660
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111670] 0x008a9000 + 0x111670 = 0x009ba670
.byte 0x04, 0x00, 0x00, 0x00, 0x60, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111680] 0x008a9000 + 0x111680 = 0x009ba680
.byte 0x00, 0x00, 0x00, 0x00, 0x88, 0x75, 0xc2, 0x00, 0x78, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111690] 0x008a9000 + 0x111690 = 0x009ba690
RTTIBaseClassDescriptorStruct InnerCamera 0                                                                        // [0x1116a0] 0x008a9000 + 0x1116a0 = 0x009ba6a0
RTTIBaseClassDescriptorStruct CreatureRoomCamera 1                                                                 // [0x1116b8] 0x008a9000 + 0x1116b8 = 0x009ba6b8
.byte 0xb8, 0xa6, 0x9b, 0x00, 0xa0, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1116d0] 0x008a9000 + 0x1116d0 = 0x009ba6d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd0, 0xa6, 0x9b, 0x00               // [0x1116e0] 0x008a9000 + 0x1116e0 = 0x009ba6e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x75, 0xc2, 0x00               // [0x1116f0] 0x008a9000 + 0x1116f0 = 0x009ba6f0
.byte 0xe0, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111700] 0x008a9000 + 0x111700 = 0x009ba700
RTTIBaseClassDescriptor CreditsRoom 2                                                                              // [0x111708] 0x008a9000 + 0x111708 = 0x009ba708
.byte 0x08, 0xa7, 0x9b, 0x00, 0x90, 0xa5, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111720] 0x008a9000 + 0x111720 = 0x009ba720
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0xa7, 0x9b, 0x00               // [0x111730] 0x008a9000 + 0x111730 = 0x009ba730
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7d, 0xc2, 0x00               // [0x111740] 0x008a9000 + 0x111740 = 0x009ba740
.byte 0x30, 0xa7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111750] 0x008a9000 + 0x111750 = 0x009ba750
RTTIBaseClassDescriptor GameOptionsRoom 2                                                                          // [0x111758] 0x008a9000 + 0x111758 = 0x009ba758
.byte 0x58, 0xa7, 0x9b, 0x00, 0x90, 0xa5, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111770] 0x008a9000 + 0x111770 = 0x009ba770
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0xa7, 0x9b, 0x00               // [0x111780] 0x008a9000 + 0x111780 = 0x009ba780
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x82, 0xc2, 0x00               // [0x111790] 0x008a9000 + 0x111790 = 0x009ba790
.byte 0x80, 0xa7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1117a0] 0x008a9000 + 0x1117a0 = 0x009ba7a0
RTTIBaseClassDescriptor SubOptionEntry 0                                                                           // [0x1117a8] 0x008a9000 + 0x1117a8 = 0x009ba7a8
.byte 0xa8, 0xa7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1117c0] 0x008a9000 + 0x1117c0 = 0x009ba7c0
.byte 0x01, 0x00, 0x00, 0x00, 0xc0, 0xa7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1117d0] 0x008a9000 + 0x1117d0 = 0x009ba7d0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x84, 0xc2, 0x00, 0xc8, 0xa7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1117e0] 0x008a9000 + 0x1117e0 = 0x009ba7e0
RTTIBaseClassDescriptor SubOptionEntryButton 1                                                                     // [0x1117f0] 0x008a9000 + 0x1117f0 = 0x009ba7f0
.byte 0xf0, 0xa7, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x111808] 0x008a9000 + 0x111808 = 0x009ba808
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111810] 0x008a9000 + 0x111810 = 0x009ba810
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0xa8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111820] 0x008a9000 + 0x111820 = 0x009ba820
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x84, 0xc2, 0x00, 0x18, 0xa8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111830] 0x008a9000 + 0x111830 = 0x009ba830
RTTIBaseClassDescriptor SubOptionEntryCheckBoxUnChecked 1                                                          // [0x111840] 0x008a9000 + 0x111840 = 0x009ba840
.byte 0x40, 0xa8, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x111858] 0x008a9000 + 0x111858 = 0x009ba858
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111860] 0x008a9000 + 0x111860 = 0x009ba860
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xa8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111870] 0x008a9000 + 0x111870 = 0x009ba870
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x84, 0xc2, 0x00, 0x68, 0xa8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111880] 0x008a9000 + 0x111880 = 0x009ba880
RTTIBaseClassDescriptor SubOptionEntryCheckBoxChecked 1                                                            // [0x111890] 0x008a9000 + 0x111890 = 0x009ba890
.byte 0x90, 0xa8, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x1118a8] 0x008a9000 + 0x1118a8 = 0x009ba8a8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1118b0] 0x008a9000 + 0x1118b0 = 0x009ba8b0
.byte 0x02, 0x00, 0x00, 0x00, 0xa8, 0xa8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1118c0] 0x008a9000 + 0x1118c0 = 0x009ba8c0
.byte 0x00, 0x00, 0x00, 0x00, 0x80, 0x84, 0xc2, 0x00, 0xb8, 0xa8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1118d0] 0x008a9000 + 0x1118d0 = 0x009ba8d0
RTTIBaseClassDescriptor SubOptionEntrySlider 1                                                                     // [0x1118e0] 0x008a9000 + 0x1118e0 = 0x009ba8e0
.byte 0xe0, 0xa8, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x1118f8] 0x008a9000 + 0x1118f8 = 0x009ba8f8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111900] 0x008a9000 + 0x111900 = 0x009ba900
.byte 0x02, 0x00, 0x00, 0x00, 0xf8, 0xa8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111910] 0x008a9000 + 0x111910 = 0x009ba910
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0x84, 0xc2, 0x00, 0x08, 0xa9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111920] 0x008a9000 + 0x111920 = 0x009ba920
RTTIBaseClassDescriptor SubOptionEntryPicture 1                                                                    // [0x111930] 0x008a9000 + 0x111930 = 0x009ba930
.byte 0x30, 0xa9, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x111948] 0x008a9000 + 0x111948 = 0x009ba948
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111950] 0x008a9000 + 0x111950 = 0x009ba950
.byte 0x02, 0x00, 0x00, 0x00, 0x48, 0xa9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111960] 0x008a9000 + 0x111960 = 0x009ba960
.byte 0x00, 0x00, 0x00, 0x00, 0xd8, 0x84, 0xc2, 0x00, 0x58, 0xa9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111970] 0x008a9000 + 0x111970 = 0x009ba970
RTTIBaseClassDescriptor SubOptionEntryScroll 1                                                                     // [0x111980] 0x008a9000 + 0x111980 = 0x009ba980
.byte 0x80, 0xa9, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x111998] 0x008a9000 + 0x111998 = 0x009ba998
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1119a0] 0x008a9000 + 0x1119a0 = 0x009ba9a0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0xa9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1119b0] 0x008a9000 + 0x1119b0 = 0x009ba9b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0xc2, 0x00, 0xa8, 0xa9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1119c0] 0x008a9000 + 0x1119c0 = 0x009ba9c0
RTTIBaseClassDescriptor SubOptionEntryText 1                                                                       // [0x1119d0] 0x008a9000 + 0x1119d0 = 0x009ba9d0
.byte 0xd0, 0xa9, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x1119e8] 0x008a9000 + 0x1119e8 = 0x009ba9e8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1119f0] 0x008a9000 + 0x1119f0 = 0x009ba9f0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0xa9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111a00] 0x008a9000 + 0x111a00 = 0x009baa00
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0x85, 0xc2, 0x00, 0xf8, 0xa9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111a10] 0x008a9000 + 0x111a10 = 0x009baa10
RTTIBaseClassDescriptor SubOptionEntryListBox 1                                                                    // [0x111a20] 0x008a9000 + 0x111a20 = 0x009baa20
.byte 0x20, 0xaa, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x111a38] 0x008a9000 + 0x111a38 = 0x009baa38
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111a40] 0x008a9000 + 0x111a40 = 0x009baa40
.byte 0x02, 0x00, 0x00, 0x00, 0x38, 0xaa, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111a50] 0x008a9000 + 0x111a50 = 0x009baa50
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0x85, 0xc2, 0x00, 0x48, 0xaa, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111a60] 0x008a9000 + 0x111a60 = 0x009baa60
RTTIBaseClassDescriptor SubOptionEntryFrame 1                                                                      // [0x111a70] 0x008a9000 + 0x111a70 = 0x009baa70
.byte 0x70, 0xaa, 0x9b, 0x00, 0xa8, 0xa7, 0x9b, 0x00                                                               // [0x111a88] 0x008a9000 + 0x111a88 = 0x009baa88
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111a90] 0x008a9000 + 0x111a90 = 0x009baa90
.byte 0x02, 0x00, 0x00, 0x00, 0x88, 0xaa, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111aa0] 0x008a9000 + 0x111aa0 = 0x009baaa0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0x85, 0xc2, 0x00, 0x98, 0xaa, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111ab0] 0x008a9000 + 0x111ab0 = 0x009baab0
.byte 0x90, 0xa5, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111ac0] 0x008a9000 + 0x111ac0 = 0x009baac0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc0, 0xaa, 0x9b, 0x00               // [0x111ad0] 0x008a9000 + 0x111ad0 = 0x009baad0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x4e, 0xc2, 0x00               // [0x111ae0] 0x008a9000 + 0x111ae0 = 0x009baae0
.byte 0xd0, 0xaa, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111af0] 0x008a9000 + 0x111af0 = 0x009baaf0
RTTIBaseClassDescriptorStruct ChallengeRoomCamera 1                                                                // [0x111af8] 0x008a9000 + 0x111af8 = 0x009baaf8
.byte 0xf8, 0xaa, 0x9b, 0x00, 0xa0, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111b10] 0x008a9000 + 0x111b10 = 0x009bab10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0xab, 0x9b, 0x00               // [0x111b20] 0x008a9000 + 0x111b20 = 0x009bab20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x86, 0xc2, 0x00               // [0x111b30] 0x008a9000 + 0x111b30 = 0x009bab30
.byte 0x20, 0xab, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111b40] 0x008a9000 + 0x111b40 = 0x009bab40
RTTIBaseClassDescriptor SaveGameRoom 2                                                                             // [0x111b48] 0x008a9000 + 0x111b48 = 0x009bab48
.byte 0x48, 0xab, 0x9b, 0x00, 0x90, 0xa5, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111b60] 0x008a9000 + 0x111b60 = 0x009bab60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x60, 0xab, 0x9b, 0x00               // [0x111b70] 0x008a9000 + 0x111b70 = 0x009bab70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x86, 0xc2, 0x00               // [0x111b80] 0x008a9000 + 0x111b80 = 0x009bab80
.byte 0x70, 0xab, 0x9b, 0x00, 0xa0, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111b90] 0x008a9000 + 0x111b90 = 0x009bab90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x94, 0xab, 0x9b, 0x00               // [0x111ba0] 0x008a9000 + 0x111ba0 = 0x009baba0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x75, 0xc2, 0x00               // [0x111bb0] 0x008a9000 + 0x111bb0 = 0x009babb0
.byte 0xa0, 0xab, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111bc0] 0x008a9000 + 0x111bc0 = 0x009babc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xc4, 0xab, 0x9b, 0x00               // [0x111bd0] 0x008a9000 + 0x111bd0 = 0x009babd0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xc5, 0xbe, 0x00               // [0x111be0] 0x008a9000 + 0x111be0 = 0x009babe0
.byte 0xd0, 0xab, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111bf0] 0x008a9000 + 0x111bf0 = 0x009babf0
RTTIBaseClassDescriptor UniverseRoom 2                                                                             // [0x111bf8] 0x008a9000 + 0x111bf8 = 0x009babf8
.byte 0xf8, 0xab, 0x9b, 0x00, 0x90, 0xa5, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111c10] 0x008a9000 + 0x111c10 = 0x009bac10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0xac, 0x9b, 0x00               // [0x111c20] 0x008a9000 + 0x111c20 = 0x009bac20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xa3, 0xc2, 0x00               // [0x111c30] 0x008a9000 + 0x111c30 = 0x009bac30
.byte 0x20, 0xac, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111c40] 0x008a9000 + 0x111c40 = 0x009bac40
RTTIBaseClassDescriptor WorldRoom 1                                                                                // [0x111c48] 0x008a9000 + 0x111c48 = 0x009bac48
.byte 0x48, 0xac, 0x9b, 0x00, 0x78, 0xa5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111c60] 0x008a9000 + 0x111c60 = 0x009bac60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0xac, 0x9b, 0x00               // [0x111c70] 0x008a9000 + 0x111c70 = 0x009bac70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xc5, 0xbe, 0x00               // [0x111c80] 0x008a9000 + 0x111c80 = 0x009bac80
.byte 0x70, 0xac, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111c90] 0x008a9000 + 0x111c90 = 0x009bac90
RTTIBaseClassDescriptorStruct WorldRoomCamera 1                                                                    // [0x111c98] 0x008a9000 + 0x111c98 = 0x009bac98
.byte 0x98, 0xac, 0x9b, 0x00, 0xa0, 0xa6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111cb0] 0x008a9000 + 0x111cb0 = 0x009bacb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb0, 0xac, 0x9b, 0x00               // [0x111cc0] 0x008a9000 + 0x111cc0 = 0x009bacc0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xa5, 0xc2, 0x00               // [0x111cd0] 0x008a9000 + 0x111cd0 = 0x009bacd0
.byte 0xc0, 0xac, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111ce0] 0x008a9000 + 0x111ce0 = 0x009bace0
RTTIBaseClassDescriptor logic_error@std 1                                                                          // [0x111ce8] 0x008a9000 + 0x111ce8 = 0x009bace8
RTTIBaseClassDescriptor length_error@std 2                                                                         // [0x111d00] 0x008a9000 + 0x111d00 = 0x009bad00
.byte 0x00, 0xad, 0x9b, 0x00, 0xe8, 0xac, 0x9b, 0x00                                                               // [0x111d18] 0x008a9000 + 0x111d18 = 0x009bad18
.byte 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111d20] 0x008a9000 + 0x111d20 = 0x009bad20
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0xad, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111d30] 0x008a9000 + 0x111d30 = 0x009bad30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0xc2, 0x00, 0x28, 0xad, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111d40] 0x008a9000 + 0x111d40 = 0x009bad40
.byte 0xe8, 0xac, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111d50] 0x008a9000 + 0x111d50 = 0x009bad50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0xad, 0x9b, 0x00               // [0x111d60] 0x008a9000 + 0x111d60 = 0x009bad60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xb1, 0xc2, 0x00               // [0x111d70] 0x008a9000 + 0x111d70 = 0x009bad70
.byte 0x60, 0xad, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111d80] 0x008a9000 + 0x111d80 = 0x009bad80
RTTIBaseClassDescriptor out_of_range@std 2                                                                         // [0x111d88] 0x008a9000 + 0x111d88 = 0x009bad88
.byte 0x88, 0xad, 0x9b, 0x00, 0xe8, 0xac, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111da0] 0x008a9000 + 0x111da0 = 0x009bada0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa0, 0xad, 0x9b, 0x00               // [0x111db0] 0x008a9000 + 0x111db0 = 0x009badb0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xb2, 0xc2, 0x00               // [0x111dc0] 0x008a9000 + 0x111dc0 = 0x009badc0
.byte 0xb0, 0xad, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111dd0] 0x008a9000 + 0x111dd0 = 0x009badd0
RTTIBaseClassDescriptor runtime_error@std 1                                                                        // [0x111dd8] 0x008a9000 + 0x111dd8 = 0x009badd8
RTTIBaseClassDescriptor failure@ios_base@std 2                                                                     // [0x111df0] 0x008a9000 + 0x111df0 = 0x009badf0
.byte 0xf0, 0xad, 0x9b, 0x00, 0xd8, 0xad, 0x9b, 0x00                                                               // [0x111e08] 0x008a9000 + 0x111e08 = 0x009bae08
.byte 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111e10] 0x008a9000 + 0x111e10 = 0x009bae10
.byte 0x03, 0x00, 0x00, 0x00, 0x08, 0xae, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111e20] 0x008a9000 + 0x111e20 = 0x009bae20
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xb2, 0xc2, 0x00, 0x18, 0xae, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111e30] 0x008a9000 + 0x111e30 = 0x009bae30
.byte 0xd8, 0xad, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111e40] 0x008a9000 + 0x111e40 = 0x009bae40
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0xae, 0x9b, 0x00               // [0x111e50] 0x008a9000 + 0x111e50 = 0x009bae50
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb2, 0xc2, 0x00               // [0x111e60] 0x008a9000 + 0x111e60 = 0x009bae60
.byte 0x50, 0xae, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x111e70] 0x008a9000 + 0x111e70 = 0x009bae70
RTTIBaseClassDescriptor _Locimp@locale@std 1                                                                       // [0x111e78] 0x008a9000 + 0x111e78 = 0x009bae78
.byte 0x78, 0xae, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111e90] 0x008a9000 + 0x111e90 = 0x009bae90
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0xae, 0x9b, 0x00               // [0x111ea0] 0x008a9000 + 0x111ea0 = 0x009baea0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb2, 0xc2, 0x00               // [0x111eb0] 0x008a9000 + 0x111eb0 = 0x009baeb0
.byte 0xa0, 0xae, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xb2, 0xc2, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x111ec0] 0x008a9000 + 0x111ec0 = 0x009baec0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00               // [0x111ed0] 0x008a9000 + 0x111ed0 = 0x009baed0
RTTIBaseClassDescriptor ?$basic_istream@GU?$char_traits@G@std@@@std 2                                              // [0x111ee0] 0x008a9000 + 0x111ee0 = 0x009baee0
.byte 0xe0, 0xae, 0x9b, 0x00, 0xc8, 0xae, 0x9b, 0x00                                                               // [0x111ef8] 0x008a9000 + 0x111ef8 = 0x009baef8
.byte 0x00, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111f00] 0x008a9000 + 0x111f00 = 0x009baf00
.byte 0x03, 0x00, 0x00, 0x00, 0xf8, 0xae, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00               // [0x111f10] 0x008a9000 + 0x111f10 = 0x009baf10
.byte 0x00, 0x00, 0x00, 0x00, 0xf8, 0xb2, 0xc2, 0x00, 0x08, 0xaf, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111f20] 0x008a9000 + 0x111f20 = 0x009baf20
RTTIBaseClassDescriptor ?$basic_ostream@GU?$char_traits@G@std@@@std 2                                              // [0x111f30] 0x008a9000 + 0x111f30 = 0x009baf30
.byte 0x30, 0xaf, 0x9b, 0x00, 0xc8, 0xae, 0x9b, 0x00                                                               // [0x111f48] 0x008a9000 + 0x111f48 = 0x009baf48
.byte 0x00, 0x06, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111f50] 0x008a9000 + 0x111f50 = 0x009baf50
.byte 0x03, 0x00, 0x00, 0x00, 0x48, 0xaf, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00               // [0x111f60] 0x008a9000 + 0x111f60 = 0x009baf60
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xb3, 0xc2, 0x00, 0x58, 0xaf, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111f70] 0x008a9000 + 0x111f70 = 0x009baf70
RTTIBaseClassDescriptor ?$basic_ios@GU?$char_traits@G@std@@@std 1                                                  // [0x111f80] 0x008a9000 + 0x111f80 = 0x009baf80
.byte 0x80, 0xaf, 0x9b, 0x00, 0x30, 0x07, 0x9b, 0x00                                                               // [0x111f98] 0x008a9000 + 0x111f98 = 0x009baf98
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111fa0] 0x008a9000 + 0x111fa0 = 0x009bafa0
.byte 0x02, 0x00, 0x00, 0x00, 0x98, 0xaf, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111fb0] 0x008a9000 + 0x111fb0 = 0x009bafb0
.byte 0x00, 0x00, 0x00, 0x00, 0xc0, 0xb2, 0xc2, 0x00, 0xa8, 0xaf, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111fc0] 0x008a9000 + 0x111fc0 = 0x009bafc0
RTTIBaseClassDescriptor ?$basic_filebuf@GU?$char_traits@G@std@@@std 1                                              // [0x111fd0] 0x008a9000 + 0x111fd0 = 0x009bafd0
.byte 0xd0, 0xaf, 0x9b, 0x00, 0x20, 0xb0, 0x9b, 0x00                                                               // [0x111fe8] 0x008a9000 + 0x111fe8 = 0x009bafe8
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x111ff0] 0x008a9000 + 0x111ff0 = 0x009baff0
.byte 0x02, 0x00, 0x00, 0x00, 0xe8, 0xaf, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112000] 0x008a9000 + 0x112000 = 0x009bb000
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xb3, 0xc2, 0x00, 0xf8, 0xaf, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112010] 0x008a9000 + 0x112010 = 0x009bb010
RTTIBaseClassDescriptor ?$basic_streambuf@GU?$char_traits@G@std@@@std 0                                            // [0x112020] 0x008a9000 + 0x112020 = 0x009bb020
.byte 0x20, 0xb0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112038] 0x008a9000 + 0x112038 = 0x009bb038
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0xb0, 0x9b, 0x00               // [0x112040] 0x008a9000 + 0x112040 = 0x009bb040
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xb3, 0xc2, 0x00               // [0x112050] 0x008a9000 + 0x112050 = 0x009bb050
.byte 0x40, 0xb0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112060] 0x008a9000 + 0x112060 = 0x009bb060
RTTIBaseClassDescriptor bad_alloc@std 1                                                                            // [0x112068] 0x008a9000 + 0x112068 = 0x009bb068
.byte 0x68, 0xb0, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112080] 0x008a9000 + 0x112080 = 0x009bb080
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0xb0, 0x9b, 0x00               // [0x112090] 0x008a9000 + 0x112090 = 0x009bb090
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xb4, 0xc2, 0x00               // [0x1120a0] 0x008a9000 + 0x1120a0 = 0x009bb0a0
.byte 0x90, 0xb0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1120b0] 0x008a9000 + 0x1120b0 = 0x009bb0b0
RTTIBaseClassDescriptor ?$num_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std 1                      // [0x1120b8] 0x008a9000 + 0x1120b8 = 0x009bb0b8
.byte 0xb8, 0xb0, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1120d0] 0x008a9000 + 0x1120d0 = 0x009bb0d0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd0, 0xb0, 0x9b, 0x00               // [0x1120e0] 0x008a9000 + 0x1120e0 = 0x009bb0e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xb4, 0xc2, 0x00               // [0x1120f0] 0x008a9000 + 0x1120f0 = 0x009bb0f0
.byte 0xe0, 0xb0, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112100] 0x008a9000 + 0x112100 = 0x009bb100
RTTIBaseClassDescriptor ?$num_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std 1                      // [0x112108] 0x008a9000 + 0x112108 = 0x009bb108
.byte 0x08, 0xb1, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112120] 0x008a9000 + 0x112120 = 0x009bb120
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0xb1, 0x9b, 0x00               // [0x112130] 0x008a9000 + 0x112130 = 0x009bb130
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xb4, 0xc2, 0x00               // [0x112140] 0x008a9000 + 0x112140 = 0x009bb140
.byte 0x30, 0xb1, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112150] 0x008a9000 + 0x112150 = 0x009bb150
RTTIBaseClassDescriptor ?$time_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std 2                     // [0x112158] 0x008a9000 + 0x112158 = 0x009bb158
.byte 0x58, 0xb1, 0x9b, 0x00, 0xa8, 0xb1, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112170] 0x008a9000 + 0x112170 = 0x009bb170
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0xb1, 0x9b, 0x00               // [0x112180] 0x008a9000 + 0x112180 = 0x009bb180
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb5, 0xc2, 0x00               // [0x112190] 0x008a9000 + 0x112190 = 0x009bb190
.byte 0x80, 0xb1, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1121a0] 0x008a9000 + 0x1121a0 = 0x009bb1a0
RTTIBaseClassDescriptorStruct time_base@std 1                                                                      // [0x1121a8] 0x008a9000 + 0x1121a8 = 0x009bb1a8
RTTIBaseClassDescriptor ?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std 2                     // [0x1121c0] 0x008a9000 + 0x1121c0 = 0x009bb1c0
.byte 0xc0, 0xb1, 0x9b, 0x00, 0xa8, 0xb1, 0x9b, 0x00                                                               // [0x1121d8] 0x008a9000 + 0x1121d8 = 0x009bb1d8
.byte 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1121e0] 0x008a9000 + 0x1121e0 = 0x009bb1e0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0xb1, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1121f0] 0x008a9000 + 0x1121f0 = 0x009bb1f0
.byte 0x00, 0x00, 0x00, 0x00, 0x78, 0xb5, 0xc2, 0x00, 0xe8, 0xb1, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112200] 0x008a9000 + 0x112200 = 0x009bb200
RTTIBaseClassDescriptor ?$moneypunct@G$00@std 3                                                                    // [0x112210] 0x008a9000 + 0x112210 = 0x009bb210
.byte 0x10, 0xb2, 0x9b, 0x00, 0x80, 0xb2, 0x9b, 0x00                                                               // [0x112228] 0x008a9000 + 0x112228 = 0x009bb228
.byte 0x68, 0xb2, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112230] 0x008a9000 + 0x112230 = 0x009bb230
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0xb2, 0x9b, 0x00               // [0x112240] 0x008a9000 + 0x112240 = 0x009bb240
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xb5, 0xc2, 0x00               // [0x112250] 0x008a9000 + 0x112250 = 0x009bb250
.byte 0x40, 0xb2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112260] 0x008a9000 + 0x112260 = 0x009bb260
RTTIBaseClassDescriptorStruct money_base@std 1                                                                     // [0x112268] 0x008a9000 + 0x112268 = 0x009bb268
RTTIBaseClassDescriptor ?$_Mpunct@G@std 2                                                                          // [0x112280] 0x008a9000 + 0x112280 = 0x009bb280
RTTIBaseClassDescriptor ?$moneypunct@G$0A@@std 3                                                                   // [0x112298] 0x008a9000 + 0x112298 = 0x009bb298
.byte 0x98, 0xb2, 0x9b, 0x00, 0x80, 0xb2, 0x9b, 0x00, 0x68, 0xb2, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00               // [0x1122b0] 0x008a9000 + 0x1122b0 = 0x009bb2b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1122c0] 0x008a9000 + 0x1122c0 = 0x009bb2c0
.byte 0x04, 0x00, 0x00, 0x00, 0xb0, 0xb2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1122d0] 0x008a9000 + 0x1122d0 = 0x009bb2d0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xb6, 0xc2, 0x00, 0xc8, 0xb2, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1122e0] 0x008a9000 + 0x1122e0 = 0x009bb2e0
RTTIBaseClassDescriptor ?$money_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std 1                    // [0x1122f0] 0x008a9000 + 0x1122f0 = 0x009bb2f0
.byte 0xf0, 0xb2, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00                                                               // [0x112308] 0x008a9000 + 0x112308 = 0x009bb308
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112310] 0x008a9000 + 0x112310 = 0x009bb310
.byte 0x02, 0x00, 0x00, 0x00, 0x08, 0xb3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112320] 0x008a9000 + 0x112320 = 0x009bb320
.byte 0x00, 0x00, 0x00, 0x00, 0x60, 0xb6, 0xc2, 0x00, 0x18, 0xb3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112330] 0x008a9000 + 0x112330 = 0x009bb330
RTTIBaseClassDescriptor ?$money_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std 1                    // [0x112340] 0x008a9000 + 0x112340 = 0x009bb340
.byte 0x40, 0xb3, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00                                                               // [0x112358] 0x008a9000 + 0x112358 = 0x009bb358
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112360] 0x008a9000 + 0x112360 = 0x009bb360
.byte 0x02, 0x00, 0x00, 0x00, 0x58, 0xb3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112370] 0x008a9000 + 0x112370 = 0x009bb370
.byte 0x00, 0x00, 0x00, 0x00, 0xb8, 0xb6, 0xc2, 0x00, 0x68, 0xb3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112380] 0x008a9000 + 0x112380 = 0x009bb380
RTTIBaseClassDescriptor ?$ctype@G@std 2                                                                            // [0x112390] 0x008a9000 + 0x112390 = 0x009bb390
.byte 0x90, 0xb3, 0x9b, 0x00, 0x40, 0x0d, 0x9b, 0x00                                                               // [0x1123a8] 0x008a9000 + 0x1123a8 = 0x009bb3a8
.byte 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1123b0] 0x008a9000 + 0x1123b0 = 0x009bb3b0
.byte 0x03, 0x00, 0x00, 0x00, 0xa8, 0xb3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1123c0] 0x008a9000 + 0x1123c0 = 0x009bb3c0
.byte 0x00, 0x00, 0x00, 0x00, 0x10, 0xb7, 0xc2, 0x00, 0xb8, 0xb3, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1123d0] 0x008a9000 + 0x1123d0 = 0x009bb3d0
RTTIBaseClassDescriptorStruct messages_base@std 1                                                                  // [0x1123e0] 0x008a9000 + 0x1123e0 = 0x009bb3e0
RTTIBaseClassDescriptor ?$messages@G@std 2                                                                         // [0x1123f8] 0x008a9000 + 0x1123f8 = 0x009bb3f8
.byte 0xf8, 0xb3, 0x9b, 0x00, 0xe0, 0xb3, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112410] 0x008a9000 + 0x112410 = 0x009bb410
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0xb4, 0x9b, 0x00               // [0x112420] 0x008a9000 + 0x112420 = 0x009bb420
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xb7, 0xc2, 0x00               // [0x112430] 0x008a9000 + 0x112430 = 0x009bb430
.byte 0x20, 0xb4, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112440] 0x008a9000 + 0x112440 = 0x009bb440
RTTIBaseClassDescriptor ?$collate@G@std 1                                                                          // [0x112448] 0x008a9000 + 0x112448 = 0x009bb448
.byte 0x48, 0xb4, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112460] 0x008a9000 + 0x112460 = 0x009bb460
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0xb4, 0x9b, 0x00               // [0x112470] 0x008a9000 + 0x112470 = 0x009bb470
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xb7, 0xc2, 0x00               // [0x112480] 0x008a9000 + 0x112480 = 0x009bb480
.byte 0x70, 0xb4, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112490] 0x008a9000 + 0x112490 = 0x009bb490
RTTIBaseClassDescriptor ?$numpunct@G@std 1                                                                         // [0x112498] 0x008a9000 + 0x112498 = 0x009bb498
.byte 0x98, 0xb4, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1124b0] 0x008a9000 + 0x1124b0 = 0x009bb4b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb0, 0xb4, 0x9b, 0x00               // [0x1124c0] 0x008a9000 + 0x1124c0 = 0x009bb4c0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb7, 0xc2, 0x00               // [0x1124d0] 0x008a9000 + 0x1124d0 = 0x009bb4d0
.byte 0xc0, 0xb4, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1124e0] 0x008a9000 + 0x1124e0 = 0x009bb4e0
RTTIBaseClassDescriptor ?$codecvt@GDH@std 2                                                                        // [0x1124e8] 0x008a9000 + 0x1124e8 = 0x009bb4e8
.byte 0xe8, 0xb4, 0x9b, 0x00, 0xd8, 0xa1, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112500] 0x008a9000 + 0x112500 = 0x009bb500
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xb5, 0x9b, 0x00               // [0x112510] 0x008a9000 + 0x112510 = 0x009bb510
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xb7, 0xc2, 0x00               // [0x112520] 0x008a9000 + 0x112520 = 0x009bb520
.byte 0x10, 0xb5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xb2, 0x9b, 0x00, 0x68, 0xb2, 0x9b, 0x00               // [0x112530] 0x008a9000 + 0x112530 = 0x009bb530
.byte 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112540] 0x008a9000 + 0x112540 = 0x009bb540
.byte 0x03, 0x00, 0x00, 0x00, 0x38, 0xb5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112550] 0x008a9000 + 0x112550 = 0x009bb550
.byte 0x00, 0x00, 0x00, 0x00, 0x18, 0xb6, 0xc2, 0x00, 0x48, 0xb5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112560] 0x008a9000 + 0x112560 = 0x009bb560
RTTIBaseClassDescriptor ?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std 2                     // [0x112570] 0x008a9000 + 0x112570 = 0x009bb570
.byte 0x70, 0xb5, 0x9b, 0x00, 0xa8, 0xb1, 0x9b, 0x00                                                               // [0x112588] 0x008a9000 + 0x112588 = 0x009bb588
.byte 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112590] 0x008a9000 + 0x112590 = 0x009bb590
.byte 0x03, 0x00, 0x00, 0x00, 0x88, 0xb5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1125a0] 0x008a9000 + 0x1125a0 = 0x009bb5a0
.byte 0x00, 0x00, 0x00, 0x00, 0xd0, 0xb7, 0xc2, 0x00, 0x98, 0xb5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1125b0] 0x008a9000 + 0x1125b0 = 0x009bb5b0
RTTIBaseClassDescriptor ?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std 2                     // [0x1125c0] 0x008a9000 + 0x1125c0 = 0x009bb5c0
.byte 0xc0, 0xb5, 0x9b, 0x00, 0xa8, 0xb1, 0x9b, 0x00                                                               // [0x1125d8] 0x008a9000 + 0x1125d8 = 0x009bb5d8
.byte 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1125e0] 0x008a9000 + 0x1125e0 = 0x009bb5e0
.byte 0x03, 0x00, 0x00, 0x00, 0xd8, 0xb5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1125f0] 0x008a9000 + 0x1125f0 = 0x009bb5f0
.byte 0x00, 0x00, 0x00, 0x00, 0x28, 0xb8, 0xc2, 0x00, 0xe8, 0xb5, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112600] 0x008a9000 + 0x112600 = 0x009bb600
RTTIBaseClassDescriptor ?$moneypunct@D$00@std 3                                                                    // [0x112610] 0x008a9000 + 0x112610 = 0x009bb610
.byte 0x10, 0xb6, 0x9b, 0x00, 0x68, 0xb6, 0x9b, 0x00                                                               // [0x112628] 0x008a9000 + 0x112628 = 0x009bb628
.byte 0x68, 0xb2, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112630] 0x008a9000 + 0x112630 = 0x009bb630
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0xb6, 0x9b, 0x00               // [0x112640] 0x008a9000 + 0x112640 = 0x009bb640
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xb8, 0xc2, 0x00               // [0x112650] 0x008a9000 + 0x112650 = 0x009bb650
.byte 0x40, 0xb6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112660] 0x008a9000 + 0x112660 = 0x009bb660
RTTIBaseClassDescriptor ?$_Mpunct@D@std 2                                                                          // [0x112668] 0x008a9000 + 0x112668 = 0x009bb668
RTTIBaseClassDescriptor ?$moneypunct@D$0A@@std 3                                                                   // [0x112680] 0x008a9000 + 0x112680 = 0x009bb680
.byte 0x80, 0xb6, 0x9b, 0x00, 0x68, 0xb6, 0x9b, 0x00                                                               // [0x112698] 0x008a9000 + 0x112698 = 0x009bb698
.byte 0x68, 0xb2, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1126a0] 0x008a9000 + 0x1126a0 = 0x009bb6a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0xb6, 0x9b, 0x00               // [0x1126b0] 0x008a9000 + 0x1126b0 = 0x009bb6b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xb8, 0xc2, 0x00               // [0x1126c0] 0x008a9000 + 0x1126c0 = 0x009bb6c0
.byte 0xb0, 0xb6, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1126d0] 0x008a9000 + 0x1126d0 = 0x009bb6d0
RTTIBaseClassDescriptor ?$money_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std 1                    // [0x1126d8] 0x008a9000 + 0x1126d8 = 0x009bb6d8
.byte 0xd8, 0xb6, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1126f0] 0x008a9000 + 0x1126f0 = 0x009bb6f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0xb6, 0x9b, 0x00               // [0x112700] 0x008a9000 + 0x112700 = 0x009bb700
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xb8, 0xc2, 0x00               // [0x112710] 0x008a9000 + 0x112710 = 0x009bb710
.byte 0x00, 0xb7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112720] 0x008a9000 + 0x112720 = 0x009bb720
RTTIBaseClassDescriptor ?$money_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std 1                    // [0x112728] 0x008a9000 + 0x112728 = 0x009bb728
.byte 0x28, 0xb7, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112740] 0x008a9000 + 0x112740 = 0x009bb740
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0xb7, 0x9b, 0x00               // [0x112750] 0x008a9000 + 0x112750 = 0x009bb750
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb9, 0xc2, 0x00               // [0x112760] 0x008a9000 + 0x112760 = 0x009bb760
.byte 0x50, 0xb7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x112770] 0x008a9000 + 0x112770 = 0x009bb770
RTTIBaseClassDescriptor ?$messages@D@std 2                                                                         // [0x112778] 0x008a9000 + 0x112778 = 0x009bb778
.byte 0x78, 0xb7, 0x9b, 0x00, 0xe0, 0xb3, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112790] 0x008a9000 + 0x112790 = 0x009bb790
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x90, 0xb7, 0x9b, 0x00               // [0x1127a0] 0x008a9000 + 0x1127a0 = 0x009bb7a0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xb9, 0xc2, 0x00               // [0x1127b0] 0x008a9000 + 0x1127b0 = 0x009bb7b0
.byte 0xa0, 0xb7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00                                                               // [0x1127c0] 0x008a9000 + 0x1127c0 = 0x009bb7c0
RTTIBaseClassDescriptor ?$collate@D@std 1                                                                          // [0x1127c8] 0x008a9000 + 0x1127c8 = 0x009bb7c8
.byte 0xc8, 0xb7, 0x9b, 0x00, 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1127e0] 0x008a9000 + 0x1127e0 = 0x009bb7e0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe0, 0xb7, 0x9b, 0x00               // [0x1127f0] 0x008a9000 + 0x1127f0 = 0x009bb7f0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xb9, 0xc2, 0x00               // [0x112800] 0x008a9000 + 0x112800 = 0x009bb800
.byte 0xf0, 0xb7, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0xb6, 0x9b, 0x00, 0x68, 0xb2, 0x9b, 0x00               // [0x112810] 0x008a9000 + 0x112810 = 0x009bb810
.byte 0x78, 0x09, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112820] 0x008a9000 + 0x112820 = 0x009bb820
.byte 0x03, 0x00, 0x00, 0x00, 0x18, 0xb8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112830] 0x008a9000 + 0x112830 = 0x009bb830
.byte 0x00, 0x00, 0x00, 0x00, 0xa8, 0xb8, 0xc2, 0x00, 0x28, 0xb8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112840] 0x008a9000 + 0x112840 = 0x009bb840
.byte 0xa8, 0xd3, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112850] 0x008a9000 + 0x112850 = 0x009bb850
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xb8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112860] 0x008a9000 + 0x112860 = 0x009bb860
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x68, 0xb8, 0x9b, 0x00               // [0x112870] 0x008a9000 + 0x112870 = 0x009bb870
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xd3, 0xc2, 0x00               // [0x112880] 0x008a9000 + 0x112880 = 0x009bb880
.byte 0x70, 0xb8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd3, 0xc2, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x112890] 0x008a9000 + 0x112890 = 0x009bb890
.byte 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1128a0] 0x008a9000 + 0x1128a0 = 0x009bb8a0
.byte 0xe0, 0xd3, 0xc2, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x1128b0] 0x008a9000 + 0x1128b0 = 0x009bb8b0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xb8, 0x9b, 0x00, 0x98, 0xb8, 0x9b, 0x00               // [0x1128c0] 0x008a9000 + 0x1128c0 = 0x009bb8c0
.byte 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1128d0] 0x008a9000 + 0x1128d0 = 0x009bb8d0
.byte 0x03, 0x00, 0x00, 0x00, 0xc8, 0xb8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1128e0] 0x008a9000 + 0x1128e0 = 0x009bb8e0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xd3, 0xc2, 0x00, 0xd8, 0xb8, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1128f0] 0x008a9000 + 0x1128f0 = 0x009bb8f0
.byte 0x98, 0xb8, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112900] 0x008a9000 + 0x112900 = 0x009bb900
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x9b, 0x00               // [0x112910] 0x008a9000 + 0x112910 = 0x009bb910
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd3, 0xc2, 0x00               // [0x112920] 0x008a9000 + 0x112920 = 0x009bb920
.byte 0x10, 0xb9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd4, 0xc2, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x112930] 0x008a9000 + 0x112930 = 0x009bb930
.byte 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112940] 0x008a9000 + 0x112940 = 0x009bb940
.byte 0x38, 0xb9, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112950] 0x008a9000 + 0x112950 = 0x009bb950
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0xb9, 0x9b, 0x00               // [0x112960] 0x008a9000 + 0x112960 = 0x009bb960
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd4, 0xc2, 0x00               // [0x112970] 0x008a9000 + 0x112970 = 0x009bb970
.byte 0x60, 0xb9, 0x9b, 0x00, 0x10, 0x08, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112980] 0x008a9000 + 0x112980 = 0x009bb980
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x84, 0xb9, 0x9b, 0x00               // [0x112990] 0x008a9000 + 0x112990 = 0x009bb990
.globl DAT_009bb9a0
DAT_009bb9a0:
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0xbe, 0x00               // [0x1129a0] 0x008a9000 + 0x1129a0 = 0x009bb9a0
.byte 0x90, 0xb9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xc1, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1129b0] 0x008a9000 + 0x1129b0 = 0x009bb9b0
.byte 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1129c0] 0x008a9000 + 0x1129c0 = 0x009bb9c0
.byte 0xb8, 0xb9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1129d0] 0x008a9000 + 0x1129d0 = 0x009bb9d0
.byte 0x01, 0x00, 0x00, 0x00, 0xd0, 0xb9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1129e0] 0x008a9000 + 0x1129e0 = 0x009bb9e0
.byte 0x00, 0x00, 0x00, 0x00, 0x38, 0xc1, 0xc3, 0x00, 0xd8, 0xb9, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x1129f0] 0x008a9000 + 0x1129f0 = 0x009bb9f0
.byte 0x50, 0xc1, 0xc3, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112a00] 0x008a9000 + 0x112a00 = 0x009bba00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xc1, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112a10] 0x008a9000 + 0x112a10 = 0x009bba10
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00               // [0x112a20] 0x008a9000 + 0x112a20 = 0x009bba20
.byte 0x68, 0xc1, 0xc3, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112a30] 0x008a9000 + 0x112a30 = 0x009bba30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc1, 0xc3, 0x00, 0x04, 0x00, 0x00, 0x00               // [0x112a40] 0x008a9000 + 0x112a40 = 0x009bba40
.byte 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112a50] 0x008a9000 + 0x112a50 = 0x009bba50
.byte 0x98, 0xc1, 0xc3, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112a60] 0x008a9000 + 0x112a60 = 0x009bba60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xba, 0x9b, 0x00, 0x48, 0xba, 0x9b, 0x00               // [0x112a70] 0x008a9000 + 0x112a70 = 0x009bba70
.byte 0x30, 0xba, 0x9b, 0x00, 0x18, 0xba, 0x9b, 0x00, 0x00, 0xba, 0x9b, 0x00, 0x18, 0xba, 0x9b, 0x00               // [0x112a80] 0x008a9000 + 0x112a80 = 0x009bba80
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00               // [0x112a90] 0x008a9000 + 0x112a90 = 0x009bba90
.byte 0x06, 0x00, 0x00, 0x00, 0x78, 0xba, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00               // [0x112aa0] 0x008a9000 + 0x112aa0 = 0x009bbaa0
.byte 0x00, 0x00, 0x00, 0x00, 0x98, 0xc1, 0xc3, 0x00, 0x98, 0xba, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112ab0] 0x008a9000 + 0x112ab0 = 0x009bbab0
.byte 0xb0, 0xc1, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112ac0] 0x008a9000 + 0x112ac0 = 0x009bbac0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xc1, 0xc3, 0x00, 0x01, 0x00, 0x00, 0x00               // [0x112ad0] 0x008a9000 + 0x112ad0 = 0x009bbad0
.byte 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112ae0] 0x008a9000 + 0x112ae0 = 0x009bbae0
.byte 0xd8, 0xba, 0x9b, 0x00, 0xc0, 0xba, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112af0] 0x008a9000 + 0x112af0 = 0x009bbaf0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0xba, 0x9b, 0x00               // [0x112b00] 0x008a9000 + 0x112b00 = 0x009bbb00
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xc1, 0xc3, 0x00               // [0x112b10] 0x008a9000 + 0x112b10 = 0x009bbb10
.byte 0x00, 0xbb, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0xba, 0x9b, 0x00, 0x30, 0xba, 0x9b, 0x00               // [0x112b20] 0x008a9000 + 0x112b20 = 0x009bbb20
.byte 0x18, 0xba, 0x9b, 0x00, 0x00, 0xba, 0x9b, 0x00, 0x18, 0xba, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112b30] 0x008a9000 + 0x112b30 = 0x009bbb30
.byte 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x28, 0xbb, 0x9b, 0x00               // [0x112b40] 0x008a9000 + 0x112b40 = 0x009bbb40
.byte 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc1, 0xc3, 0x00               // [0x112b50] 0x008a9000 + 0x112b50 = 0x009bbb50
.byte 0x40, 0xbb, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xba, 0x9b, 0x00, 0x18, 0xba, 0x9b, 0x00               // [0x112b60] 0x008a9000 + 0x112b60 = 0x009bbb60
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112b70] 0x008a9000 + 0x112b70 = 0x009bbb70
.byte 0x02, 0x00, 0x00, 0x00, 0x68, 0xbb, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00               // [0x112b80] 0x008a9000 + 0x112b80 = 0x009bbb80
.byte 0x00, 0x00, 0x00, 0x00, 0x68, 0xc1, 0xc3, 0x00, 0x78, 0xbb, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112b90] 0x008a9000 + 0x112b90 = 0x009bbb90
.byte 0xe0, 0xc1, 0xc3, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112ba0] 0x008a9000 + 0x112ba0 = 0x009bbba0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xbb, 0x9b, 0x00, 0x30, 0xba, 0x9b, 0x00               // [0x112bb0] 0x008a9000 + 0x112bb0 = 0x009bbbb0
.byte 0x18, 0xba, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112bc0] 0x008a9000 + 0x112bc0 = 0x009bbbc0
.byte 0x03, 0x00, 0x00, 0x00, 0xb8, 0xbb, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00               // [0x112bd0] 0x008a9000 + 0x112bd0 = 0x009bbbd0
.byte 0x00, 0x00, 0x00, 0x00, 0xe0, 0xc1, 0xc3, 0x00, 0xc8, 0xbb, 0x9b, 0x00, 0xc0, 0xba, 0x9b, 0x00               // [0x112be0] 0x008a9000 + 0x112be0 = 0x009bbbe0
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112bf0] 0x008a9000 + 0x112bf0 = 0x009bbbf0
.byte 0x01, 0x00, 0x00, 0x00, 0xec, 0xbb, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112c00] 0x008a9000 + 0x112c00 = 0x009bbc00
.byte 0x00, 0x00, 0x00, 0x00, 0xb0, 0xc1, 0xc3, 0x00, 0xf8, 0xbb, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112c10] 0x008a9000 + 0x112c10 = 0x009bbc10
.byte 0x50, 0xc1, 0xc3, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112c20] 0x008a9000 + 0x112c20 = 0x009bbc20
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xbc, 0x9b, 0x00, 0x18, 0xba, 0x9b, 0x00               // [0x112c30] 0x008a9000 + 0x112c30 = 0x009bbc30
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112c40] 0x008a9000 + 0x112c40 = 0x009bbc40
.byte 0x02, 0x00, 0x00, 0x00, 0x38, 0xbc, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00               // [0x112c50] 0x008a9000 + 0x112c50 = 0x009bbc50
.byte 0x00, 0x00, 0x00, 0x00, 0x50, 0xc1, 0xc3, 0x00, 0x48, 0xbc, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112c60] 0x008a9000 + 0x112c60 = 0x009bbc60
.byte 0x08, 0xc2, 0xc3, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff               // [0x112c70] 0x008a9000 + 0x112c70 = 0x009bbc70
.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xbc, 0x9b, 0x00, 0x20, 0xbc, 0x9b, 0x00               // [0x112c80] 0x008a9000 + 0x112c80 = 0x009bbc80
.byte 0x18, 0xba, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112c90] 0x008a9000 + 0x112c90 = 0x009bbc90
.byte 0x03, 0x00, 0x00, 0x00, 0x88, 0xbc, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00               // [0x112ca0] 0x008a9000 + 0x112ca0 = 0x009bbca0
.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0xc2, 0xc3, 0x00, 0x98, 0xbc, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00               // [0x112cb0] 0x008a9000 + 0x112cb0 = 0x009bbcb0
