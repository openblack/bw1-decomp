.intel_syntax noprefix

.extern rdata_bytes
.extern data_bytes
.extern data1_bytes
.extern SELFMOD_bytes
.extern rsrc_bytes


.globl _jmp_addr_0x0046f7c0
.globl _jmp_addr_0x0046f7de

start_0x0046f7c0_0x0046f890:
// Snippet: asm, [0x0046f7c0, 0x0046f7e4)
_jmp_addr_0x0046f7c0:    {disp8} mov      eax, dword ptr [esp + 0x04]     // 0x0046f7c0    8b442404
                         dec              eax                             // 0x0046f7c4    48
                         cmp              eax, 0x0000009b                 // 0x0046f7c5    3d9b000000
                         {disp8} ja       _jmp_addr_0x0046f7de            // 0x0046f7ca    7712
                         xor.s            ecx, ecx                        // 0x0046f7cc    33c9
                         {disp32} mov     cl, byte ptr [eax + 0x0046f7ec] // 0x0046f7ce    8a88ecf74600
                         jmp              dword ptr [ecx*4 + 0x46f7e4]    // 0x0046f7d4    ff248de4f74600
                         xor.s            eax, eax                        // 0x0046f7db    33c0
                         ret                                              // 0x0046f7dd    c3
_jmp_addr_0x0046f7de:    mov              eax, 0x00000001                 // 0x0046f7de    b801000000
                         ret                                              // 0x0046f7e3    c3

// Snippet: jmptbl, [0x0046f7e4, 0x0046f7ec)
.byte 0xdb, 0xf7, 0x46, 0x00      // 0x0046f7e4
.byte 0xde, 0xf7, 0x46, 0x00      // 0x0046f7e8

// Snippet: ijmptbl, [0x0046f7ec, 0x0046f888)
.byte 0x00, 0x01, 0x01, 0x01      // 0x0046f7ec
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f7f0
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f7f4
.byte 0x01, 0x01, 0x00, 0x01      // 0x0046f7f8
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f7fc
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f800
.byte 0x00, 0x01, 0x01, 0x01      // 0x0046f804
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f808
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f80c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f810
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f814
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f818
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f81c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f820
.byte 0x01, 0x01, 0x00, 0x00      // 0x0046f824
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f828
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f82c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f830
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f834
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f838
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f83c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f840
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f844
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f848
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f84c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f850
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f854
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f858
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f85c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f860
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f864
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f868
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f86c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f870
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f874
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f878
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f87c
.byte 0x01, 0x01, 0x01, 0x01      // 0x0046f880
.byte 0x01, 0x01, 0x01, 0x00      // 0x0046f884

// Snippet: db, [0x0046f888, 0x0046f890)
.byte 0x90, 0x90, 0x90, 0x90      // 0x0046f888
.byte 0x90, 0x90, 0x90, 0x90      // 0x0046f88c

